eb0cd98 2025-07-08 ``` feat: Update pyproject.toml to include version and description
d2e9f3e 2025-07-08 ``` feat: Add theme management scripts and sync functionality
c67d4bb 2025-07-08 ``` feat: Add FINDER_TOKEN logging for task creation, update, toggle, and deletion
aa22405 2025-07-08 fix: Remove splitter initialization script
453529a 2025-07-08 ``` feat: Initialize main splitter with localStorage persistence
2d3f30c 2025-07-08 ``` feat: Initialize Pipulate with database persistence and profile navigation
9ac8a7a 2025-07-08 feat: Implement profile update route with full page refresh and breadcrumb handling
b5c9118 2025-07-08 fix(server): Re-initialize splitter on HTMX body swaps
e579862 2025-07-08 fix: Update profile lock icon hx_swap target
1639c35 2025-07-08 Add one-click profile lock for instant client meeting setup
6f7dcca 2025-07-08 Implement profile lock privacy feature for client meetings
511a9fa 2025-07-08 feat: Handle profile ID type conversion for highlighting
6dc9725 2025-07-08 Improve profile highlighting with better PicoCSS variables
45e36ab 2025-07-08 Highlight currently selected profile in profiles app
20e9860 2025-07-08 Make profile name clickable in headline breadcrumb
0b278d4 2025-07-08 üîß Fix task counting logic - use direct SQL
73a0806 2025-07-08 chore: Remove debug logging statements from backup system
9438c31 2025-07-08 ‚ú® Add unchecked task count to profile task links
85ee043 2025-07-08 üìö Create backup systems overview documentation
5194f8b 2025-07-08 üìö Update backup documentation for son/father/grandfather system
8913c34 2025-07-08 üéØ Implement son/father/grandfather backup system
707755a 2025-07-08 ``` üöÄ Simple file backup complete: 1/1 successful - Files can be manually dragged back to restore üìÅ BACKUP LOCATION: /backup - Files can be manually dragged back to restore ```
e3da262 2025-07-08 ``` feat: Implement simple file backup for main database
6568854 2025-07-08 feat: Add task link to profile display
45cc354 2025-07-08 feat: Add route for switching to tasks for a specific profile
7b2e8c8 2025-07-08 fix: Improve profile display in list item
bba9d23 2025-07-08 ``` üóÉÔ∏è STARTUP_BACKUP: Automatic backup completed - 12345 records secured across 5 tables
06e9796 2025-07-08 Turning off backup temporarily
a8f54ad 2025-07-08 fix: Restore working CRUD implementation from ae02752
87812ea 2025-07-08 fix: Correctly handle insert data in crud.py
e53bbee 2025-07-08 feat: Robust endpoint detection from server logs
f5b410d 2025-07-08 ``` feat: Preserve endpoint context during server restart
5bd19ba 2025-07-08 feat: Enhance history viewer with Chip O'Theseus branding and role-specific styling
f24c616 2025-07-08 feat: Introduce configurable render throttle delay
3af7ec4 2025-07-08 feat: Throttle Markdown rendering for performance
a89c4fe 2025-07-08 fix: Reduce typing delay and implement restart notification overlay
bdd4f1e 2025-07-08 chore: Disable restart notification to improve typing speed
4602e15 2025-07-08 ``` feat: Implement message deletion functionality for conversation history
f1ed6b2 2025-07-08 fix: Update Discussion History üìú display name
491f1d9 2025-07-08 fix(conversation): Prevent writing noise to conversation history
6dd06de 2025-07-08 fix: Clarify Python environment message in flake.nix
a29ad82 2025-07-08 ``` feat: Handle restart notifications via SSE
597d6f9 2025-07-08 Updating Example Notebook
93a5129 2025-07-08 chore: Remove redundant backup functions and docstrings\n\nThis commit removes the `explicit_backup_all` and `explicit_restore_all` functions, along with their associated docstrings and related logic. These functions were overly complex and not currently utilized, contributing to unnecessary code duplication. The removal simplifies the codebase and streamlines the backup/restore process.
ae3ba00 2025-07-08 chore: Remove redundant explicit backup/restore logic and related code.
b10b6c1 2025-07-08 ``` feat: Update discussion history display name and icons
2816266 2025-07-07 fix: Update version and description in __init__.py and pyproject.toml
8a1398d 2025-07-07 ``` feat: Add clipboard functionality to assistant messages
a12ee5e 2025-07-07 fix: Add clipboard SVG icon to config.py
00cd84d 2025-07-07 Fix: Add missing SVG icons and update tooltips
92e4e1a 2025-07-07 fix: Update version and description in __init__.py
5f44879 2025-07-07 ``` feat: Filter out noise messages from conversation history
d76e878 2025-07-07 fix: Remove message truncation in history viewer
91eec6f 2025-07-07 feat: Reverse conversation history to display newest messages first
e286358 2025-07-07 fix: Update assistant button styling
d1082a7 2025-07-07 ``` feat: Improve conversation statistics retrieval
f7fafb6 2025-07-07 ``` feat: Implement copy to clipboard functionality for conversation history
71d1393 2025-07-07 ``` feat: Implement conversation history display and copy functionality
42c2d47 2025-07-07 feat: Integrate AI commit with append-only conversation system
f61b25c 2025-07-07 ``` üßπ LEGACY PURGED: Remove save_conversation_to_db() and related logic - migrate to append-only conversation history.
2c4e8c6 2025-07-07 ``` feat: Implement durable backup system for AI keychain and discussion database
e140af7 2025-07-07 fix: Optimize conversation length for 128K token window
118b357 2025-07-07 ``` feat: Migrate to append-only message database
4daba40 2025-07-07 ``` feat: üîß CONVERSATION PERSISTENCE FIX: Startup restoration message handling
228d122 2025-07-07 fix(server): Implement diagnostic logging during conversation restoration
4dbe99b 2025-07-07 ``` feat: Improve conversation persistence test logic
5b4eef6 2025-07-07 ``` feat: Implement multi-cycle conversation persistence test
7b7d121 2025-07-07 feat: Improve FINDER_TOKEN parameter handling in grep logs
f752a04 2025-07-07 feat: Improve server reboot wait times
f00c388 2025-07-07 ``` feat: Gracefully reboot Pipulate server using watchdog
a88b5cb 2025-07-07 feat: Improve system prompt with parameter clarification
8a97bbf 2025-07-07 ``` feat: Enhance system prompt with expanded tool descriptions
9152474 2025-07-07 feat: Enhance system prompt with clearer instructions and tool usage guidance
ee8e1b0 2025-07-07 ``` feat: Implement "Now or Never" rule and refine tool calling behavior
785a38d 2025-07-07 ``` Fix: Preserve conversation history across restarts and system prompts
0d193bf 2025-07-07 ``` feat: Update conversation persistence test with new test word
4fcd738 2025-07-07 ``` feat: Add documentation for FastLite database binding silent failure
5ab1e74 2025-07-07 fix(common): Correct item update logic
973c0d4 2025-07-07 feat: Enhance MCP client to handle diverse bracket formats
d2d67da 2025-07-07 feat: Enhance MCP client to support square bracket notation and XML tool calls
575717e 2025-07-07 feat: Support square bracket notation and XML tool calls
8c176c4 2025-07-07 feat: Enhance system prompt with critical reality check and capabilities overview
0b9ec13 2025-07-07 ``` feat: Introduce MCP Training Protocol for AI Capability Discovery
91cd216 2025-07-07 feat: Implement critical MCP tool calling instructions and examples
ebc8448 2025-07-07 chore: Remove complex backup controls and related code
b04ec69 2025-07-07 feat: Implement comprehensive behavioral reinforcement system for local LLMs
b5bd4d0 2025-07-07 feat: Add intelligent git change analysis to publish.py
07e37a4 2025-07-07 ``` feat: Implement file upload widget with detailed feedback and download links
4026500 2025-07-06 feat: Enhance Local LLM capabilities with MCP tool access
81bea5f 2025-07-06 ``` feat: Enhance system prompt with detailed Chip O'Theseus personality and keychain usage guidance
f74b00e 2025-07-06 üîß CRITICAL FIX: Correct backup system database paths
f51f31f 2025-07-06 üßπ CLEANUP: Remove remaining test artifacts from tests directory
0b32037 2025-07-06 üßπ CLEANUP: Remove test artifacts from repo
1a8c88e 2025-07-06 üé≠ BREAKTHROUGH: Chip O'Theseus Personality & Memory Curation System
54e7288 2025-07-06 ``` feat: Remove backup/restore interface - focus on automated rolling backups
853b2bf 2025-07-06 üéØ TESTING INFRASTRUCTURE: Create deterministic test suite framework
8cc91fa 2025-07-06 üéØ BREAKTHROUGH: Fix conversation persistence across server restarts
705e308 2025-07-06 ``` Merge pull request #1
7261ac0 2025-07-06 feat: Add chat automation test script
0bcf016 2025-07-06 ``` feat: Implement fastlite-based conversation persistence
ae0ea58 2025-07-06 ``` feat: Implement independent discussion database for persistent conversation history
ec70a8e 2025-07-06 feat: Implement comprehensive conversation history debugging guide
ab9e70d 2025-07-06 feat: Implement Radical Conversation History Transparency System
b3c5830 2025-07-06 fix(ai_discovery): Implement persistent conversation history
21b8f34 2025-07-06 ``` üöÄ **MAGIC FORMULA ACTIVATION!** - Introducing iterative LLM execution with explicit XML format and anti-simulation commands.
f68047c 2025-07-06 ``` feat: Implement iterative execution magic words and breadcrumb trail discovery
32194c9 2025-07-06 feat: Implement AI Iterative Loops Implementation Guide
0d06f65 2025-07-06 ``` feat(docs): Introduce LOCAL LLM TOOL CALLING TRAINER
d06d763 2025-07-06 Complete breadcrumb discovery system for local LLMs
b63508a 2025-07-06 Fix breadcrumb trail discovery shell command issues
b09b4b8 2025-07-06 Add breadcrumb trail discovery system for local LLMs
5b20442 2025-07-06 feat(mcp_tools): Add server reboot tool
1e8b0f4 2025-07-06 feat: Use dynamic database filename based on app name and environment
f77690c 2025-07-06 ``` feat: Implement Golden Path - Prioritize Operational Use
8b29883 2025-07-06 feat: Establish golden path for immediate AI assistant operation
e44ec28 2025-07-06 docs(cursor): Clarify AI assistant usage guidelines
f152e09 2025-07-06 üö® Anti-discovery: Cut off environmental exploration at the pass
d160831 2025-07-06 üéØ MAJOR UPDATE: Documentation aligned with working reality
e82c0c9 2025-07-06 fix(helpers): Remove redundant "NOT CORE BUT ALSO IMPORTANT" heading
ebd8c01 2025-07-05 Add unified CLI interface MCP tool for local LLM
818fe60 2025-07-05 Update ai_discovery docs for simplified automation recipe naming
1040ff9 2025-07-05 ``` feat: Implement radical transparency and AI discovery system
36592e6 2025-07-05 üî• SIMPLIFICATION: Clean CLI contract implementation
2a4d811 2025-07-05 ``` feat: Enhance AI Assistant Onboarding and Tool Discovery
802f5fd 2025-07-05 ``` feat: Add MCP tool aliases for CLI
f81c078 2025-07-05 docs: Complete guide to deterministic Trifecta template inheritance system
21c9663 2025-07-05 fix: Template import inheritance for deterministic plugin reconstruction
4dc2fb8 2025-07-05 fix(botify_trifecta): Quote URL parameters
a01f74c 2025-07-05 ``` feat: Extract workflow-specific steps from dynamic step building methods
7a98455 2025-07-05 feat: Intelligent Trifecta template inheritance integrated into release pipeline
8894e8d 2025-07-05 feat: Deterministic Trifecta template inheritance system with AST-based reconstruction
40faa6b 2025-07-05 Creating backups for some template work
fdfc122 2025-07-05 ``` feat: Enhance vulnerability detection with dependency analysis
5a6e7e7 2025-07-05 fix(server): Schedule server restart using centralized system
488be81 2025-07-05 feat(ui): Add server restart after DEV database reset
2c8a66d 2025-07-05 fix(server): Expand role synchronization to include ROLES_CONFIG
f2379d0 2025-07-05 ``` feat: Delegate qualifier logic to code generators
78f358a 2025-07-05 ``` feat: Generate BQLv2 and BQLv1 Python code with detailed API call logging
3c6ab9d 2025-07-05 refactor: Clean up markdown rendering whitespace
5307c76 2025-07-05 feat: Disable automatic line breaks in Marked.js messages
bd62eac 2025-07-05 fix(server): Use botify_get_full_schema for schema cache warmup
1c6b0bf 2025-07-05 feat(server): Add delay for AI discovery feature reveal
c4bbfb2 2025-07-05 feat(storytelling): Conditionally display MCP tools in main script
5ad76a4 2025-07-05 feat(docs): Add browser automation recipes documentation
0ab6ace 2025-07-05 feat(docs): Update training files description
85382af 2025-07-05 feat(docs): Update AI Keychain documentation
67df6a7 2025-07-05 feat: Add centralized configuration file
eef65b9 2025-07-05 feat: Centralize UI constants and configuration settings
adb5bac 2025-07-05 feat: Print concise file and token summary output
676c104 2025-07-04 refactor: Move register_mcp_tool to mcp_tools.py
a277716 2025-07-04 ``` feat: Implement directory rotation for AI perception history
4e548be 2025-07-04 refactor: Remove duplicate _read_botify_api_token from server.py
f81a3e0 2025-07-04 refactor(server): Remove duplicate local LLM helper functions
255932d 2025-07-04 feat(docs): Add extracted files to generate_files_list.py
02e69d2 2025-07-04 docs: Path Discipline Correction and Surgical Framework Validation
119e281 2025-07-04 üõ°Ô∏è Bulletproof Surgical Framework v2.0: Built from Surgical Failure Wisdom
41a18a7 2025-07-04 ``` feat: Enhance App Menu with Role-Based Sorting and Plugin Inclusion
1effac5 2025-07-04 üö® SURGICAL DISASTER ROLLBACK: Complete Failure Confession
f18318f 2025-07-04 üî™‚ú® SURGICAL EXTRACTION COMPLETE: server.py Modularized with Zero Disasters
c2a5261 2025-07-04 Code Surgery Checkpoint: Before refactoring server.py
2446f51 2025-07-04 üè• Pre-Surgery Checkpoint: Comprehensive State Capture
b3a5b2b 2025-07-04 ``` feat: Enhance server refactor demo - Detect exact order dependencies
e6974ab 2025-07-04 feat: Introduce server.py refactoring guide and tooling
f95da2e 2025-07-04 Code Surgery Checkpoint: Before refactoring /home/mike/repos/pipulate/server.py
9749f5f 2025-07-04 Fix: Browser automation recipe system with baby steps executor
105b89a 2025-07-04 üéØ BOURBON VANILLA: Enhanced JSON Recipe Engine with Continuous Feedback
15d2523 2025-07-04 üè† MAJOR HOUSEKEEPING: Move automation_recipes to proper location
81c64ac 2025-07-04 feat: Create JSON Recipe Execution Engine for automation recipes
3051682 2025-07-04 feat: Refactor automation recipes to use Origin-based architecture
3d30633 2025-07-04 fix: Complete centralized automation recipe system implementation
f9b45d3 2025-07-04 feat: Implement centralized automation recipe system with progressive disclosure
14012c2 2025-07-04 feat(ui): Update ASCII displays with revised logging
e563e41 2025-07-04 feat(legend): Remove obsolete chat and ai_creative entries from legend
1f293d7 2025-07-04 chore: Update helpers/release/publish.py from backup-before-reset
97f9bc2 2025-07-04 style: Update static/styles.css with latest improvements
ee07f6b 2025-07-04 docs: Add BREADCRUMB_TRAIL_DVCS rule doc
a92a787 2025-07-04 feat: Add üåç BROWSER emoji to log reading legend
944fdc5 2025-07-04 feat: Add bulletproof automation recipes
1bf372d 2025-07-02 fix(server): Improve profile menu item styling and functionality
9059450 2025-07-02 fix: Improve dropdown menu tooltip visibility
53b647f 2025-07-02 feat: Add styling to home menu item
fb741b6 2025-07-02 ``` feat: Customize APP menu with role information
ac9c9b5 2025-07-02 feat: Migrate to centralized embedded SVG icons for tooltips
2586ef8 2025-07-02 fix(ui): Improve backup status display formatting
16b314d 2025-07-02 fix(nav): Use external SVG for settings icon and remove underline from tooltips
ebc6a87 2025-07-02 feat: Implement theme-aware SVG icons for consistent styling
aad5a1c 2025-07-02 ``` feat: Use external SVG files for tooltips and settings icon
1d1998d 2025-07-02 fix: Adjust tooltip SVG sizes and remove underline
8f9810c 2025-07-02 fix: Ensure dropdown tooltips are visible
c7ff9bb 2025-07-02 feat: Add environment mode banner and backup system header
f30dd53 2025-07-02 feat: Add log reading legend panel
6745816 2025-07-02 feat(server): Add status banner for server key information
e3a6cd8 2025-07-02 feat(ui): Add environment mode banner
231a437 2025-07-02 feat(server): Enable white_rabbit() on startup
3dade5f 2025-07-02 feat(backup): Add backup system banner for visibility
9a9ba15 2025-07-02 feat(server): Implement automatic startup backup
91ba65c 2025-07-02 feat: Implement bulletproof backup/restore with server restart architecture
f156bc6 2025-07-02 fix(ui): Improve flyout restart button hx-on:click handler
e3ec572 2025-07-02 fix(server): Schedule server restart after successful restore
97cc57a 2025-07-02 feat: Improve backup status display formatting
c443f68 2025-07-02 üîß FIX: Table-Specific Backup Breakdown for Clear UX
4125a66 2025-07-02 üéØ SEMANTIC SEPARATION: Explicit Backup/Restore UI with Count-Based Clarity
8950228 2025-07-02 ‚ú® Add PicoCSS Spinner to Backup Button for Instant Visual Feedback
aa36981 2025-07-02 üîß Fix Backup System: Graceful Fallback for Tables Without Backup Fields
c7a566f 2025-07-02 ‚ú® Add Durable Backup System with Visual UI Controls
12e5800 2025-07-02 ``` feat: Add backup schema and trigger for profile_id table
19ebb33 2025-07-02 feat(docs): Externalize ASCII art functions
d8409e6 2025-07-02 feat: Externalize log reading legend to reduce server.py tokens
b87abe2 2025-07-02 feat: Externalize ASCII art functions to reduce server.py token count
79ca9d6 2025-07-02 ``` feat: Add falling Alice and White Rabbit ASCII displays
17478a0 2025-07-02 Restore: Automation Assistant Dictionary in browser_analyze_scraped_page
a1c3681 2025-07-02 üé≠ REVOLUTIONARY: Implement AI Keychain - Solve the Illusion of Continuity
c641266 2025-07-02 ``` feat: Generate comprehensive file list for prompt_foo.py
046ce1e 2025-07-02 ``` feat: Improve pipeline state inspector with robust error handling
b3d80d9 2025-07-02 ``` feat(ai_discovery): Expand MCP tool discovery and improve reliability
653f4ef 2025-07-02 fix(pipeline): Rename `chain_reaction_wait` to `chain_wait`
fcf3bb6 2025-07-02 ``` feat: Clarify initial environment setup and Python path usage
793acd6 2025-07-02 feat(server): Add AI progression trigger and Python path guidance
b0ca3be 2025-07-02 docs(cursor): Update breadcrumb trail keywords
2bfab7d 2025-07-02 docs(quick-start): Update quick start instructions with keywords
7c8f87b 2025-07-02 feat: Use gemma3 model for AI commit messages
6c08f12 2025-07-02 chore: Update project files
53ca24b 2025-07-02 organize: Changed training/ai_discovery/ to ai_discovery/
5bae08b 2025-07-02 Cleanup: Remove redundant Python environment test files and simplify documentation
68e6126 2025-07-01 chore: Update project files
1886e98 2025-07-01 chore: Update project files
5ac82c7 2025-07-01 üìö DOCUMENTATION: Updated AI Discovery Docs for Session Hijacking Breakthrough
424e196 2025-07-01 üé≠ MILESTONE: Complete 1-Shot Session Hijacking System - Lightning in a Bottle
c7167d8 2025-07-01 üîß FIX SUBPROCESS TIMING: Pass actual values instead of variable references
8676400 2025-07-01 üïê CENTRALIZED TIMING: Consolidated all workflow hijacking timeouts
7108715 2025-07-01 ‚è∞ SYNC ALL TIMING: Consistent 4s wait_chain_reaction across all functions
7b75ea1 2025-07-01 üîß FIX WORKFLOW HIJACKING: Variable substitution + POST wait timing
820e7ce 2025-07-01 ‚è∞ EXTEND WORKFLOW HIJACKING TIMING: 3s stabilization + 2s final display
1690a75 2025-07-01 üé≠ COMPLETE WORKFLOW HIJACKING: Navigate + Enter + Chain Reaction + Capture
1eecfb6 2025-07-01 üé≠ MAGIC WORDS: Complete AI Session Hijacking with Dramatic Timing
94200ce 2025-07-01 üéØ BREAKTHROUGH: Fix Magic Words Deadlock
736be20 2025-07-01 üß† CRITICAL MENTAL MODEL EMBEDDED IN ALL DISCOVERY DOCS
7d46eb5 2025-07-01 üß† EMBED CRITICAL MENTAL MODEL: Browser Embodiment vs System Internals
5a61a1e 2025-07-01 üé≠ BOTTLE THE 1-SHOT SESSION HIJACKING PATTERN
fb43b57 2025-07-01 Lock in session hijacking win: Document success patterns & misinterpretation traps
a4edac8 2025-07-01 Fix: Implement proper dependency injection for get_user_session_state MCP tool
8b803c9 2025-07-01 Fix: Integrate AI breadcrumb trail into main startup flow
3620000 2025-07-01 üî• LIGHTNING IN A BOTTLE: Complete AI Discovery Documentation Update
4ca09d7 2025-07-01 üîß COMPLETE FIX: Browser automation data:, URL issue resolved
0dfe777 2025-07-01 Move all URL validation before browser creation in workflow automation
867a7b2 2025-07-01 Add aggressive URL validation to prevent data: URLs before browser opens
d548546 2025-07-01 Add aggressive navigation debugging to corner data: URL issue
f1a5ccd 2025-07-01 Hardwire browser automation to never use headless mode + kill hung Chromium instances
ba15347 2025-07-01 Robust session hijacking with exact URL fallback
0648e75 2025-07-01 Store full URL in session state for robust session hijacking
8fa9c06 2025-07-01 Pin: Browser automation and session hijacking working for external URLs
475ef93 2025-07-01 BREAKTHROUGH: Complete AI Session Hijacking Discovery & Implementation
c601e06 2025-07-01 Fix: Purge underscore prefixes from MCP tool internal calls
407c691 2025-07-01 Refactor: Remove underscores from MCP test tool function names for intuitive, guessable usage
0313bd5 2025-07-01 üö® CRITICAL: AI Discovery Document Location Revolution & Python Path Mastery
82c884d 2025-07-01 Purge all MCP tool underscore ambiguity in helpers/docs_sync/considerations (browser_scrape_page, etc.)
a5d6414 2025-07-01 Move ai_progressive_discovery_sequence.md, update all references, and purge MCP tool name ambiguity (underscore -> correct names).
b1c89a3 2025-07-01 üö® CRITICAL FIX: Expose breadcrumb trail lie that was breaking AI assistants
d0dc300 2025-07-01 Fix: Correct indentation error in server.py line 605 - MCP discovery script log message
ed213ab 2025-07-01 Feat: Add get_available_tools() for programmatic MCP tool discovery (names, signatures, docstrings).
5bd1be9 2025-07-01 Chore: Move updated ai_tool_discovery.py to helpers/ for AI-native tool discovery.
5dc25e5 2025-07-01 Chore: Update ai_tool_discovery.py to use new public MCP tool function names (no underscores).
a7aa802 2025-07-01 Refactor: Remove leading underscores from all public MCP tool function names and update internal references. Only private/test helpers retain underscores.
5e1a856 2025-07-01 Fix: MCP tools discovery environment issues
bd8c53c 2025-07-01 chore: remove old AI discovery/training files after consolidation and update all references
9414192 2025-07-01 chore: update ai_tool_discovery.py reference in environment diagnostic script
9e80a22 2025-07-01 refactor: update all AI discovery/training references to training/ai_discovery/ and lower_snake_case
edbefa5 2025-07-01 chore: standardize AI discovery/training filenames to lower_snake_case for consistency
65451d3 2025-07-01 üéØ Fix: Perfect AI discovery environment organization
acbe690 2025-07-01 Fix: Organize environment diagnostic for optimal AI discovery experience
7d599a2 2025-07-01 Fix: Add environment diagnostic script for AI discovery clarity
ab6d93a 2025-07-01 Fix: Update server.py for environment consistency
f303541 2025-07-01 üîß ENHANCE: Integrate Python environment fix into breadcrumb trail system
5ef87d6 2025-07-01 üîß FIX: Resolve Python environment confusion - AI superpowers now accessible
2c415f5 2025-07-01 Deleted screenshot
508ef8d 2025-07-01 Refined AI capability test suite: context-aware, actionable, and no more misleading results. Updated browser automation mastery doc for new health check. Removed all test/experimental scripts and artifacts for a clean, production-ready state.
17248d9 2025-07-01 Fix: AI Browser Automation Workflow Navigation & Element Targeting
6b99188 2025-07-01 Fix: Ensure self-discovery assistant always registers all MCP tools
9fd4f1a 2025-07-01 feat: Add natural language browser automation with 100% success rate
cc53b91 2025-07-01 feat: Integrate discover_mcp_tools.py into official AI superpower discovery path
1c320ab 2025-07-01 feat: Add discover_mcp_tools.py for reliable MCP tool enumeration and testing
d620471 2025-07-01 More ASCII art
07a7428 2025-06-30 Also making watchdog ignore downloads folders (why wasn't it restarting based on those before?)
5bdccb7 2025-06-30 Making watchdog ignore browser automation folder
9550088 2025-06-30 Renamed gap analysis plugin
af0eacb 2025-06-30 Trimming down home (Roles)
cd72456 2025-06-30 Removed old Link Graph and Parameter Buster (again)
0554240 2025-06-30 Logo and font adjustments
eec4f66 2025-06-30 Moved PNG too
1cb63dd 2025-06-30 Organizing svgs into images folder
ce0d77c 2025-06-30 üé® feat: Embed Roboto font locally with bold breadcrumb styling
f0c07ff 2025-06-30 Swapped in new Link Graph Visualizer which uses new Trifect template base
6c19e5f 2025-06-30 Preparing to delete old link graph and swap it out
d8230fe 2025-06-30 üéØ EPIC: Link Graph 2 Workflow - Trifecta Template Integration Complete!
87ea50f 2025-06-30 üîß Complete workflow reconstructor fix with CUSTOM_ROUTE markers and enhanced dropdown transplantation
80c583a 2025-06-30 üîß Fix workflow reconstructor APP_NAME suffix logic and legacy route filtering
97bc11f 2025-06-30 üîß Fix workflow reconstructor enhanced dropdown detection and create Link Graph 2
a6a6bfe 2025-06-30 feat: Create 120_link_graph2.py using enhanced workflow reconstructor
0c651e5 2025-06-30 feat: Add automatic TRAINING_PROMPT and ENDPOINT_MESSAGE transplantation to workflow reconstructor
b9c7a36 2025-06-30 Fixed endpoint message and training prompt for parameter buster
bb923d1 2025-06-30 Restore: Recovered xx_link_graph.py and xx_parameter_buster.py from pre-deletion state for review and validation
7691e83 2025-06-30 Renamed Parameter Buster correctly
b16dc0b 2025-06-30 Fix: Enable AI DOM beautifier automation registry creation
51e311d 2025-06-30 Fix: Directory rotation warnings by using shutil.move() instead of rename()
6118eb4 2025-06-30 Fix: Breadcrumb trail now leads to easier AI tool discovery approach
16e8f56 2025-06-30 feat: Create delightful MCP tools discovery experience for AI assistants
9bbe009 2025-06-30 Deleted unnecessary file
10782fd 2025-06-30 docs: Integrate AI self-discovery tools into progressive breadcrumb trail\n\n- Updated 2025-06-20-ai-progressive-discovery-sequence.md to include explicit guidance for new AI self-discovery and capability test tools.\n- Enhanced server.py breadcrumb log messages to reference ai_self_discovery_assistant and ai_capability_test_suite, ensuring future AIs naturally discover and use them.\n- All changes tested and verified for correct multi-line and special character handling.\n\nThis commit ensures that the enlightenment moments and uncertainty eliminators are now part of the natural AI discovery path, making future AI onboarding seamless and robust.
f2ae4fe 2025-06-30 feat: Add AI Self-Discovery Tools to eliminate uncertainty
7441ece 2025-06-30 feat: Add AI session hijacking trigger script for browser automation demo\n\n- Adds trigger_browser_automation.py to open the last workflow state in the browser\n- Demonstrates AI's ability to assert control and embody browser automation\n- Lays groundwork for future MCP tool integration and radical transparency demos
d99631a 2025-06-30 Reorganize consideration files with logical date progression (June 12-29, 2025)
0c61062 2025-06-30 Fix AttributeError in clear_pipeline endpoint
b23ae6a 2025-06-30 Enhance magic words detection with casual Hi Jack variations
1096090 2025-06-30 üéØ IMPLEMENT: System-wide endpoint registry for bulletproof URL mapping
39a6f26 2025-06-30 üìã PROPOSAL: System-Wide Endpoint Registry for robust URL mapping
9a93fcc 2025-06-30 üé≠ CRITICAL FIX: Unify session hijacking URL mapping to eliminate /workflow fallback
32081bd 2025-06-30 REVOLUTIONARY: Authentic AI Session Hijacking System Complete
b9803a3 2025-06-30 üéÜ REVOLUTIONARY: Authentic Session Hijacking Implementation
5ca70ca 2025-06-30 üéÜ COMPLETE AI SESSION HIJACKING ACHIEVED!
b4bace2 2025-06-30 BREAKTHROUGH: Complete AI Session Hijacking System Achieved
9a2e169 2025-06-30 BREAKTHROUGH: Magic Words AI Session Hijacking System Working
1df9c58 2025-06-30 FIX: Remove redundant asyncio import causing scope error
e2ff1e0 2025-06-30 BINARY SEARCH: Test exact working browser automation pattern
8fb037c 2025-06-30 FIX: Remove broken browser automation from hardwired magic words
6fd029c 2025-06-30 CRITICAL: Add Browser DOM Capture to Magic Words System
6d5b007 2025-06-30 BREAKTHROUGH: Hardwired Magic Words System (Clean Implementation)
f446967 2025-06-30 FIX: Magic words protocol now teaches proper MCP block syntax
13498fd 2025-06-30 üé≠ COMPLETE: Magic Words AI Demonstration System
bf2e634 2025-06-30 COMPLETE: Extract all session hijacking training content from server.py bloat
3284ec7 2025-06-30 MAJOR CLEANUP: Externalize AI training material from server.py bloat
666f0cf 2025-06-30 BREAKTHROUGH: Enhanced AI session hijacking with 'I control the horizontal/vertical' demo
46967ce 2025-06-30 Add AI session hijacking whisper: If You Give an AI Assistant a Server-Cookie ü§ñüç™
fd7eebb 2025-06-30 Pre-change commit: Add AI progressive discovery training architecture
33c8b2f 2025-06-30 ascii art: unicorn horn
990c0ad 2025-06-30 ascii art: Log Reading Guide tweaks
ddc9ac9 2025-06-30 Fix White Rabbit: Restore beautiful ASCII & human-friendly messaging
3566632 2025-06-30 Perfect Tale of 2 Chain Reactions: Enhanced human & AI discovery banners
807cade 2025-06-30 Moved Log Reading Guide above White Rabbit
a512cf8 2025-06-30 Add breadcrumb failsafe: Second chance for AI transcendence
9120fc7 2025-06-30 feat: Perfect AI discovery system - Tale of 2 Chain Reactions
004a7c1 2025-06-30 chore: Update project files
3e4a50c 2025-06-30 Rename DONT_WRITE_HERE.mdc to BREADCRUMB_TRAIL_DVCS.mdc in repo
e244359 2025-06-30 Fix browser automation result access pattern in discovery sequence
1afd3b2 2025-06-30 Move AI progressive discovery sequence to correct location
6670537 2025-06-30 Create cursor rules with AI breadcrumb trail discovery trigger
10ce911 2025-06-30 Complete progressive AI discovery sequence demonstration
353c2ff 2025-06-30 Create progressive AI superpowers discovery sequence
dd4b1a9 2025-06-30 Add AI discovery breadcrumb trail for progressive superpowers awakening
465f0e8 2025-06-29 ‚úÖ CHAIN REACTION SYSTEM VERIFICATION: Complete AI superpowers ready
03f160b 2025-06-29 üöÄ AI SUPERPOWERS: Complete cascading chain reaction transformation
95eafea 2025-06-29 feat: AI Browser Automation single-source-of-truth documentation
a815d9a 2025-06-29 üöÄ REVOLUTIONARY AI BROWSER AUTOMATION DOCUMENTATION
14c052c 2025-06-29 feat: AI perception directory protection & revolutionary browser automation
5b2e30e 2025-06-29 üöÄ REVOLUTIONARY AI BROWSER AUTOMATION BREAKTHROUGH
c8cae15 2025-06-29 fix: Resolve logger initialization AttributeError
fdf6487 2025-06-29 feat: AI perception history with directory rotation system
87161ff 2025-06-29 fix: Slightly longer scroll to bottom of page on HTMX events
b67d55f 2025-06-29 Roboto Logo
574ddbc 2025-06-29 Updated logo
e8c88b6 2025-06-29 Improved logo
0283de0 2025-06-29 feat: Document AI Browser Embodiment Singularity - Complete Sensory-Motor Control
aa4b062 2025-06-29 fix: Resolve split pane memory loss in main interface
21b2887 2025-06-29 fix: Rename architectural_patterns.md to match consideration file format
bf9a2e0 2025-06-29 refactor: Rebrand blog_drafts to considerations + fix misplaced architectural patterns
726eae0 2025-06-29 docs: Establish architectural patterns documentation
8e21fc0 2025-06-29 feat: Implement separate localStorage keys for split panes by context
6e40b06 2025-06-29 docs: Create comprehensive SINGLE_SOURCE_OF_TRUTH.md for prompt generation ecosystem
34e7518 2025-06-29 Complete training directory cleanup - delete moved files and convert status doc
a3c20c1 2025-06-29 Reorganize training directory - convert strategic docs to blog drafts
16326b6 2025-06-29 Implement persistent split sizes for documentation browser
b650f14 2025-06-29 Fix splitter functionality in docs browser
4e508ea 2025-06-29 Fix: Use existing splitter-init.js infrastructure for docs browser
be34be7 2025-06-29 Implement Split.js for resizable documentation browser
656654a 2025-06-29 Add PyPI package link to documentation endpoints
68d1ac0 2025-06-29 chore: Update project files
fd6d61e 2025-06-29 gitignore: Add rules to prevent botify output files from being tracked
108bc8d 2025-06-29 fix: Remove schema discovery JSON from repo and prevent future tracking
ce58a48 2025-06-29 chore: Clean up obsolete release scripts
5ce3b9d 2025-06-29 docs: Consolidate workflow tools into comprehensive development guide
2ed0bc1 2025-06-29 docs: Consolidate release documentation into comprehensive guide
78b9c05 2025-06-29 chore: Update project files
52b602e 2025-06-29 feat: Enhanced publish.py with comprehensive release pipeline
569167f 2025-06-29 Standard update
569a3f1 2025-06-29 Balanced messaging
7953aad 2025-06-29 Balanced messaging
1fc8731 2025-06-29 Restore conviction while maintaining inclusivity
63b21c8 2025-06-29 Soften positioning: Emphasize interoperability over ideology
503511a 2025-06-29 Version sync fix - publishing 1.0.5
c13b136 2025-06-29 Documentation updates
6d12e2a 2025-06-29 Test safe release (should NOT bump version)
60f850a 2025-06-29 Test force republish with correct Python env
d680547 2025-06-29 Fix project name for PEP 508 compliance
d5d4fcf 2025-06-29 Demo force republish functionality
45a890b 2025-06-29 üîß refactor: Move Version Management to Release Directory
a8e9089 2025-06-29 Fix publish.py to require explicit version bumping
27bab77 2025-06-29 Removed the Notebook showing filgets
a802361 2025-06-29 üéØ MAJOR: Make README More Actionable for Newcomers
c275160 2025-06-29 üìö MAJOR: Fix Glaring Oversights in README File Structure
328d874 2025-06-29 üîí PRIVACY: Remove Botify Username/Project Examples from High-Profile Docs
7eb5ec9 2025-06-29 üßπ CLEANUP: Remove Quick Transparency Tools Section from Docs
dbbc2b0 2025-06-29 üéâ SUCCESS: Blog Draft Navigation Working Perfectly!
d7dd102 2025-06-29 ‚ú® ENHANCEMENT: Move Blog Drafts to Bottom + Add Prev/Next Navigation
5128928 2025-06-29 üîß FIX: Resolve Blog Draft Document Access Error
f82514d 2025-06-29 ‚ú® FEATURE: Integrate Blog Drafts into Documentation System
a036c40 2025-06-29 üìö BLOG: AI Browser Automation Revolution Article
b4fc805 2025-06-29 ‚ö° BREAKTHROUGH: AI Assistant Browser Automation Revolution
c9f6970 2025-06-29 Even more README tweaks
5a9673f 2025-06-29 Very tiny README tweaks
6c170ef 2025-06-29 README touch-ups
80b19a2 2025-06-29 üö® CRITICAL FIX: Prevent data loss when YAML parsing fails
12eb222 2025-06-29 üîß Fix YAML structure contamination in domain detection
68faf51 2025-06-29 üéØ Implement 80/20 Domain Management Strategy
4a444a9 2025-06-29 üìù Replace generic message with educational trailing slash explanation
57c7179 2025-06-29 ‚ú® Document lightning-in-a-bottle Content Gap Analysis development
6547278 2025-06-29 üîç Enhance redirect chain transparency in Content Gap Analysis
2141374 2025-06-29 ‚ú® Remove line numbers + Add PicoCSS spinner to Content Gap Analysis
8b53416 2025-06-29 ‚ú® Add PrismJS YAML syntax highlighting to Content Gap Analysis
fb291e1 2025-06-29 üßπ Remove test file - cleanup after successful idempotency verification
938be7f 2025-06-29 ‚úÖ Verify Content Gap Analysis idempotency fix works perfectly
9fe2bc3 2025-06-29 üîß Fix Content Gap Analysis idempotency issue
1db26e0 2025-06-29 ‚úÖ Verify homepage checker working perfectly
479cfe9 2025-06-29 Improve UI for competitor domain analysis
56b8f64 2025-06-29 Implement homepage checker with YAML conversion in Content Gap Analysis
6cd983c 2025-06-29 Swap in text area component for step_01
6572808 2025-06-29 Add buffer placeholder step (step_02)
4ef4955 2025-06-29 Create initial Content Gap Analysis workflow stub
9621276 2025-06-28 A lot of hyphens to em-dashes in README
621b27d 2025-06-28 Renamed workflow_reconstructor_ast.py to workflow_reconstructor.py
2f5dd26 2025-06-28 Cleanup: Remove workflow development cruft and obsolete files
4504d19 2025-06-28 Feat: Complete Link Graph Visualizer with Parameter Analysis via AST Reconstruction
cc202f7 2025-06-28 Feat: Create Link Graph Visualizer 2 via AST workflow reconstruction
3e0bea9 2025-06-28 Docs: Add Workflow Reconstruction System to README with comprehensive ASCII art
1f337d3 2025-06-28 üèÜ PRODUCTION: In-Place Parameter Buster Update - Complete Lifecycle Demo
4989881 2025-06-28 DOCS: Complete Workflow Reconstruction Guide - Lightning in a Bottle Captured
bc9e1ef 2025-06-28 Fix: Add missing route registration for step_parameters_process
2038069 2025-06-28 Enhance: AST Reconstructor now merges route registrations
4d879b3 2025-06-28 Fix: AST reconstructor now handles async functions properly
9018468 2025-06-28 WIP: Still debugging method insertion indentation issue
2352b2c 2025-06-28 Complete: Link Graph Visualizer 2-Chunk Architecture Variant
7505e7c 2025-06-28 üöÄ BREAKTHROUGH: Complete 2-Chunk Architecture Implementation
15e688e 2025-06-28 Complete: Working 2-Chunk Architecture Variants Generated
db619ff 2025-06-28 Critical Fix: Resolve MockRequest Class Name Transformation Bug
b1832d4 2025-06-28 Demo: Successful Generic Pattern Creation - 2-Suffix Variants
4bc2d0f 2025-06-28 Enhance: Generic Filename Pattern Support for Workflow Reconstructor
dc0b285 2025-06-28 Fix: Implement 2-Chunk Architecture with Semantic Step Naming
fdc69ce 2025-06-28 feat: Complete semantic normalization of Parameter Buster workflow for template compatibility
eb2c73c 2025-06-28 MILESTONE: Parameter Buster normalization COMPLETE and tested successfully
cb008e7 2025-06-28 Complete CHUNK 1 normalization and start CHUNK 2 - Parameter Buster
f393ddf 2025-06-28 Parameter Buster normalization progress - CHUNK 1 and CHUNK 2 steps conversion
65866de 2025-06-28 Start parameter_buster normalization - Phase 1
a88e008 2025-06-28 Add backup reference files for normalization
d98106a 2025-06-28 Refactor Parameter Buster to use comprehensive BQL utilities - MASSIVE reduction
41d7463 2025-06-28 Refactor Trifecta to use comprehensive BQL utilities - MASSIVE reduction
2ef66ed 2025-06-28 Add comprehensive BQL code generation utilities to server.py
ebb426a 2025-06-28 REFACTOR: Simplify BQLv1 header generation with reusable utilities
2388d7d 2025-06-28 REFACTOR: Replace BQLv2 f-string block with reusable utilities
3039ba9 2025-06-28 EXTRACT: Add reusable Botify Python code generation utilities to server.py
7cad628 2025-06-28 PRESERVE LEARNINGS: Add business logic insights without changing working code
67d8526 2025-06-28 Getting ready to gut BQLv1 out of Trifecta. Good goback checkpoint.
386c08f 2025-06-28 release: Version 1.0.4 - Graduate from Beta to Production/Stable - 8 years in development!
f3dc387 2025-06-28 feat(release): Add unified publishing system with AI commits and cross-repo sync
bfb0754 2025-06-28 I plan on using pipulate repo for blog draft idea stubs. Also, last commit before considerable release system consolidation.
ea34391 2025-06-28 Testing some YAML in the README for lens abstraction layer definitions
f4511ba 2025-06-27 Link correction
64ef11f 2025-06-27 A few more links to readme
a2abba5 2025-06-27 LICENSE name tweak
9ff6655 2025-06-27 Small language tweaks
f389d05 2025-06-27 System: Implement True Single Source of Truth for Version Management
195bebb 2025-06-27 Version: Bump to 1.0.2 for improved pip install documentation
c2c5991 2025-06-27 Docs: Polish installation paths now that Pipulate 1.0.1 is live on PyPI
43eb252 2025-06-27 Final test before push live
49dd17c 2025-06-27 Testing 1.0.0 Release on PyPI Test site
2ed66cf 2025-06-27 Yet more lens illustration refinement
808e5b4 2025-06-27 Swapped PNG in for SVG for PyPI
be2ecf2 2025-06-27 SVG to PNG for PyPI
f9ab16a 2025-06-27 Absolute link to svg on GitHub for PyPI
a4e76b0 2025-06-27 Feat: Beautiful CLI experience with Rich and comprehensive publishing guide
18eeb00 2025-06-27 Feat: Complete PyPI package system with single source of truth versioning
899a685 2025-06-27 üèÜ THE PYPI DISCOVERY REVOLUTION: Mission Accomplished!
75d18d3 2025-06-27 üéØ PyPI Production Polish: SPDX License + Publishing Guide
f55079a 2025-06-27 üöÄ Production-Ready PyPI Gateway: Bulletproof Installation Strategy
3fff13b 2025-06-27 Updated email to pipulate
0ebfda6 2025-06-27 üöÄ PyPI Discovery Gateway: pip install pipulate + pipulate Command
22f9995 2025-06-27 üìã Meta-Documentation: README Self-Describes Its Documentation System
e97cf1d 2025-06-27 Clarifying lenses
3f4eb3a 2025-06-27 üîß README.md Auto-Copy: Fixed Idempotence + Marker Stripping
b3db53e 2025-06-27 üìã README.md Auto-Copy: Source-to-Website Documentation Sync
24e5e47 2025-06-27 More lens ASCII art refinement
a6254ce 2025-06-27 üö® Feynman Safeguard: "What if this valve fails?" Pollution Defense
802f78d 2025-06-27 More lens ASCII art messaging tweaking
641632c 2025-06-26 Clean up repo root: move ASCII art test/debug files to helpers/docs_sync/
c416e28 2025-06-26 Fix: ASCII Art Sync Idempotence Crisis Resolution
62726d5 2025-06-26 üé® NEW ASCII ART: LAMP Stack Evolution Comparison
e5cf44e 2025-06-26 üîß CRITICAL FIX: ASCII Art Duplication Bug - Complete Resolution
6ebc6ff 2025-06-26 More tweaks
6bccdd9 2025-06-26 üîß Fix ASCII Art Duplication Bug in Sync Script
782ee1a 2025-06-26 Claifying lenses
1ecedd8 2025-06-26 Added another unicorn
b1041e7 2025-06-26 üîç The Lens Stack: Focused Architecture Visualization
020d4d3 2025-06-26 Further readme tweaks
4037284 2025-06-26 Extremely pedantic copy edit
74b7cd5 2025-06-26 Consistent tag-line
5911f30 2025-06-26 The real tagline on README.md
2d0ece1 2025-06-26 A note on getting the Pipulate Python environment in Cursor
496c68d 2025-06-26 Object to path
b07c44a 2025-06-26 sp
250a910 2025-06-26 Changing name of svg file
3db36ee 2025-06-26 Updating logo to AI SEO Software
40f6c50 2025-06-26 Readme tweaks
22c9ddd 2025-06-26 üõ°Ô∏è ASCII Art: Defensive Consecutive Marker Protection
af4d917 2025-06-26 üéØ Add strategic placement suggestions for unused ASCII blocks
263a4ce 2025-06-26 üêõ Fix critical --prompt mode coverage bug
469217c 2025-06-26 ‚ú® Perfect alignment and spacing in sovereignty ASCII art
ea2defc 2025-06-26 üè∞ Add computing sovereignty ASCII art - the REAL core philosophy
8137b82 2025-06-26 ü™µ Add WET workflows whittling metaphor ASCII art
dd6f067 2025-06-26 Another Unicorn
4d15813 2025-06-26 Introducing Chip O'Theseus
37a9e05 2025-06-26 üé® Perfect ASCII art alignment for desktop architecture comparison
ed4c241 2025-06-26 ‚ú® Add desktop-app-architecture-comparison ASCII art
2f63858 2025-06-26 Unicorn fix
5cad469 2025-06-26 üìö Create ASCII Art Management System Guide
b945104 2025-06-26 Banking wins
d1f1e23 2025-06-26 Complete: ASCII art enhancement series - All 5 candidates implemented
a9dd856 2025-06-26 Enhance: ASCII art promotion prompt with false positive debugging
184b647 2025-06-26 Fix: ASCII art exclusion logic for already-managed content
ae02752 2025-06-26 Fix: ASCII art heuristic discovery false positive overload
af98568 2025-06-26 Feat: Strategic content banking - high-value blog post extraction
1dab83c 2025-06-26 Fix: ASCII art sync regex escape issue + major sync results
1b08130 2025-06-26 Can't say: You are not an empire builder. They might be.
cd855a6 2025-06-26 Feat: Complete philosophical architecture & content distribution system
0420122 2025-06-26 Feat: Integrate philosophical blueprint into README
fff064d 2025-06-26 Added headline to Readme
10ee0f3 2025-06-26 Fix: Clean markdown syntax from TOC descriptions and headers
c32c457 2025-06-26 Fix: Filter HTML comments from rendered headers in documentation
f9770c8 2025-06-26 Enhance: Split Architecture section for better cognitive chunking
2430a9d 2025-06-26 Polish: Remove unnecessary bullet points from Developer Setup section
860f7d2 2025-06-26 Fix: Resolve markdown formatting issues in Developer Setup section
779f271 2025-06-26 Feat: Optimize README narrative flow using deterministic section rearrangement
6fbadca 2025-06-26 More ASCII art tweaking
d4f1170 2025-06-26 More ASCII art tweaking
b18c20a 2025-06-26 More ASCII art tweaking
32da969 2025-06-26 More ASCII art tweaking
f249caf 2025-06-26 Chip O'Theseus art tweak
c6125c8 2025-06-26 Feat: Optimize README narrative flow using deterministic section rearrangement
125644f 2025-06-26 Feat: Add strategic 80-hyphen slicers and deterministic rearrangement tool
b1cf03b 2025-06-26 Fix: Make paginated TOC headline extraction truly generic
3180478 2025-06-26 Feat: Enable automatic README pagination when 80-hyphen separators detected
d2c8d35 2025-06-25 Fix: Enable complete content block sync with headers and footers
fa2e39b 2025-06-25 Feat: Enhance AI On Rails messaging and ASCII art system improvements
c777677 2025-06-25 Fix: Consolidate duplicate ASCII art blocks - retire local-first-benefits-diagram
48b33e9 2025-06-25 Feat: Promote local-first-state-management-benefits ASCII art to centralized system
0442133 2025-06-25 Fix: Update --prompt messaging to prevent architecture confusion
4685afb 2025-06-25 Fix: Remove ASCII art infrastructure markers from README.md
91bee08 2025-06-25 Strategic ASCII art positioning and cleanup
00c1004 2025-06-25 üöÄ BREAKTHROUGH: Bulletproof ASCII Art Management System Complete
e21a5a7 2025-06-25 Fix: Eliminate duplicate extraction and fix prompt mode usage frequency
397a9fa 2025-06-25 Add: Stable comment-key system for ASCII art headlines
8409f78 2025-06-25 Add: Comment-key detection for stable ASCII art key management
4732c30 2025-06-25 Fix: Eliminate false positives in ASCII art heuristic discovery
c7dd8df 2025-06-25 Fix: Exclude section delimiters from ASCII art footer content
e7accca 2025-06-25 Fix: Preserve original markdown headline levels in ASCII art titles
69888cf 2025-06-25 Enhance: Include original headlines in ASCII art content blocks
ddbbc03 2025-06-25 Fix: Properly separate header/footer from ASCII art content
c3d1406 2025-06-25 Fix: Enable automatic population of empty ASCII art markers
4e176a9 2025-06-25 polish: Perfect ASCII Art Display with Leading Whitespace Preservation
43d53ce 2025-06-25 feat: Revolutionary Always-On ASCII Art Discovery System
d93ba44 2025-06-25 enhance: Show full ASCII art content instead of truncated previews
87ecc41 2025-06-25 fix: Eliminate false positives in ASCII art heuristic detection
59de513 2025-06-25 enhance: Add precise location info and pattern matching verification
a602595 2025-06-25 feat: ASCII art sync system with comprehensive discovery
1f020fe 2025-06-25 fix: Implement robust naked fenced code block detection
8f176a4 2025-06-25 feat: Complete ASCII art sync system with optional heuristic discovery
635d909 2025-06-25 Feat: Add heuristic ASCII art discovery for unmarked content
f8cb23b 2025-06-25 Consolidate ASCII art sync script with upstream promotion system
a449064 2025-06-25 Enhance ASCII art sync with upstream discovery framework
d7fddfa 2025-06-25 Art tweak
5122449 2025-06-25 feat: Add Flask ‚Üí FastAPI ‚Üí FastHTML evolution diagram
b007aba 2025-06-25 feat: Add 'Run All Cells Pattern' ASCII art illustration
5fc7854 2025-06-25 feat: Add built-in ASCII art marker usage documentation
b0398e4 2025-06-25 feat: Show complete ASCII art usage tree without truncation
e76ead0 2025-06-25 üå≥ Fix emoji encoding & add beautiful tree output to ASCII sync
a8e544d 2025-06-25 üìà Enhance ASCII art sync with usage frequency & coverage analysis
7bd24f2 2025-06-25 üßπ Organize workflow construction helpers: Create helpers/workflow/ subfolder
1241541 2025-06-25 üßπ Organize helpers: Create docs_sync subfolder for document synchronization tools
59badc3 2025-06-25 feat: One-Command ASCII Art Sync System - SOLID & TESTED
180b7b1 2025-06-25 feat: Revolutionary One-Command ASCII Art Synchronization System
f8ae43f 2025-06-25 docs: Fix ASCII art spacing alignment in README banner
e526464 2025-06-25 About ASCII art tweak
d094968 2025-06-25 Testing new ASCII art
136c091 2025-06-24 Small tweaks around Nix art
f8110c2 2025-06-24 Broke out Nix not on my machine problem
562d62d 2025-06-24 Added Darwinix banner to Pipulate README
0111510 2025-06-24 Pendantic apostrophe spell fix
bd7eb55 2025-06-24 Even more pedantic spacing tweak
4120116 2025-06-24 Added emojis and elevator pitch about
3b6a3ce 2025-06-24 Rearranged README messaging order
8677ff3 2025-06-24 Pedantic spacing tweaks
16405af 2025-06-24 No React, No Cloud art tweaks
7ae243c 2025-06-24 Put how the world has changed above new art
f0ca46c 2025-06-24 Unicorn art
3804495 2025-06-24 Feat: Enhance Living README with chef/customer audience diagram
ed14fb4 2025-06-24 üö® CRITICAL FIX: Jekyll-Compatible HTML Comment Markers
4d0d595 2025-06-24 üìä PROGRESS UPDATE: First Living README Distribution Complete
5e2f7bf 2025-06-24 üìã STRATEGIC FOUNDATION: Living README Distribution Battle Plan
dba95db 2025-06-24 üêõ FIX: Classic Leading Space Absorption Bug in ASCII Art Parser
f615cef 2025-06-24 üöÄ LIVING README BREAKTHROUGH: Complete ASCII Art Distribution System
08cf9e3 2025-06-24 feat: Living README ASCII Art Parser - First Small Bankable Success
e0e0bc6 2025-06-24 feat: Add section dividers to README.md for Living README system
a11f81c 2025-06-24 fix: Handle mixed comment styles in prompt_foo.py file processing
1c59bc0 2025-06-24 Fix: Wait for server to be ready before opening browser tab
b6a75b6 2025-06-24 Fix: Correct syntax error in get_current_environment (remove escaped quotes)
7f1017c 2025-06-24 Fix: Ensure data directory exists before writing current_environment.txt
dcb6334 2025-06-24 Fix: Ensure data directory exists before writing environment and db files
2abdcea 2025-06-24 Poetry
9257696 2025-06-23 feat: Comprehensive Content Size Perspective System
8485bf4 2025-06-23 feat: Front-load XSD schema in XML context for immediate LLM understanding
8634815 2025-06-23 feat: Comprehensive XML Schema Definition and Validation Analysis
2fb5fb5 2025-06-23 feat: Preserve inline comments from foo_files.py through to XML output
f5490aa 2025-06-23 feat: Implement namedtuple structure with inline comments for generate_files_list.py
b33f928 2025-06-23 Silly poem
2110a95 2025-06-23 fix: Correct plugin imports to use absolute imports instead of relative
8e7a2a9 2025-06-23 fix: Update plugin imports after moving crud.py to parent directory
0be2b8d 2025-06-23 refactor: Move crud.py from plugins/ to root directory
f6bd452 2025-06-23 YAML front matter renders on the GitHub repo homepage if it's not a GitHub Pages repo, so removing it.
871f1c9 2025-06-23 An extra line to ensure GitHub doesn't render YAML front matter
a4282c1 2025-06-23 YAML front matter experiment on the README.md
558e19e 2025-06-23 Enhance: Parse version banner into figlet + subtitle format
6dfc4bc 2025-06-23 Feat: Add Nix flake version banner in digital font
52f5b66 2025-06-23 Fix: Improve log legend readability with white text
ba1e23b 2025-06-23 Feat: Rich log legend for emoji crash course
5d302e3 2025-06-23 Feat: AI-specific logging for watchdog restart architecture
c142210 2025-06-23 Moved Restart Figlet banner to immediately after server logging
1dd3b69 2025-06-23 üßπ CLEANUP: Removed Debug Logging - MCP System Production Ready
1ef95a7 2025-06-23 üéâ BREAKTHROUGH: MCP Tools Registration & ASCII Banner Success!
6bece6b 2025-06-23 üîç DEBUG: Identified MCP Registry Object Identity Issue
bd4885f 2025-06-23 üîß FIX: MCP Tools Registry Synchronization
08a0fde 2025-06-23 üîß FIX: MCP Tools Registration and Banner Display
77a0f89 2025-06-23 üé® COMPREHENSIVE ASCII ART LOGGING ENHANCEMENT
ddcc45b 2025-06-23 feat: Pipulate Testing Philosophy - Baby Step Implementation
c1b636d 2025-06-23 Removed HX-Trigger-After-Settle on chain_reverter
8cc34e1 2025-06-23 Fixed the scrolling to the bottom problem
f5b9113 2025-06-23 Fix: Restore accidentally removed word counting functionality
008035b 2025-06-23 Tweaked Hello World key language
0d9005a 2025-06-23 feat: Add external/add-on files support for cross-repository AI assistance
739f825 2025-06-23 feat: Add recursive helpers discovery with enhanced filtering
b8e4863 2025-06-23 feat: Add intelligent file filtering to generate_files_list.py
9876f94 2025-06-23 feat: Modularize prompt_foo.py file selection with intelligent defaults
7a1148a 2025-06-23 Moved some more cleanup files
93e87c4 2025-06-23 Moving consolidation cleanup files around
1fbc4eb 2025-06-23 üé£ ENHANCEMENT: Teach AI Assistants to Fish - Radical Transparency Discovery
dd49084 2025-06-23 ü§ñ BREAKTHROUGH: AI Assistant Cold Bootstrap Education System
fc004d5 2025-06-23 feat: Pipulate Testing Philosophy - Baby Step Implementation
db78c7d 2025-06-23 feat: Complete MCP consolidation project and organize enterprise tooling
5867b5a 2025-06-23 üéâ CONSOLIDATION COMPLETE: 20.8% server.py reduction achieved
5895353 2025-06-23 üõ°Ô∏è CHECKPOINT: Before manual browser function consolidation
07614d3 2025-06-23 üõ°Ô∏è REGRESSION PREVENTION SUCCESS: Automation script proof of concept
dc3f9ce 2025-06-23 üîÑ CHECKPOINT: Consolidated _browser_automate_workflow_walkthrough (248 lines removed)
40b86c9 2025-06-23 ‚úÖ MANUAL COMPLETION: First browser function fully consolidated
1ba7817 2025-06-23 ü§ñ AUTOMATED CONSOLIDATION: First browser function success
92949e2 2025-06-23 üõ°Ô∏è REGRESSION PREVENTION: Complete Git Verification Toolkit
9ef014b 2025-06-23 üèÜ PHASE 1: Complete Botify Tools Consolidation
fd0ada6 2025-06-23 üóëÔ∏è MASSIVE WIN: UI Tools Consolidated - 147 lines removed!
b1cce7b 2025-06-23 ‚úÖ PHASE 1A: Consolidated local_llm_get_context tool
d805395 2025-06-23 üóëÔ∏è PHASE 2B: Cleaned up duplicate MCP registrations
625e5a6 2025-06-23 üóëÔ∏è PHASE 2A: Removed 307 lines from server.py
57b4cd0 2025-06-23 ‚úÖ CONSOLIDATION PHASE 1: Working MCP tools consolidation
31cff4c 2025-06-23 isort
016ebd0 2025-06-22 Perfect ASCII Art in Logs: AI Creative Vision Complete
fbb5b69 2025-06-22 üé≠ AI Creative Transparency Revolution: Perfect Dual Experience
7a2f7b7 2025-06-22 üé≠ Perfect Dual Experience: Filter AI Creative Vision from Console
c0e6c77 2025-06-22 üéØ Enhancement: Backtick-Wrapped ASCII Art for AI Assistants
22c32b4 2025-06-22 üöÄ Refactor: Efficient AI Creative Transparency System
862f3ae 2025-06-22 Tiny ASCII art tweaks
d8802e4 2025-06-22 üé≠ AI Creative Transparency: ASCII Art for AI Assistants
e97aff7 2025-06-22 Fix dual logging system to hide AI JSON data from console
1afde2f 2025-06-22 Implement dual logging system for Rich JSON display
88ab3a1 2025-06-22 Fix startup JSON logging to show Rich syntax highlighting in console
e7e862b 2025-06-22 Enable Rich JSON console output for startup database logging
e5bf525 2025-06-22 Fix startup database logging to use Rich JSON formatting
9e509a6 2025-06-22 Complete Rich JSON syntax highlighting implementation
2c4ce7e 2025-06-22 Add Rich JSON syntax highlighting for dict/JSON displays
b42174b 2025-06-22 Startup Banners tweaked just so
04913e1 2025-06-22 Perfect banner positioning with subheadlines
8e60960 2025-06-22 Adding some new banners, one for plugins and one for MCP
307e4ff 2025-06-22 Falling Alice timing adjustments
d3c7dd5 2025-06-22 Suppress: pkg_resources deprecation warning from seleniumwire
ada2007 2025-06-22 Add: Beautiful restart banner for watchdog reloads ‚ú®
31be083 2025-06-22 Fix: Show startup banner only once per manual server start
89d7f7a 2025-06-22 Console experience tweaking
5336a74 2025-06-22 ASCII Art Adjustments
7282b16 2025-06-22 Alice in a banner
8c4c04c 2025-06-22 Tweaked the White Rabbit
bbddee0 2025-06-22 üé® STATUS BANNER: White labels for better readability
5d5287f 2025-06-22 üé® BANNER SYSTEM: Fixed escape sequences and centralized colors
ac8bb52 2025-06-22 üé® BANNER COLORS: Centralized color configuration system
60a2680 2025-06-22 fix: Correct Alice banner bunny ear positioning
2e73e36 2025-06-22 feat: Add beautiful ASCII banner system with Rich library
60a1742 2025-06-22 Add tasteful storytelling system with Rich library
d1bd8f2 2025-06-22 Fix circular import in ProfilesPlugin during startup
33cd101 2025-06-22 Fix pipeline summary SQLite Row attribute access
808049f 2025-06-22 Fix pipeline summary SQLite Row attribute access
c2bec2a 2025-06-22 Externalize core inline styles to CSS classes
3cd0fd6 2025-06-22 Externalize workflow content style constants to CSS classes
6213ed7 2025-06-22 Fix scroll competition between widget-scripts.js and other scroll systems
8c7c030 2025-06-22 Remove deprecated get_style() method and style constants
277d6c2 2025-06-22 Replace get_style() calls with semantic CSS classes
b4e200f 2025-06-22 Enhance plugin registration failure logging
382dad4 2025-06-22 Experimenting with Chain Reverter
a9ee3c6 2025-06-22 Enhance browser stealth with modest 80/20 improvements
192ea0e 2025-06-22 Fix DOM structure destruction in error handling
eb4488a 2025-06-22 Fix HTTP timeout handling in Simon Says MCP execution
66f1ae6 2025-06-22 Fix variable scoping issue in Simon Says MCP success path
5db9c27 2025-06-22 And now I made the standard button in the Simon Says Make MCP Call actually look like a standard PicoCSS button
02ca8a2 2025-06-22 The think that looked like a button in Simon Says Make MCP Call but wasn't no longer looks like a button
122a91e 2025-06-22 Fix Google search response parsing in Simon Says MCP
bd14edb 2025-06-22 Optimize browser search timing and CAPTCHA detection
4a44457 2025-06-22 Cut down time before typing in Google Search MCP example
7aa86cd 2025-06-22 Clicking away releases the menu in Dev Assistant
bb1ddee 2025-06-22 Add: Click-away-to-dismiss for Dev Assistant search dropdown
f34724b 2025-06-22 Fix: Eliminate Dev Assistant search timing issues by copying proven nav pattern
bee938f 2025-06-22 Refining Dev Assistant menu
32ccb84 2025-06-22 Dev Assistant menu working better
c9dc421 2025-06-22 Fix: Use event delegation for plugin dropdown clicks
0dce917 2025-06-22 Fix: Make selectDevAssistantPlugin global to survive HTMX content replacement
0310fe4 2025-06-22 Fix: Mouse click selection in Dev Assistant plugin search dropdown
8a5c033 2025-06-22 Show automation score on collapsed Details summary button
2a9088c 2025-06-22 Remove artificial 10-result limit from plugin search dropdowns
c06f89f 2025-06-22 Fix: Remove autofocus conflict in Dev Assistant search
d6eae41 2025-06-22 Feature: Show full plugin list on search field activation
68d549f 2025-06-22 Specifically addressed gap between Search plugins and PROFILE
c2c6a10 2025-06-22 Standardize: Unify gap widths across flex layouts with Pipulate CSS variables
3d1c4ec 2025-06-22 Fix: Resolve circular import error in profiles plugin
a13e133 2025-06-22 Fix: Eliminate dual browser windows in stealth search automation
2fe1112 2025-06-22 Feat: Enhanced CAPTCHA handling for stealth search automation
dae8b01 2025-06-22 Fix: Resolve browser_stealth_search MCP tool registration issue
9121fc3 2025-06-22 Feat: Add Google Search MCP test and reorder Simon Says dropdown
47906e9 2025-06-22 Fix: Make browser automation fully portable across environments
d213eb7 2025-06-22 Fix: Update MCP browser automation tool compatibility
cb27373 2025-06-22 Feat: Extract MCP tools to separate module with enhanced stealth search
c5861f0 2025-06-22 kung_foo anything filtered from repo with .gitignore
183ed64 2025-06-22 Fix: Restore proper browser automation file organization
c45442b 2025-06-22 Organize: Move browser automation test scripts to dedicated directory
8a04e6b 2025-06-22 Cleanup: Remove duplicate files and organize DOM processing utilities
24c734a 2025-06-22 fix: Move browser automation examples to proper semantic location
c8d5091 2025-06-22 refactor: Organize browser automation files into proper structure
886d46c 2025-06-22 security: Complete removal of scraped data from git history
7c4cc11 2025-06-22 feat: Interactive Google search with CAPTCHA handling
1d5ee12 2025-06-22 üéØ COMPLETE 2ND-STAGE AUTOMATION PIPELINE
4f5a6c4 2025-06-22 üé® ULTIMATE AI DOM BEAUTIFIER & AUTOMATION REGISTRY
ca7a760 2025-06-22 ü§ñ REVOLUTIONARY: Complete AI Browser Embodiment System
65b3978 2025-06-22 feat: Blast AI browser embodiment confidence on every startup
9176f62 2025-06-22 feat: Create AI browser embodiment system
e09c384 2025-06-22 cleanup: Remove outdated development artifacts and prepare for browser automation
b330f0b 2025-06-22 Got the nuance of the New Key button just right
9f736a8 2025-06-22 refactor: Externalize üÜï New Key button styling to CSS
896dafc 2025-06-22 refine: Adjust üÜï New Key button padding for perfect height match
778ca6d 2025-06-22 fix: Remove border from üÜï New Key button for exact height match
e4f2761 2025-06-22 style: Apply 50% opacity to üÜï New Key button
06ba6cf 2025-06-22 fix: Match üÜï New Key button height and styling to main button
b8e0677 2025-06-22 fix: Improve üÜï New Key button visual consistency
c69a399 2025-06-22 feat: Apply global border radius to main ENTER_KEY button
36864c0 2025-06-22 feat: Add global button roundedness control
9df38e4 2025-06-22 Style: Add 50% transparency to new key button for subtlety
fec97f7 2025-06-22 Style: Increase emoji button size for better visibility
f321ae1 2025-06-22 Style: Tighten üÜï button styling for minimal visual footprint
407bbb7 2025-06-22 Enhance: Force page reload in generate-new-key endpoint
8b2bd23 2025-06-22 Fix: Resolve plugin lookup in generate-new-key endpoint
1857765 2025-06-22 Feature: Add explicit üÜï button for new key generation
ebd58fe 2025-06-22 Fix: Mass correction of plugin_name inconsistency across 22+ plugins
72ec506 2025-06-22 Fix: Repair key incrementation in 630_prism.py
a97242b 2025-06-22 Fix: Repair broken Prism.js widget in 630_prism.py
b30915b 2025-06-22 Fix: Correct markdown widget pipeline ID generation for key incrementation
9501a93 2025-06-22 Fix: Correct pipeline ID generation in Mermaid widget
830e49c 2025-06-22 Fix: Resolve Marked.js/Prism.js object reference conflict in markdown component
9be2e00 2025-06-22 Complete switch/toggle component automation improvements - SPECTACULAR!
a9a9c7e 2025-06-22 Complete range selector component automation improvements - SPECTACULAR!
a25d875 2025-06-22 Complete radio button component automation improvements - SPECTACULAR!
1efe9a7 2025-06-22 Complete checkbox component automation improvements - SPECTACULAR!
292e99d 2025-06-22 Complete dropdown component automation improvements
45ed616 2025-06-21 Complete text area component automation improvements
c3c3421 2025-06-21 Complete upload component automation improvements
3047ea3 2025-06-21 feat: Apply MATERIAL WORLD ACTUALIZATION improvements to 580_upload.py
409eb13 2025-06-21 feat: Complete righteous positive feedback loop integration
f9d93d4 2025-06-21 feat: Integrate browser automation into MCP tool system
fd728fd 2025-06-21 üèÜ WRIGHT BROTHERS MOMENT: Component Analysis SUCCESS!
8d32ecb 2025-06-21 üéØ CRITICAL FIX: Correct Pipulate server port
5ddf683 2025-06-21 üé≠ THE MAGIC MOMENT: Visible Browser Automation
307ce7d 2025-06-21 üéØ Enhancement: Component-focused automation analysis
13c0f73 2025-06-21 üéØ Baby Step 3: THE RIGHTEOUS POSITIVE FEEDBACK LOOP
0fa015d 2025-06-21 ‚ö° Baby Step 2: Complete browser interaction control
b14cf83 2025-06-21 üöÄ Foundation: Add core MCP browser automation tools
ed5ae33 2025-06-21 üéØ Enhancement: Complete automation & accessibility for Botify Connect plugin
6d737d7 2025-06-21 Enhancement: Complete automation & accessibility for Development Assistant plugin
82d354b 2025-06-21 Enhancement: Complete automation & accessibility for Botify Trifecta plugin
4848410 2025-06-21 Documentation: Update ARIA protection strategy for new architecture
1643606 2025-06-21 Enhancement: Perfect automation attribute detection for FastHTML patterns
5829b90 2025-06-21 Fix: Correct data_testid regex pattern for automation scoring
6279bd6 2025-06-21 üéØ Fix Development Assistant scoring logic for fair automation assessment
7d26a3d 2025-06-21 üöÄ Comprehensive automation & accessibility enhancement for Hello Workflow
2ffaf55 2025-06-21 üéØ Achieve perfect 100/100 automation score in blank placeholder
414d3dd 2025-06-21 üîç Enhance Development Assistant with detailed automation scoring
72daeff 2025-06-21 üîß Fix ARIA attributes in environment dropdown menu
882b9a8 2025-06-21 üéØ Complete automation & accessibility optimization (90‚Üí100 score)
355bf4e 2025-06-21 üîß Fix automation & accessibility issues in blank placeholder plugin
2a04151 2025-06-21 üîß CRITICAL FIX: Add language classes to Pre elements for PrismJS
b000fe2 2025-06-21 Enhance PrismJS initialization with timing and debugging
74d3a48 2025-06-21 Fix PrismJS copy button targeting for terminal commands
ad4bf06 2025-06-21 Implement comprehensive copy functionality with PrismJS integration
d165d5e 2025-06-21 Enhance copy functionality across all DevAssistant sections
995822e 2025-06-21 Add comprehensive copy functionality to Development Assistant
1fa4884 2025-06-21 Integrate ARIA validation into Development Assistant for automation readiness
a662428 2025-06-21 üóÇÔ∏è ORGANIZE: Move ARIA protection strategy to training directory
d13812b 2025-06-21 üõ°Ô∏è PROTECTION: Implement comprehensive ARIA regression prevention system
1de0d7c 2025-06-21 üö® CRITICAL REGRESSION FIX: Restore complete SELENIUM READY accessibility suite to both APP and PROFILE dropdowns
2b594d1 2025-06-21 üîß FIX: Remove role='group' from PROFILE dropdown to restore consistent PicoCSS padding
5f66ef0 2025-06-21 üöÄ BREAKTHROUGH: Add critical Cursor IDE Python interpreter setup to eliminate environment struggles
456bac0 2025-06-21 ‚ôø ACCESSIBILITY: Add comprehensive ARIA labels to navigation menus
d5ad345 2025-06-21 üéØ SEMANTIC: Complete inline style consolidation for theme and settings components
a4c140d 2025-06-21 üéØ EXTERNALIZE: Move all dropdown menu inline styles to CSS classes
c4ffd05 2025-06-21 üîß FIX: Restore dropdown-menu-item classes for consistent radio button spacing
d47fa6b 2025-06-21 üîß FIX: Eliminate cosmetic KeyError logs for newb-friendly startup
7148aea 2025-06-21 üîÑ REVERT: Back to working redirect system, investigate CSS solution for flash
4e5d254 2025-06-21 üöÄ FIX: Eliminate black flash in redirect endpoint with HTMX-friendly redirects
2d5821f 2025-06-21 ü§ñ SELENIUM READY: Comprehensive ARIA attributes + Detective Story Documentation
f5c038f 2025-06-21 üéØ ROOT CAUSE: Remove role='group' from PROFILE dropdown for consistent PicoCSS padding
6fbdd07 2025-06-21 üéØ REVERT: Back to PROFILE with natural width - embrace content-driven design
6ca9436 2025-06-21 üéØ NATURAL: Change PROFILE ‚Üí USER for organic button width consistency
0b221a2 2025-06-21 üîß FIX: Target PROFILE dropdown width specifically, preserve others
28f5784 2025-06-21 üéØ SEMANTIC: Consistent dropdown button widths for visual harmony
277993e 2025-06-21 üéØ COMPLETE: Lock Profile checkbox gets semantic dropdown spacing
7eeb5c4 2025-06-21 üéØ SEMANTIC: Consistent dropdown menu spacing across APP/PROFILE/DEV
ca90c65 2025-06-21 feat: Implement Pipulate semantic color system
0d82301 2025-06-21 feat: Complete semantic variable system across UI components
b398116 2025-06-21 feat: Extend semantic variables to upload, code blocks, and buttons
4b0e293 2025-06-21 feat: Apply Pipulate semantic variables to core CSS classes
545f453 2025-06-21 feat: Add Pipulate semantic design system variables\n\nSEMANTIC DESIGN SYSTEM FOUNDATION:\n‚Ä¢ Added comprehensive Pipulate CSS variable system to :root\n‚Ä¢ Created semantic variables based on consolidation analysis patterns\n‚Ä¢ Enables cross-cutting design adjustments while maintaining semantic meaning\n\nVARIABLE CATEGORIES ADDED:\n‚Ä¢ SPACING SYSTEM: element-offset, content-bottom, progress-top, component-gap\n‚Ä¢ TYPOGRAPHY SYSTEM: secondary, small, badge, tiny font sizes\n‚Ä¢ PADDING SYSTEM: standard, badge, button-compact, container, section\n\nDESIGN PHILOSOPHY:\n‚Ä¢ Variables reflect semantic purpose rather than visual properties\n‚Ä¢ Based on actual usage patterns discovered during CSS consolidation\n‚Ä¢ Enables unified control over common design patterns across components\n‚Ä¢ Maintains PicoCSS compatibility while extending with Pipulate semantics\n\nNEXT PHASE:\n‚Ä¢ Replace hardcoded values with semantic variables across CSS classes\n‚Ä¢ Maintain visual consistency while enabling design system control\n‚Ä¢ Demonstrate cross-cutting adjustment capabilities\n\nTESTING VALIDATED:\n‚Ä¢ Server response: ‚úÖ 200 OK\n‚Ä¢ CSS syntax validation successful\n‚Ä¢ No visual impact (variables defined but not yet applied)
c1629dd 2025-06-21 Fix: Consolidate text-secondary and text-muted classes\n\nSEMANTIC IDENTICAL CONSOLIDATION #4:\n‚Ä¢ Identified .text-secondary and .text-muted as completely identical\n‚Ä¢ Both classes had: font-size: 0.9em; color: var(--pico-muted-color);\n‚Ä¢ Consolidated into single selector group maintaining both class names\n‚Ä¢ Removed redundant CSS definition while preserving all functionality\n\nCLASSES USAGE VERIFIED:\n‚Ä¢ .text-secondary: 50+ references across plugins and server.py\n‚Ä¢ .text-muted: 15+ references in plugins (040_hello_workflow, 110_parameter_buster, etc.)\n‚Ä¢ Both classes serve identical semantic purpose: muted/secondary text styling\n\nTESTING VALIDATED:\n‚Ä¢ Server response: ‚úÖ 200 OK\n‚Ä¢ No functional impact - both class names still work identically\n‚Ä¢ Visual consistency maintained across all components\n\nBENEFITS:\n‚Ä¢ Eliminated true duplicate CSS definition\n‚Ä¢ Single source of truth for muted text styling\n‚Ä¢ Reduced CSS surface area while maintaining backward compatibility\n‚Ä¢ Cleaner CSS structure with semantic grouping"
52917cf 2025-06-21 Fix: Consolidate task element margin-left pattern\n\nSEMANTIC IDENTICAL CONSOLIDATION #3:\n‚Ä¢ Identified 3 task classes with identical margin-left: 5px pattern\n‚Ä¢ Consolidated .task-delete-icon, .task-text-display, .task-update-form spacing\n‚Ä¢ Moved common margin-left property to unified selector group\n‚Ä¢ Maintained individual class properties for specific behaviors\n\nCLASSES CONSOLIDATED:\n‚Ä¢ .task-delete-icon: cursor + display + text-decoration (kept) + margin-left (consolidated)\n‚Ä¢ .task-text-display: cursor (kept) + margin-left (consolidated)\n‚Ä¢ .task-update-form: display (kept) + margin-left (consolidated)\n\nTESTING VALIDATED:\n‚Ä¢ Server response: ‚úÖ 200 OK\n‚Ä¢ All 3 classes verified in use: plugins/060_tasks.py\n‚Ä¢ No functional impact - visual consistency maintained\n\nBENEFITS:\n‚Ä¢ Reduced CSS redundancy by consolidating identical spacing pattern\n‚Ä¢ Single source of truth for task element left margin\n‚Ä¢ Cleaner CSS structure with semantic grouping\n‚Ä¢ Easier maintenance of task spacing consistency"
2b1306b 2025-06-21 Fix: Remove semantically identical .primary-link class
b97d618 2025-06-21 Fix: Remove duplicate .font-code class definition
396510b 2025-06-21 Phase 7-8: Final CSS consolidation - text content system
96fbf8e 2025-06-21 Phase 5-6: Role plugin and display utilities consolidation
cf28e2d 2025-06-21 Phase 1-4: Major CSS consolidation - text, spacing, flex, and icon/link classes
9389f41 2025-06-21 Cleaned up the /helpers/cleanup folder - deleted stuff I don't think I even need for example purposes anymore
3838ce5 2025-06-21 feat: added upload plugin semantic CSS classes
416e0bf 2025-06-21 feat: semantic CSS consolidation for form input plugins
4f1cb33 2025-06-21 feat: semantic CSS consolidation for tasks plugin
7cede47 2025-06-21 feat: semantic CSS consolidation for profiles plugin
ae916f2 2025-06-21 feat: semantic CSS consolidation for introduction plugin
aec4410 2025-06-21 feat: semantic CSS consolidation for roles and dev assistant plugins
747caed 2025-06-21 feat: semantic CSS consolidation for workflow genesis plugin
5ec5894 2025-06-21 feat: semantic CSS consolidation for documentation plugin
a696da8 2025-06-21 CRITICAL FIX: Duplicate cls Attribute Syntax Errors
500d0fc 2025-06-21 PHASE 3: Complex Pattern Semantic Consolidation
a19c602 2025-06-21 PHASE 2: URL & Progress Semantic Consolidation
4548a0b 2025-06-21 PHASE 1: Error Message Semantic Consolidation
3e6ca32 2025-06-21 USER-FOCUSED: Simplify roles.md technical language
b60ffff 2025-06-21 RESTORE: training/roles.md with comprehensive update
2687273 2025-06-21 TRAINING DIRECTORY CRUFT CLEANUP: Radical Rules Consolidation
e499210 2025-06-21 Preparing to clean training directory
c72a57f 2025-06-21 Complete File 02: Core Concepts Transformation via Incremental Approach
e9fa074 2025-06-21 REVOLUTIONARY: Transform Cursor Rules into AI Assistant Crash Course
1d23ae1 2025-06-21 Phase 6: Final cleanup - fix double quote pattern
3dcb734 2025-06-21 Phase 5: Mass migration of easy plugin style patterns
d7dabb3 2025-06-21 Phase 4: Update browser automation plugins style system
88ae91d 2025-06-21 Phase 3: Update display plugins style system (markdown & mermaid)
416f649 2025-06-21 Phase 2: Update core text plugins style system
c5e2cae 2025-06-21 Phase 1: Remove deprecated get_style() method and style constants
a576c94 2025-06-21 Fix: Complete embedded CSS cleanup in step methods
fcdb2c6 2025-06-21 Fix: Clean up embedded error style in handle_revert method
7f851ab 2025-06-21 Fix: Clean up embedded CSS styles in finalize method
0c6456b 2025-06-21 About to do another round of cleanup, Hello World workflow based
f7aeafd 2025-06-21 Fix: Add controlled exit timing for graceful user experience
6e125f7 2025-06-21 Fix: Add bulletproof error handling with try/finally blocks
571a05f 2025-06-21 Fix: Add critical operation flags to prevent watchdog conflicts
1f544f2 2025-06-21 Fix: Add environment safety check to reset Python environment
ed2ee9a 2025-06-21 Fix: Restore missing theme preference initialization
c42eb1c 2025-06-20 Brought back regressed Python environment reset work
2744bcc 2025-06-20 Fix navigation layout: Force single-row flex layout
c0ca1ce 2025-06-20 üéØ HTML Cleanup Mission Complete: 81.2% Inline Style Reduction
d034970 2025-06-20 Additional HTML cleanup: Target remaining inline style patterns
1b8f771 2025-06-20 Major HTML cleanup: Replace 80+ inline styles with CSS classes
d918054 2025-06-20 Moved documents into training
ed23021 2025-06-20 üìã Documentation: Comprehensive Semantic Enhancement Summary
04dd941 2025-06-20 Enhance: Form semantic structure for LLM automation
2fed0a1 2025-06-20 Enhance: Workflow semantic structure for LLM automation
5ec19bb 2025-06-20 Enhance: BaseCrud semantic structure for LLM automation
ee775d4 2025-06-20 Fix: Remove duplicate role attribute from input group
68d66d7 2025-06-20 Fix: Navigation semantic enhancement - resolve role conflict
d1caab3 2025-06-20 Checkpoint: Before semantic enhancement - navigation analysis complete
e57a466 2025-06-20 Absorbing stray ```xml backtick fencing wrappers around xml processed by the MCP detector
0d1613d 2025-06-20 Making the LLM training when the explicit MCP button is pressed just adding silently to the conversation instead of visible in the stream
2ffd892 2025-06-20 Putting MCP tool under Developer ROLE
84b9f8b 2025-06-20 Much more direct Simon Says Do MCP training
d39663f 2025-06-20 Renamed Simon Says Make MCP Call app to be closer to dev assistant
516bfad 2025-06-20 Moved Simon Says Make MCP Call into Developer ROLE
2c1b052 2025-06-20 Fixed the cat fact example, tested both direct and as a copied command into chat
f152feb 2025-06-20 The Simon Says Make MCP Call game is workign from training it with a rigged for success example that goes into the conversation history to the ability to copy the example in a training envelope for pasting into the chat interface so that the MCP command is executed.
1acce2b 2025-06-20 Implementing a copy button
0b519a0 2025-06-20 Putting the MCP interactions into the conversation history so the local LLM can learn
1eb03c4 2025-06-20 Much more reliable flashing of UI elements but not going through LLM
be1401a 2025-06-20 Getting it to put stuff into conversation history silently without streaming everything
06edb1d 2025-06-20 Refining Simon Says Make MCP Call app
2170037 2025-06-20 Converted Simon Says Make MCP call from workflow to simple utility app
1e13f46 2025-06-20 Made HTMX menu in Simon Says Make MCP Call work
9e3298d 2025-06-20 Refactoring Simon Says MCP app
45a2527 2025-06-20 MCP controlled flashing of user interface elements working
77a45f3 2025-06-20 The Cat MCP baseline working
4885589 2025-06-20 Tightening up the MCP Web UI flasher
9ad6a2f 2025-06-20 Trying some MCP tricks to flash elements in the Web UI
5fd9f5a 2025-06-20 Stronger, unified HTMX visual indicator
8c01f19 2025-06-20 Activated the visual HTMX menu indicator on Select All, Deselect All and Default from the Roles app
6de6a6d 2025-06-20 Much more stable indication of menus getting HTMX updated
c519840 2025-06-20 Making the menus visually show you when something with HTMX updated them
f25748a 2025-06-20 Transparency enhancements in server.py for AI coding assistants
0770547 2025-06-20 Making Tasks show up under Core on Roles
b8d0064 2025-06-20 Moved the Python reset button down by one
793d17a 2025-06-20 Fixed the server startup message and initial endpoint message timing
3c13eaa 2025-06-20 Stopping the showing of the whole scary pip install output stream
f791dbd 2025-06-20 Better messaging for when the .venv has to be fully rebuilt
6467886 2025-06-20 More realistic Python upgrade process
59eb11e 2025-06-20 Trying a cleaner restart after Python upgrade
8b1c987 2025-06-20 Put watchdog wrangling in place for server restart during Python environment upgrades
5cdaf2e 2025-06-20 Putting full Python Environment Reset process in place
482b31a 2025-06-20 Adding a Reset Python Environment button to the Settings flyout
b3c2572 2025-06-20 Changed the Update Pipualte button to use the White Label app name
1f8b556 2025-06-20 Added Pipulate version number to Settings flyout
0951585 2025-06-20 Working on JupyterLab not auto-starting still
cf6a333 2025-06-20 More information when JupyterLab doesn't start
7fde805 2025-06-20 Fix: JupyterLab startup failure due to Python version mismatch
f72acc6 2025-06-19 Transparency test
79c7fda 2025-06-19 üîß Fix message routing: Use append_to_conversation() for silent AI context instead of visible chat interface - System messages now go directly to LLM conversation history without cluttering user interface
f4cb8e4 2025-06-19 ü§ñ Implement Adaptive Transparency: Local LLM vs Advanced AI - Capability-aware system design with separate guidance, local LLM helper tools (file access, log search, context), and pre-seeding system for immediate capability awareness
17a2b4b 2025-06-19 About to let Claude go nuts
1e421e2 2025-06-19 Experimental warming up ah-ha moment Instant AI Enlightenment System deployed
4abac9e 2025-06-19 Preparing to instill the radical transparency
16c2f06 2025-06-19 Control of line break displays
48e040b 2025-06-19 SECURITY FIX: Remove API token parameters from all MCP tools - Tokens now read automatically from helpers/botify/botify_token.txt - Never expose tokens in logs or responses - Follow same pattern as all other Botify integrations
f2b4e62 2025-06-19 Add botify_execute_custom_bql_query MCP tool - Core query wizard enabling custom dimensions, metrics, filters
14307d4 2025-06-19 Add botify_list_available_analyses MCP tool - Reads local analyses.json to help LLM select analysis_slug
fecf0ed 2025-06-19 Add botify_get_full_schema MCP tool - Integrates true_schema_discoverer.py as MCP tool
789a10f 2025-06-19 Preparing a radical transparency plan
1880248 2025-06-19 Implemented an Update Pipulate button under Settings. Needs testing.
a23fa11 2025-06-19 Reducing all the headline sizes by a smidge for Macbook screens
2eedb36 2025-06-19 Externalized theme initialization JavaScript
d2996fa 2025-06-19 Added MarkedJS init file to the global scripts loading area in server.py near fast_app
2ac1fd6 2025-06-19 Adding an init for MarkedJS
eeca111 2025-06-19 Got rid of the conflicting web socket message streaming handler from before MarkedJS integration
14dda76 2025-06-19 Showing the Alice ASCII art even when STATE_TABLES = True
e8515bf 2025-06-19 Making visiting the /docs endpoint cause local LLM training on radical transparency system
1b1c37a 2025-06-19 Making sure the AI coding assistants in the future really understand the radical transparency of this system.
1844770 2025-06-19 Simplified some ambigious field mapping in favor of explicit though often verbose dot-object notation for the developer looking at the code.
503d05f 2025-06-19 Fixed bug in field discovery
400f320 2025-06-19 Have taken measures against a constant regression where Hide/Show Code always stops working for cached steps because the LLMs keep removing the Python generation.
d28eeb4 2025-06-19 Making sure the use of the View Folder and Copy 2 Downloads buttons in Trifecta are consistent
6e8c779 2025-06-19 Handling the 20250525-2 aka analysis-N variations in the date name handling in the dropdown menu
f141965 2025-06-19 The dropdown menu for the Analysis step is much more informative and has human-readable dates
60adaf0 2025-06-19 More control of caching language during Trifecta downloads, particularly the Web Log exception
95175d7 2025-06-19 Cache size being shown on the button when file already downloaded in Trifecta
cd9a24b 2025-06-19 Fixing a cached button issue
cbd2966 2025-06-19 Clear log markers added for template validation.
4c147af 2025-06-19 Created and tested validate_template_fields for more robust field selection for downloads
969bea5 2025-06-19 Preparing to put all the field discovery stuff to use
6747a73 2025-06-18 /trifecta/discover-fields/ endpoint is working
2258cd4 2025-06-18 Working on MCP endpoint
7d2e6bc 2025-06-18 feat: add field discovery endpoint for BQL template validation foundation
6f13077 2025-06-18 fix: clean up startup housekeeping issues for better user experience
e8d801e 2025-06-18 feat: add recursive JSON parsing to make deeply nested workflow data fully readable in both console and logs
27d858d 2025-06-18 fix: improve table state logging readability by parsing nested JSON strings in data fields
a981202 2025-06-18 feat: move logger initialization earlier and convert print statements to logger with FINDER_TOKEN markers for better startup visibility
4efe620 2025-06-18 feat: Add core Botify MCP tools - botify_ping, botify_list_projects, botify_simple_query with full auth, validation, and error handling
a21573e 2025-06-18 feat: Implement generic MCP tool registry system - Foundation for plugin-based MCP tools with dynamic dispatch, maintains backwards compatibility, tested with cat_fact tool
bf1845b 2025-06-18 More radical transparency steps with the two analysis endpoints
870db76 2025-06-18 Combined printing the rich tables to the log and server console as the same command
faf1527 2025-06-18 Making sure rich tables and simplified versions of figlets and Alice get written to the log.
19fc2d5 2025-06-18 Replaced all logging with logger
72899c8 2025-06-18 All writing of Python to the server console also going to the web log
afc12f5 2025-06-18 Got the upper-case variations of Quadfecta to Trifecta search and replaces
f5c2c65 2025-06-18 Switching quadfecta fully back to trifecta
45138e5 2025-06-18 Converting quadfecta back into trifecta. Gutted Google Analytics GA specific stuff. That all comes through crawl collections.
2f12213 2025-06-18 Showing Python for depth-finding
cbcc8df 2025-06-18 Bringing back radical transparency of all API calls even when not in debug mode
50a1461 2025-06-18 Changing the log file naming convention fom the app_name dot log to the more standard server.log
1f13617 2025-06-18 Saving the advanced analysis json into the analysis download folder as soon as the analysis slug value is obtained.
d5b1c36 2025-06-18 Outputting analysis org and project endpoint into project folder immediately on getting a Botify Project URL
cecd20f 2025-06-18 Added a Copy button to copy the markdown from the Swagger Open API examples in the docs app
d4a0698 2025-06-17 GA download working in Quadfecta but only the URL column
3f822e7 2025-06-17 The Python is showing for all 5 steps in the Quadfecta template now
d665d52 2025-06-17 Fixing Hide/Show Python buttons AGAIN, this time in the new Quadfecta template
90bffc9 2025-06-17 ASCII art'ing artifacts eliminated
f039878 2025-06-17 Stray spaces
2a5dfe2 2025-06-17 What's included-tree update
8c27eef 2025-06-17 Even more pedantic word centering
535a3e2 2025-06-17 Pedantic comma consistency
c1ab41c 2025-06-17 Better arrows in Web UI layout diagram
80aa9e7 2025-06-17 There is no more Poke
2b6ab32 2025-06-17 Like cross-OS Mac Homebrew brew install
2f459f6 2025-06-17 Mention of MCP Tool-call
7dfacc0 2025-06-17 Magnitudes simpler than celery
4bcb3b0 2025-06-17 Pedantic centering
1dff533 2025-06-17 No not not
85a0db3 2025-06-17 Let's be fair and call out Svelte too
419ac5f 2025-06-17 Local-server-side cookie concept reinforced
7f390b6 2025-06-17 Think local-server cookies because server cookies sounds too cloud-like
c79c8e5 2025-06-17 Think server cookies
91a641f 2025-06-17 Run It
87f8a48 2025-06-17 Got install section in partity with Pipulate.com homepage
97ba0d9 2025-06-17 Deleted a big chunk of the README.md
55457fb 2025-06-17 Tiny tweak to README.md
2f3669c 2025-06-17 Preparing for some document unification single source of truth tasks
114bd2f 2025-06-17 Changelog update
eefd408 2025-06-17 Fix: DevAssistant version 2 plugin generation with collision avoidance - Modified create_workflow commands to generate version 2 plugins with '2' suffix - Filename: 120_plugin.py ‚Üí 120_plugin2.py (preserves menu order) - Class: ClassName ‚Üí ClassName2 (avoids class conflicts) - App: app_name ‚Üí app_name2 (prevents route collisions) - Display: 'Plugin Name' ‚Üí 'Plugin Name 2' (clear UI distinction) - Enables graceful plugin upgrades via parallel versions in WET workflow pattern - Fixed color contrast issues: changed dark gray text to black for readability - Summary button labels now display as crisp black text on light backgrounds
e3f9d65 2025-06-16 Making sure the paginated documentation reaches the conversation history when browsed
87ce8c2 2025-06-16 Fix: Remove deduplication logic from documentation plugin - PROBLEM: Documentation plugin prevented LLM context updates on revisited pages - ROOT CAUSE: Deduplication logic blocked conversation history for viewed documents - FIX: Always add content to conversation history, let dequeue handle overflow - IMPACT: LLM maintains current context of user's documentation viewing - UPSTREAM: Fixed notebook title generation for botify_open_api.md consistency
4cfd4ae 2025-06-16 Fixed the token splitting and stripping for the actual saved text file format (username on 2nd line).
783bf9a 2025-06-16 Smaller still endpoint headline
7befb8c 2025-06-16 Adjusted endpoint headline size in Botify Open API (decoded swagger) paginated doc
244cb20 2025-06-16 Fixing link to Botify Open API paginated doc
72f8685 2025-06-16 Tiny documentation update
547370c 2025-06-16 Better documentation order and freshed botify_api (bootcamp) markdown output
90c100f 2025-06-16 Removed redundant documentation
12527d1 2025-06-16 The cursor rules that are presented in the docs app are now very nice. Prev/next arrows top and bottom and top notch. Will be a great boon to LLMs providing coding assistance with this system and humans onboarding to Pipulate.
bbb9c3d 2025-06-16 First pass at prev/next arrows to navigate the rules in docs app
55523d0 2025-06-16 Numberic indexing of the rules files now being used in the docs app
0acc3fd 2025-06-16 Keeping the rules sequential ordering intact in the docs app
e080697 2025-06-16 Removed the now obsolete source references in documentation now that the old rules have been deleted
5ccfc13 2025-06-16 Putting a sharp, concise edge on the rules to prevent frequently violated patterns up-front.
1ab228b 2025-06-16 The big rules update
a5a7eb9 2025-06-16 Removed dead cleanup program
e79cc70 2025-06-16 More rules, getting ready for the big rule cleanup
f73dae1 2025-06-16 Add Developer link to roles introduction text - Added Developer? hyperlink after Ollama installation text - Links to /redirect/documentation to activate endpoint messaging - Maintains consistent styling with other links in paragraph - Provides developers quick access to documentation browser
0e09250 2025-06-16 Restore PrismJS syntax highlighting to paginated documents
c6e3bc3 2025-06-16 Fix markdown leakage in documentation navigation
948f70f 2025-06-16 Fix paginated documents coroutine issue - replaced lambda functions with proper async wrapper functions
ebc7ed8 2025-06-16 Add dedicated Paginated Documents section to documentation navigation - Added Paginated Documents section to left navigation in /docs - Extracted paginated documents from mixed categories into dedicated section - Added pagination metadata detection in document discovery - Modified get_categorized_docs() to return paginated_docs as 4th parameter - Updated create_tree_view() to include paginated documents section - Added CSS styling for .tree-link.paginated with blue theme - Added category filter support for ?category=paginated - Fixed title mappings for botify_open_api and change_log - Clean 80/20 solution: one special case for paginated docs vs multiple - Preserves all existing RegEx patterns for pagination
2880152 2025-06-16 Moved Documentation plugin into Tutorial role
3e2356f 2025-06-16 Renumering Dev Assistant and changing roles of Blank Placeholder and Trifecta in order to organize the Developer role
a65a899 2025-06-16 Eliminated 130_link_graph2.py since that's the new Trifecta template. Also renamed the internals of 400_botify_quadfecta.py to get rid of the 2's
aa192b8 2025-06-16 Update: Changelog entry for generic pagination system implementation
d4c70a4 2025-06-16 Added better description for the Workshop plugin role.
3d145c7 2025-06-16 Removed 330_widget_shim.py. If shim work is being done, one would just use a Kung Fu Placeholder produced by 200_workflow_genesis.py
5abb6bd 2025-06-16 Update: Changelog entry for DevAssistant autofocus UX improvement
c1f1624 2025-06-16 UX: Add autofocus to DevAssistant search field for immediate typing after New Analysis
4f49e6b 2025-06-16 Update: Changelog entry for New Analysis button fix
cd26792 2025-06-16 Fix: New Analysis button not working - remove Form wrapper and add proper HTMX attributes
26034ed 2025-06-16 Update: Changelog entry for DevAssistant restart pattern transformation
b1e3104 2025-06-16 Refactor: Transform DevAssistant completion to restart pattern - align with keyless utility architecture
6c3df7f 2025-06-16 Add: Pipulate Development Changelog - structured documentation system for tracking changes
8e62277 2025-06-16 Fix: Critical syntax error in 320_dev_assistant.py - resolve duplicate sections and structural issues
230a110 2025-06-16 feat: Transform dev assistant into keyless utility tool - MAJOR ARCHITECTURAL SIMPLIFICATION: Removed entire pipeline system overhead, Direct landing ‚Üí plugin search ‚Üí analysis results flow, No more keys, state management, or database persistence, Pure utility tool for rapid plugin analysis and re-analysis - STREAMLINED USER EXPERIENCE: Skip key generation completely, Immediate plugin search on landing, Instant analysis results display, Clean analyze ‚Üí re-analyze ‚Üí different plugin workflow - TECHNICAL DEBT ELIMINATION: Removed init, finalize, unfinalize, handle_revert methods, Simplified step methods to pure utility functions, Using simple class attributes instead of pipeline state, 80/20 rule applied - perfect for this use case - This is the keyless sculpture released from the pipeline stone!
cbcf575 2025-06-16 feat: Fix Enter key behavior in dev assistant plugin search - CRITICAL UX FIX for Carson Gross style active search: PROBLEM SOLVED: Enter key was trapped in HTMX search loop instead of progressing workflow, Users had to manually grab mouse to dismiss dropdown and click analyze button, Created frustrating keyboard-to-mouse context switching - SOLUTION IMPLEMENTED: Two-stage Enter key logic with smart context awareness, Stage 1: Enter selects highlighted plugin + auto-triggers analysis (100ms delay), Stage 2: Enter directly clicks analyze button when plugin already selected, Removed Enter from HTMX trigger to prevent search loop trap - DEVELOPER EXPERIENCE TRANSFORMATION: Pure keyboard workflow: Type ‚Üí Enter ‚Üí Analysis complete, No mouse dependency for plugin selection and analysis, Smart context switching between selection and submission modes, Eliminates the Carson Gross active search trap pattern - TECHNICAL IMPLEMENTATION: Enhanced handleDevAssistantKeyNavigation with dual Enter logic, Added setTimeout auto-trigger for seamless progression, Preserved all existing arrow key navigation and highlighting, Maintained single-result auto-highlighting for optimal UX - This completes the Carson Gross style active search implementation with proper Enter key handling that actually works as users expect
0b55c15 2025-06-16 feat: Transform dev assistant plugin selection to Carson Gross style active search - MAJOR UX UPGRADE to 320_dev_assistant.py step 1: REPLACED static dropdown with real-time searchable interface matching nav_search_container - NEW FEATURES: Live search input with 300ms HTMX debounce, Dynamic dropdown that appears/disappears on typing, Smart filtering by filename AND display names, Hover effects with PicoCSS color variables, Auto-limit to 10 results to prevent UI overflow, Clean display names (removes numeric prefixes) - CARSON GROSS STYLE ACTIVE SEARCH: Instant feedback as you type, Auto-hide dropdown when search cleared, Click-to-select functionality, Responsive design with proper spacing, Professional hover states and transitions - DEVELOPER EXPERIENCE IMPROVEMENT: No more scrolling through 50+ plugin dropdown options, Type 'param' to instantly find Parameter Buster, Type 'link' to instantly find Link Graph Visualizer, Consistent with main navigation search behavior, Dramatically faster plugin discovery and selection - This transforms the dev assistant from a tedious dropdown interface into a modern, responsive search experience that matches the quality of the main navigation
d763dc7 2025-06-16 feat: Add 'Create New Version' command generator to dev assistant - MAJOR PRODUCTIVITY ENHANCEMENT to 320_dev_assistant.py step 2: NEW FEATURE: Auto-generate create_workflow.py commands, Extracts plugin attributes (class name, APP_NAME, DISPLAY_NAME, etc.), Auto-increments numeric prefix for new versions (110_ ‚Üí 111_), Pre-fills all command arguments from analyzed plugin, Eliminates manual form-filling in workflow genesis - THREE TEMPLATE OPTIONS with ready-to-copy commands: Blank Template (default): Single-step learning workflow, Trifecta Template: 3-step data processing workflow, Quadfecta Template: 4-step advanced workflow with parameters - DEVELOPER WORKFLOW IMPROVEMENT: No more manual transcription from plugin analysis to genesis forms, One-click command generation for creating Parameter Buster v2, Link Graph v2, etc., Just swap template type and run the pre-generated command, Massive time-saver for iterative workflow development - This transforms plugin evolution from tedious form-filling to simple command execution.
7daa648 2025-06-16 feat: Update dev assistant to handle modern workflow template patterns - CRITICAL UPDATES to 320_dev_assistant.py template analysis: NEW: Detect CLASS_ATTRIBUTES_BUNDLE markers, Support centralized UI constants via pip.get_ui_constants(), Recognize centralized route registration (pipulate.register_workflow_routes), STEP_METHODS_INSERTION_POINT now optional for modern workflows - COMPATIBILITY FIXES: Parameter Buster (110_) now correctly analyzed, Modern workflows using centralized patterns no longer trigger false warnings, Template suitability assessment updated for hybrid patterns - The dev assistant was incorrectly flagging modern workflows like Parameter Buster as broken when they were using newer, better patterns
f97c75f 2025-06-16 Replacing rocket with aria spinner the moment the Execute Command button is pressed
e5d9992 2025-06-16 Put emoji's in the Genesis workflow and made the Kung Fu plugins always 001_
77cf2d8 2025-06-16 Fixed blank placeholder, returned the auto-key logic that somehow ended up missing
a290615 2025-06-16 Replaced old Quadfecta template with the new one I was working on as Link Graph 2
3879c96 2025-06-16 Fix: Missing Copy to Downloads button in step_crawler completion - Added missing download_complete flag and project_name field to check_result data structure - This enables _create_action_buttons to properly detect completed downloads and create download buttons
79407d5 2025-06-16 All remaining cases of foobar_basic changed to crawler
8228ca4 2025-06-16 Fix: Missing Copy to Downloads button in step_crawler - Fixed template key lookup from foobar_basic to crawler in _create_action_buttons method - This enables proper filename detection and download button creation for Step 3
d2f3f7c 2025-06-16 Fix UnboundLocalError in step_analysis_process method - variable scoping issue where analysis_template was undefined in step_crawler context - unified variable naming to use template_key in both branches
9f8f62d 2025-06-16 Implement hybrid static/dynamic step mode for helper script compatibility - Dynamic mode (default): Uses _build_dynamic_steps() for template-aware functionality - Static mode (optional): Uses static steps list for splice_workflow_step.py compatibility - Simple toggle: set use_static_steps = True to enable static mode - Maintains all dynamic functionality while preserving critical path compatibility - 80/20 solution: minimal code change, maximum compatibility
4416b91 2025-06-16 Test: Splice script compatibility with hybrid static/dynamic mode
228f056 2025-06-16 Add static insertion point for helper script compatibility - Preserve dynamic step functionality while maintaining compatibility - Helper scripts can target the static insertion point for splicing - No breaking changes to existing dynamic behavior - 80/20 solution: minimal code change, maximum compatibility
03c39b0 2025-06-16 Step 6: Restore Link Graph Edges configuration
e0fc1e4 2025-06-16 Step 5: Test configuration - Change analysis template to Not Compliant - This should EXCLUDE the crawler step (Parameter Buster mode) - Demonstrates dynamic step inclusion/exclusion
948c727 2025-06-16 Step 3: Replace hardcoded steps with dynamic step builder - Replace hardcoded steps list with call to _build_dynamic_steps() - Fix variable references from steps to self.steps - Workflow now dynamically includes/excludes crawler step based on template
ad45bc2 2025-06-16 Step 2: Add dynamic steps builder method - Add _build_dynamic_steps() method - Conditionally includes crawler step based on analysis template - Uses template names in step display text - Non-breaking change: method not used yet
b55413f 2025-06-16 Step 1: Add helper method for dynamic crawler step inclusion - Add _should_include_crawler_step() method - Logic: include crawler only for Link Graph Edges template - Prepares for dynamic step configuration - Non-breaking change: method not used yet
1a9380b 2025-06-16 Renamed step_foobar_basic to step_crawler
b9e2865 2025-06-16 Step 4: Complete systematic replacement of edges with analysis
80295c0 2025-06-16 Step 3: Update template configuration calls from edges to analysis - Part 1
e8f9aff 2025-06-16 Step 2: Update all docstring references from edges to analysis
b4a7963 2025-06-16 Step 1: Change TEMPLATE_CONFIG key from 'edges' to 'analysis' - Update template configuration key to reflect semantic meaning - Change variable name from edges_template to analysis_template - Update step display name to use analysis_template
c180347 2025-06-16 Replace crawler_basic with just crawler as the TEMPLATE_CONFIG key identity
78c073f 2025-06-16 Phase 1 Step 6: Update update_button_text to use template-aware file checking
a94503d 2025-06-16 Phase 1 Step 5: Add template-aware file checking method
cb6932c 2025-06-16 Phase 1 Step 4: Add template-aware filepath generation method
ad5082c 2025-06-16 Phase 1 Step 3: Enhance update_button_text with flexible step context mapping
95129d5 2025-06-16 Phase 1 Step 2: Add template-aware export type resolution
1a37a7b 2025-06-16 Phase 1 Step 1: Extract filename mapping to centralized method
6646248 2025-06-16 Turned foobar_basic into cralwer. Much better semantics. Almost ready to make Link Graph 2 new Quadfecta template
402f4e5 2025-06-16 Turned foobar_basic into cralwer. Much better semantics. Almost ready to make Link Graph 2 new Quadfecta template
f17efc8 2025-06-16 Update variable names from crawl_template to edges_template for semantic consistency
7f7d453 2025-06-16 Update all get_configured_template('crawl') calls to use 'edges'
1df4141 2025-06-16 Change TEMPLATE_CONFIG key from 'crawl' to 'edges'
0063b75 2025-06-16 Changed all occurrences of crawl_basic to foobar_basic to protect it from rebranding attempt of crawl key to edges
04017af 2025-06-16 Adjusting identity inside Link Graph 2, going to try crawl to table/key identity adjustment
e777d98 2025-06-16 Further rearrangement in preparation for current Link Graph 2 to become new Quadfecta, grouped step_ga under step_gsc
dc25754 2025-06-16 Rearranging Link Graph Visualizer 2 in preparation for being the new Quadfecta template
0aedb39 2025-06-16 Enabled the Hide/Show Code button on the Link Graph edges download of the new Link Graph Visualizer 2. All buttons present and active now on 1st download
93dc59f 2025-06-16 Brought back all 4 buttons on Link Graph Edges download even when cached in new Link Graph Visualizer
6016ad9 2025-06-16 Put in the missing Copy to Downloads button from the Basic Crawl
dc99180 2025-06-16 Removing vestigages of GSC in the Basic Crawl download procedure in the new Link Graph Visualizer 2
7cb93e1 2025-06-16 Partial cleanup of GSC vestiges in step_crawl_basic_submit method - fixed docstring and skip logic, but method still needs complete rewrite to use proper basic crawl logic instead of GSC logic
4989c42 2025-06-16 And now the initial state of the dropdown menu for the Analysis selector for downloading the link graph edges for the new Link Graph Visualizer 2 is properly HTMX powered
2c4d6ff 2025-06-16 Fixing HTMX state of initial menu for new Link Graph 2. It's working except for initial state which always shows Use Cached Link Graph even if a new Analysis period has been generated by the Botify system and hasn't been downloaded yet. It's an initialization thing.
9d9f35e 2025-06-16 The Step 3 transplant to make it first a copy of GA and then its own Basic Crawl step are complete in the new Link Graph Visualizer 2
dcc07bc 2025-06-16 Sticking closer to the AI instructions
f0758f6 2025-06-16 Adding Link Graph Visualizer 2
50687c6 2025-06-15 The cashing optimization is active on all download types in Quadfecta
1b21130 2025-06-15 Web Logs is optimized for fast progress if cached like GA and GSC in Quadfecta
72a6b47 2025-06-15 Cache optimization from GA applied to GSC in Quadfecta
5929584 2025-06-15 Deleted duplicate step_gsc and step_gsc_submit methods in Quadfecta
1c6d4af 2025-06-15 Cleaning up cruft from failed attempts
edb40f9 2025-06-15 The GA step in Quadfecta is now using the cached version if it exists and skipping the download like all the other steps.
30e734c 2025-06-15 Preventing re-downloads of GA when cached. Currently, it's re-downloading.
27faf2b 2025-06-15 Switched to much easier to look at step names
c3b6792 2025-06-15 Experimenting with doing away with the step_xx and step_xx_submit pattern for more condusive to rearranging pattern.
bb1d083 2025-06-15 Preparing to test switching from step_xx and step_xx_submit patterns to step_foo and step_foo_submit patterns for related bundles of workflow classes
392a461 2025-06-15 Removed link graph visualizer 2, unifying on one to get Quadfecta rolled into it
28ff32d 2025-06-15 Adjusted display names of the 3 options from Workflow Genesis so when they appear on the dropdown menu it's clearer which you just created - for real this time.
c9c7efe 2025-06-15 Adjusted display names of the 3 options from Workflow Genesis so when they appear on the dropdown menu it's clearer which you just created
400334a 2025-06-15 Got the last instances of trifecta, updated to quadfecta. Beware, potential goback checkpoint if I broke stuff.
eb29295 2025-06-15 Better postion for the Press Enter message on the search dropdown
e4f682a 2025-06-15 The search plugin tool in highlights the single option if its an exclusive match now waiting for you to hit Enter
31fc204 2025-06-15 Fixed piping output of Step 1 to input of Step 2 in the Kung Fu Hello World example generated by Workflow Genesis
7e44f2f 2025-06-15 Fixing Kung Fu Hello World that Genesis workflow makes
5f338bd 2025-06-15 Added an optional parameter to create_workflow.py to change the role from a template on new workflow creation to make the Kung Fu examples show up in Core on the APP menu.
3526ca5 2025-06-15 Got rid of 3 dots on Search Plugins
164c839 2025-06-15 Did all the rest of the retcon renaming for the new post-Quadfecta organizational structure
f10d027 2025-06-15 A big post Quadfecta success cleanup and preparation for replacing Trifecta everywhere
d3ff31a 2025-06-15 Fix Python code display for GSC and GA when data doesn't exist - generate educational debugging code like Web Logs step
4609964 2025-06-15 Fix Web Logs Python code display - generate debugging code even when project has no web logs
c6aa609 2025-06-15 Fix GA Python code display - use correct 'python_command' key like other steps
8949ab8 2025-06-15 Add GA file detection to dropdown menu and Copy to Downloads button - GA files now show in step 1 dropdown and have download button when available
99ec37e 2025-06-15 Remove debug output from GA message queue - moved to server logs only
6685a39 2025-06-15 Fix message queue HTML encoding issue in GA debug output - Changed markdown JSON to simple string to prevent HTML encoding
967a7a5 2025-06-15 GA Data is downloading in the new Quadfecta workflow
377aeff 2025-06-15 GA downloaded under the new Quadfecta tempalte but it just has Full URL column. It needs some metrics. Also the Copy to Downloads button isn't appearing for it.
785151d 2025-06-15 Debugging GA Downloading on Quadfecta
c6ef4ba 2025-06-15 Correctly indentifying when Botify project has GA data. But not downloading it correctly yet.
ec89fc0 2025-06-15 New Quadfecta gets to Finalize but is not downloading the GA data
44d3cb4 2025-06-15 Adjusting step_05_complete
ea87677 2025-06-15 Quadfecta getting stuck at step_05_complete which makes sense since it doesn't exist
def91ae 2025-06-15 Trying to finalize Quadfecta
0b087ac 2025-06-15 Preparing to make the step 5's
0c40d81 2025-06-15 Added ga_template to __init__ for Quafecta
7f11e69 2025-06-15 Added new key to TEMPLATE_CONFIG for ga for Quadfecta
3ec5af4 2025-06-15 Edited in new QUERY_TEMPLATE and Step 5 in definitions for next Quadfecta attempt
d8f0498 2025-06-15 Here we go again with Quadfecta
a75ee2b 2025-06-15 Showing Ctrl+K in Search Plugins field in nav
9adedc0 2025-06-15 Made Ctrl+k activate Search Plugins
952ed7d 2025-06-15 üßπ BABY STEP 3: Clean up server.py - externalize keyboard navigation
d297381 2025-06-15 ‚å®Ô∏è BABY STEP 2: Externalize Search Plugins keyboard navigation JavaScript - Added comprehensive keyboard navigation functions to pipulate.js - Follows Carson Gross HTMX approach with minimal JavaScript for UI interaction - Includes arrow key navigation, Enter selection, Escape dismissal, click-away handling - Uses MutationObserver to reset selection when HTMX updates dropdown content - Integrated into existing hybrid initialization pattern
f59bdb0 2025-06-15 üé® BABY STEP 1: Externalize Search Plugins keyboard navigation CSS - Added comprehensive CSS for search plugins dropdown keyboard navigation - Includes arrow key selection states, hover states, and focus management - Follows Carson Gross HTMX approach with minimal CSS for interaction states - Positioned in styles.css after nav-search section for logical organization
7ae6317 2025-06-15 Keyboard arrow-up and arrow-down and Enter to submit support added on Search Plugin feature on nav
73b4a8c 2025-06-15 Removing old approach to CSV downloads. This knowledge can be repo-dived for or reconstructed from the new patterns in Trifecta-derived workflows if necessary.
252b3c9 2025-06-15 The Hide/Show code button fix has been applied to Link Graph Visualizer
cfe0e0b 2025-06-15 About to apply Trifecta code button fix to link graph
560c7f2 2025-06-15 Hiding and showing the Python works for the GSC step even when cached now in Trifecta
2f4a751 2025-06-15 Activated the Hide/Show Code buttons on the Trifecta template
f46ac4f 2025-06-15 About to activate the Hide/Show Code Python buttons
a552491 2025-06-15 The winning pattern for display_revert_widget interaction with finalize now extended to the Quadfecta3 workfile for today
d5bbe96 2025-06-15 Applied the latest and greatest chain reaction display_revert_widget adjustments to both Link Graph Visualizers
acda4dc 2025-06-15 Parameterizing display_revert_widget to be more useful in when immediately before a finalize
8f5a079 2025-06-15 And applied the same fix to Link Graph Visualizer2 which is a work in progress
9589bd2 2025-06-15 Just applied the fix from Trifecta to Link Graph Visualizer
f8554ce 2025-06-15 Adding a bunch of new rules. Will have to sort, update, index and load-balance rules again soon.
0b381a9 2025-06-15 Trifecta chain reaction in locked state no longer skipping steps 3 and 4
2ff959b 2025-06-15 Preparing to fix Trifecta skipping steps in locked state
2b46de8 2025-06-15 Quadfecta has a new Step 5 that is an exact copy of Step 4 (GSC download) which chain reacts to finalize correctly
316011c 2025-06-15 Two identical step_04_xx's in the new Quadfecta in preparation for Step 5 transplant
8928081 2025-06-15 Cleaning up quadfecta transpose-from for atomic step transplant
e32d87b 2025-06-15 Got rid of the unnecessary step_04_process in the link graph generators (and on parameter buster from prior commit)
fb134a5 2025-06-15 Cleaned up spaces above def's in parameter buster
1cb4c41 2025-06-15 Experimentially removing step_04_process - potentially dead function, important goback revert point
d460e8c 2025-06-15 Preparing to transpose a new Step 5 into the new Quadfecta
b2dd32d 2025-06-15 Trying once more Trifecta to Quadfecta
3afcd2a 2025-06-14 Swapping quadfecta workfile
28b56a0 2025-06-14 Getting closer on Quadfecta
3cd9ee3 2025-06-14 Working on activating the GA download in Quadfecta
5bdbf67 2025-06-14 Last of the step_04_complete's restored
7189999 2025-06-14 Restoring all the incorrectly deleted step_04_complete's
5d4a866 2025-06-14 I put back step_04_complete in parameter buster and did a bunch of preparatory touches in Quadfecta
2e82e51 2025-06-14 Final WET search/replaces to make GSC references into GA references
a89d45a 2025-06-14 Copy/pasted a Step 4b in preparation for the GA download in Botify Quadfecta
483730a 2025-06-14 Stripped out the legacy step_04_complete and endpoints from various workflows (big goback checkpoint if I broke stuff)
c137c59 2025-06-14 Rearranged step_04_process to be directly underneath step_04 and step_04_submit in preparation for copy/paste
a5178b0 2025-06-14 Modified the QUERY_TEMPLATES as the first non-breaking step towards a Quadfecta win
dbf34f0 2025-06-14 About to go for the Botify Quadfecta (adding GA data download support to the Trifecta)
138553a 2025-06-14 Capturing rules about Botify schema and best documentation
4f2a7b6 2025-06-14 Exploring another approach to schema discovery
45175b8 2025-06-14 An attempt to dig deeper for tables and fields
5290237 2025-06-14 Botify object explorer now outputs its files into the same location it was run from
a1efc10 2025-06-14 Got rid of deep save directory structure
eb8b842 2025-06-14 Script version of Botify Object Explorer much more thorough
e554c6d 2025-06-14 Better error reporting on remaining 400s in object explorer
fa0f839 2025-06-14 Fixing the object explorer, many less 400's
b7e2f36 2025-06-14 Exploriting Botify object explorers
b9068f7 2025-06-14 More intro text modifications
7b5b924 2025-06-14 Got the new localhost advantage instruction page length down a bit.
c60ea3b 2025-06-14 Inserted a Localhost Advantage page in the Introduction
7bfe4e2 2025-06-14 Refining the introduction text
925fca0 2025-06-14 Fixed missing comment_divider value setting in parameter buster
8336513 2025-06-14 Getting ready to clean up some imports
2396d5f 2025-06-14 Complete architectural cleanup and final git stash system - Create plugins/crud.py with BaseCrud class to solve circular imports - Move BaseCrud from server.py to plugins/crud.py - Update all plugin imports to use new BaseCrud location - Remove circular dependency between server.py and plugin files - Update flake.nix to version 1.0.7 (Self-Healing Git Updates) - Implement robust stash/pull/pop workflow for JupyterLab settings - Add automatic conflict resolution and fallback to defaults - Ensure system never gets stuck in unresolved merge states - This completes the Git Stash Gambit: perfect balance between developer defaults and user freedom
6e2a91a 2025-06-14 Tiny endpoint message tweak for Parameter Buster
5e85775 2025-06-14 Implement robust auto-update with conflict resolution - Add automatic conflict resolution before git pull - Use git stash apply instead of pop for better control - Automatically reset to defaults if user settings conflict with updates - Ensures system never gets stuck in unresolved merge state - Provides clear user feedback about what happened to their customizations
b21a2b4 2025-06-14 Fix stash command precision - Use more precise git stash syntax to avoid stashing unrelated files - Prevents conflicts with files outside JupyterLab settings directory
f794ac3 2025-06-14 Implement Stash-Pull-Pop for JupyterLab settings - Replace simple git pull with intelligent stash/pull/pop workflow - Preserves user JupyterLab customizations during updates - Provides clear conflict resolution instructions if needed - Remove redundant setup-jupyter-prefs calls (settings now git-managed) - Fix .gitignore to properly track shared settings while ignoring user session data
d96acd0 2025-06-14 Preparing to implement a git stash based solution to allow the user to modify their own JupyterLab prefs without it blocking the git pull auto update
c7810ce 2025-06-14 Testing git managed JupyterLab prefs
dc45179 2025-06-14 fix: Remove user-specific JupyterLab session files from tracking - Remove workspace and migrated files that should be ignored - Keep only the shared settings files for consistent theming
75631b9 2025-06-14 refactor: Remove redundant setup-jupyter-prefs script - JupyterLab settings are now managed by git instead of generated - Simplify flake.nix by removing script generation - Keep JUPYTER_CONFIG_DIR export for project-local configuration
ad9043c 2025-06-14 feat: Commit JupyterLab settings for shared dark theme and 16px fonts - Remove overly broad *.json ignore rule - Add specific JupyterLab user-settings for consistent theming - Keep ignoring user-specific session data (workspaces, etc.) - Settings will now be shared across all users of the project
e57e18e 2025-06-14 Update all JupyterLab startup commands to use stable workspace name 'pipulate-main'
8d91696 2025-06-14 Fix JupyterLab random workspace file generation - use stable workspace name 'pipulate-main' and add .jupyter/ to .gitignore
6129bff 2025-06-14 Experimenting with adjusting JupyterLab defaults
29f3f11 2025-06-14 Add JupyterLab dark theme and 16px font configuration - clean project-local preferences system with setup-jupyter-prefs script
31cb134 2025-06-14 Updated .gitignore for new Notebook Intro
eb20804 2025-06-14 Getting ready to add control of JupyterLab default font size and theme. May have regressed. Please check.
9b3748e 2025-06-14 Greatly enhanced intro notebook
7d391a7 2025-06-13 Roles (Home) endpoint message greatly improved
b16310d 2025-06-13 Fighting regressions
9452181 2025-06-13 Search menu adjusted. No longer sticks open
2dcb2aa 2025-06-13 ‚ú® Hide search dropdown after selection - Add onclick handler to clear search field and hide dropdown - Provides clean UX: search ‚Üí select ‚Üí navigate ‚Üí clean slate - Follows standard dropdown behavior patterns Small UX win: Search dropdown now disappears after making a selection!
24c3abe 2025-06-13 Implement HTMX plugin search - Carson Gross style
5588def 2025-06-13 Getting ready to make plugins searchable
c19477b 2025-06-13 Prep work for a search field
6124831 2025-06-13 Moved experimental Link Buster into Workshop Role
66d7f8a 2025-06-13 Dark/Light mode fully implemented and sticky
7293ae1 2025-06-13 Implemented a Light/Dark mode toggle
bc85816 2025-06-13 Eliminating concept of Poke. Using Settings. Reordered Setting menu items.
04b3b66 2025-06-13 Renamed Poke actions to Settings
d62d33f 2025-06-13 Step 16: Fix SVG size to 18x18 and correct chevron removal CSS selector
e681331 2025-06-13 Step 15: Remove chevron and make settings gear bigger - final polish
6031785 2025-06-13 Step 14: Convert poke button to standard PicoCSS dropdown pattern matching PROFILE/APP/DEV buttons
55e0dc3 2025-06-13 Step 13: Replace circular button with standard nav button styling while preserving flyout behavior
9e9df1f 2025-06-13 Step 12: Fix compressed circle - restore natural circular shape with proper padding
dd6f16e 2025-06-13 Step 11: Fix oval shape to perfect circle and make gear icon larger
3226ad7 2025-06-13 Step 10: Make poke button bigger and replace robot emoji with settings SVG icon
d399a41 2025-06-13 Step 9: Fix poke flyout to always use nav-flyout-panel ID and classes
e081fdf 2025-06-13 CRITICAL FIX: Restore fixed positioning to prevent Content Layout Shift on flyout
c0f2175 2025-06-13 Step 8: Clean up old flyout panel CSS and improve nav flyout content styling
8bba832 2025-06-13 Step 7: Make nav poke button circular and baseline-aligned with nav items
06dfca9 2025-06-13 Step 6: Final navigation layout improvements for poke button positioning
c3ec72a 2025-06-13 Step 5: Remove old create_poke_button function - no longer needed
6fd3fe3 2025-06-13 Step 4: Improve flyout targeting logic for navigation poke button
0d8f29a 2025-06-13 Step 3: Clean up old floating poke button CSS styles
734a984 2025-06-13 Step 2: Remove floating poke button from main container
d1fa07c 2025-06-13 Step 1: Add navigation poke button alongside existing floating button
2db25b9 2025-06-13 Making sure always showing all buttons on new Link Graph Visualizer
f46cec8 2025-06-13 Link Graph Visualizer 2 work
569faf2 2025-06-13 Link Graph Visualizer 2 work
2851a3f 2025-06-12 Workign on updated version of Link Graph Visualizer that lets you optionally pick depth
7081097 2025-06-12 James Hong cited
f889ed7 2025-06-11 The local LLM now has the result of the MCP call
3b84922 2025-06-11 Adjusted re-running MCP prompt after revert to keep the prompt from accumulating wrappers
ce7fbb5 2025-06-11 Tweaking MCP streaming details to capture stray code
2a8c11a 2025-06-11 Many of the aesthetics of the Simon Says Make MCP Call worked out
8161fa0 2025-06-11 The HTMX auto-key system is back in on the MCP app
0515d12 2025-06-11 Centralizing class attributes
f303045 2025-06-11 Aria spinner added to MCP submit button
570d9a1 2025-06-11 Smaller text in textarea
7e085b9 2025-06-11 Working on some aesthetics of the MCP tool call
8179575 2025-06-11 The Finalize button properly toggles on the new Simon Says Make MCP Call workflow
cf660f3 2025-06-11 Making process_llm_interaction a Pipulate method
a46834c 2025-06-11 Swapping the text_area widget is now working
f17fd19 2025-06-11 First versio with blank placeholder of simon says make mcp call workflow
32caae8 2025-06-11 Going to try to make the Simon Says Make MCP Call workflow
81e4441 2025-06-11 Reworking of the prompt foo file to latest situations
140beb1 2025-06-11 Retconning blank placeholder references. The cleanup folder likely needs cleanup. Not everything there still applies but could be useful for reference.
e22bcd1 2025-06-11 MCP Transparency in web server console output (and main log) achieved
55aa88d 2025-06-11 Final token security note in Python before divider is now a comment
ba65b3f 2025-06-11 Replaced comment dividers with PCONFIG value
bce2980 2025-06-11 Got rid of the double snake usage in the comment divider
8b053e8 2025-06-11 Got rid of extra indent before copy-marker comments
902af1b 2025-06-11 Making Python copy markers comments
3f10e7f 2025-06-11 Preparing to insert beginning and end visual markers for Python code copy/paste from server console debug output
e2a1b6c 2025-06-11 Centralized the visuals for the Python emoji into PCONFIG
0a197e5 2025-06-11 The üêç is now in the web server console output making copyable Python much easier to spot
7323120 2025-06-11 About to make the Python in the web server console much eaiser to spot with snake emoji
f955853 2025-06-11 Better endpoint message for Parameter Buster
2681de5 2025-06-11 Better endpoint message for Parameter Buster
e76c53a 2025-06-11 Actually one more edit tonight. Returning Select ALL and Deselect ALL to full HTMX page updates so as to not interfere with SortableJS
439ec86 2025-06-10 All the spaces that belong. Now I can go to sleep.
46264f1 2025-06-10 Getting some missing spaces between streaming lines working again
7cdbaa2 2025-06-10 I think the spacing issue is resolved
33174e9 2025-06-10 Typing delay into PCONFIG
65962b6 2025-06-10 Space
e17e18d 2025-06-10 Best streaming balance of factors yet even better... but slow
a02cb18 2025-06-10 Best streaming balance of factors yet
4c79c44 2025-06-10 MCP example at its most reliable yet
15826c7 2025-06-10 Continuing to refine example MCP call
ad2cb24 2025-06-10 Message queue being used on MCP responses to control race conditions
35a4c05 2025-06-10 Silencing some very noisy logging I put in for MCP implementation
455e68d 2025-06-10 The Poke example is connected to Cat Facts, a more reliable API than Bored
346a91c 2025-06-10 Making the MCP instructions and request unique every time
0222ff4 2025-06-10 Preventing MCP leakage
941ab93 2025-06-10 MCP technically working
97e448e 2025-06-10 HTMX updates of APP menu from checkboxes and sorting in Roles working again
11a0e63 2025-06-10 State machine implemented for bounded MCP response capture
c563753 2025-06-10 Had to switch streaming to word-boundaries in order to do reliable MCP response detection
ae52311 2025-06-10 Got rid of a bunch of unnecessary imports
ae26757 2025-06-10 The MCP tool-calling hook for any local LLM working as an MCP client is now present and proven, both making the call and the streaming monitor recognizing it
a3a01aa 2025-06-10 MCP POC
19cedb2 2025-06-10 Hold onto your hats ladies and gentlemen as I prepare to inject an MCP proof of concept
9b6d97c 2025-06-10 An amazing example of HTMX on the Roles page. Removing debugging. Considering article.
8927235 2025-06-10 Sorting and checking condtionally control activation and deactivation of Default button
4920c7d 2025-06-10 Ghosting the Default button on Roles if the current settings are default
f1e9a14 2025-06-10 Less words
d026a9e 2025-06-10 Tiny wording on Roles, but for that first experience every tiny word matters.
1666b7f 2025-06-10 Went back to targeted HTML updates for Select ALL and Deselect ALL instead of full HTMX page reload for smoother user experience
fc92df7 2025-06-10 Capturing some knowledge about Python truthiness and sort oder interation with SortableJS
4f66f2a 2025-06-10 Got all the Role action buttons sorted, quite literally. There was a problem in sort priority value of 0
53cd63f 2025-06-10 Working on Role sorting and action buttons
c0e6674 2025-06-10 HTMX has to do a full page refresh on Default, and I believe Select ALL and Deselect ALL as well, but it's not implemented on those yet
83b581a 2025-06-10 Roles buttons are centered
237d86d 2025-06-10 Feather Icons in use on Roles buttons
eb70ae5 2025-06-10 Added expand all and collapse all on Roles
e71ed89 2025-06-10 Turned off table debug
63cee3c 2025-06-10 Renamed mv websocket-global-config.js pipulate-init.js for brevity
e52abf4 2025-06-10 Fixed API log rotation
02be021 2025-06-10 It looks like the end of a long duplicate prevention balancing act is finally... uh... balanced.
4967b31 2025-06-10 Further refinement attepts on endpoint message deduping and management
b6e868e 2025-06-10 New Page 2 in Intro to explain the Ollama install
4df70f4 2025-06-10 Added the Ollama link on Roles (Home) page
b86d9b8 2025-06-10 Renaming blank placeholder from 910 to 900 (easier to remember)
36451a5 2025-06-10 Did a git mv sortable-parameterized-init.js pipulate.js for semantics
1ed6f50 2025-06-10 Splitting out SortableJS init to separate file
7a49923 2025-06-10 Brought back sortable feature
d5f85b0 2025-06-10 Added a Default selector and also the HTMX updates are happening to the APP menu from these selections, but we lost SortableJS drag-and-drop sorting
a90fba0 2025-06-10 Select ALL and Deselect ALL on Roles app to toggle all plugins on and off in the menu
27a277e 2025-06-10 Displaying numbers next to the plugins in the Roles (Home) app when accordian expanding a role
8367aeb 2025-06-10 Balanced endpoint message duplcate prevention and the need to show endpoint messages on server reboots. It involved clearing keys.
0c77663 2025-06-10 The split resizing now has persistent memory, seemingly across serverver reboots too
be1a906 2025-06-10 Giving the split resizing persistent memory at least during the session
7635ccb 2025-06-10 Making prompt fu prevent duplicates even if specified in FILES_TO_INCLUDE_RAW
2d2bd9f 2025-06-10 Preparing to add memory to the split width
f398fea 2025-06-10 Replaced PIPULATE_CONFIG with PCONFIG - the extra letter makes it uniquely searchable
c1631e3 2025-06-10 Preparing to simplify what will be VERY commonly used CONSTANT: PIPULATE_CONFIG to just CONFIG
32f8f4b 2025-06-10 Trifecta Step 5 is now a Blank Placeholder which cleanly chain reacts to Finalize, and other template cleaning.
ce3e565 2025-06-10 Replace Trifecta Step 5 with blank placeholder
6b45f2c 2025-06-10 Less fragile and finicky Stop button in chat. It no longer flashes to Stop during verbatim messages.
6f8a30a 2025-06-09 Trying to pin the HTMX menu pattern against regression
01217f5 2025-06-09 New rule, outside naming convetion. Rules will need cleanup again soon.
6d57d99 2025-06-09 The HTMX smart menu to control button text is working in Trifecta
8dad93e 2025-06-09 Put missing metric field back in basic query of Trifecta template
e90a756 2025-06-09 Working on Trifecta template, making it more robust
994aaaa 2025-06-09 Parameter Buster now has the same HTMX menu intelligence for Use Cached vs. Download
15b5362 2025-06-09 HTMX updating button in Link Graph Visualizer, need to move that to other files
b1eedc1 2025-06-09 More Roles wrangling
937cae9 2025-06-09 More Roles wrangling
2cb8d12 2025-06-09 Wrangled the Roles look... again
10bdb58 2025-06-09 More robust duplicate endpoint message prevention on switching between dev and prod mode
fcc4102 2025-06-09 Darken background to make PicoCSS Cards pop a bit more
442245b 2025-06-09 Gave poke flyout a border color for more contrast
cb7f153 2025-06-09 Cleaning up Roles page a bit, font sizes and centralized styles
be99327 2025-06-09 Externalizing more styles
f1591ac 2025-06-09 Preparing to externalize styles
889cf64 2025-06-09 Made grid-left-content readable
077e017 2025-06-09 Fix AttributeError: Change self.table to self.pipeline_table in Pipulate class methods
c3520aa 2025-06-09 Added splitter init
7393bcf 2025-06-09 Just made the split between workflow area and chat area click-drag-resizable with split.js
809a1a6 2025-06-09 Adding split.js
5febcaa 2025-06-09 Better spacing around chat interface
2c0b007 2025-06-09 High contrast horizontal markdown rules
1175dd1 2025-06-09 The look of the stop button now matches the send button
dacc5dd 2025-06-09 The stop button is implemented and working
81c4eae 2025-06-09 Attempting to implement the stop button
8500717 2025-06-09 About to try to wire the stop button up
a5432d5 2025-06-09 Better stop button timing
5f4008d 2025-06-09 Experimenting with stop button
5a47951 2025-06-09 Experimenting with a stop button
d0d845f 2025-06-09 Feather Icon for send is now white and larger
732e962 2025-06-09 Using Feather Icons for the first time, arrow-up-circle for Send
faf1bd8 2025-06-09 Adding Feather Icons as local static resources
e9cc2f1 2025-06-09 Externalized Enter/Shift+Enter JavaScript
6d12910 2025-06-09 The standard conventions for what Enter and Shift Enter means for a chatbot interface are being used
53d5898 2025-06-09 Experimenting with controls under TextArea
10b9893 2025-06-09 Experimenting with a TextArea for the chat box
ad9e732 2025-06-09 Experimenting with a stop button
1003aca 2025-06-09 Passing pipualte instance to chat
53627e8 2025-06-09 Consolidated some CSS from websocket JavaScript into styles.css
c9fd40f 2025-06-09 Much tighter spacing
d6915ee 2025-06-09 Showing the streaming messages as formatted markdown
134032f 2025-06-09 First attempt at streaming markdown
1f4ffa7 2025-06-09 About to try to get formatted markdown in streaming
87c1c38 2025-06-09 Open API Swagger examples now linked in form Documentation app
dec6416 2025-06-09 Made the prev/next arrows top and bottom on the new Open API Swagger docs
79b3746 2025-06-09 Open API Swagger docs now surfable
9038820 2025-06-09 Inching forward
3799497 2025-06-09 Incorporating Open API Swagger generated markdown, preparing to incorporate it into documentation system.
d0ca7db 2025-06-09 Duplicate message prevention added to the ENDPOINT_MESSAGE system to address timing issues when menu'ing around quickly.
569c552 2025-06-09 Langauge tweaks for initial experience
f836f52 2025-06-09 Ensured that on first nix develop the msg list will have streamed the ENDPOINT_MESSAGE and performed the TRAINING_PROMPT
44abf2b 2025-06-09 Adjusting the program in the Botify API Notebook to hit the Open API swagger URL and better produce LLM training documenentation
638c258 2025-06-09 Making the code that creates a new example config.json in the Botify API example Notebook skip writing if there's one already in place
d93ca34 2025-06-09 Starting to work on the Botify API Notebook. Fixed missing line return stripping for reading token in one sample code block
01a4102 2025-06-08 Page Type color-coding of meta node data implemented
8d52c06 2025-06-08 Trying to get nodeColor control in there
d1c946b 2025-06-08 Fixed a tiny issue with button langauge Use Cached Version vs. Download for the new Step 2b
ee5a7a2 2025-06-08 Added the proper chain reaction to the Finalize button. What the self.ui stuff
6b7bb26 2025-06-08 Node attributes has the optional skip button now too like the other download steps
74d7346 2025-06-08 Made more visual consistency with the hourglass when downloading node attributes
47f3981 2025-06-08 The dropdown menu also shows the crawl.csv if it's been downloaded already now
7d3464a 2025-06-08 Added a word about the home page being the Roles app and what it lets you do to the Introduction
057a7aa 2025-06-08 Added a link to the Introduction app from the Roles app
1d0ef7b 2025-06-08 Made Hello World slightly less noisy
5025435 2025-06-08 Coloring by PageType and such is back
860e9eb 2025-06-08 Extra crawl table now being downloaded for Link Graph Visualizer
88ec3ef 2025-06-08 Adding a Step 2b to link graph to get basic crawl attributes
943e115 2025-06-08 Fix step_02b chain reaction flow with proper three-phase pattern
eafecd1 2025-06-08 Add minimal placeholder methods for step_02b node attributes
40c5776 2025-06-08 Add route registration for step_02b_process
1be822c 2025-06-08 Add step_02b for node attributes download
bb87208 2025-06-08 Adding training document for visualizer
97eac39 2025-06-08 Tweaked Roles main message
b5c92fc 2025-06-08 Added emojis and removed 920_splice_workflow.py
a6f164c 2025-06-08 More friendly sorting message
016ccf3 2025-06-08 Fixed Reset Entire Database
a87909f 2025-06-08 Emoji presentation consistent in Roles and consistent with DISPLAY_NAME values
0182d26 2025-06-08 Cleaning up Roles emojis
d2fcc15 2025-06-08 The meta file on link graph visualization is working
2dc62f8 2025-06-08 Meta url column to id
0a3f1ac 2025-06-08 Working on cosmograph link
2fa2578 2025-06-08 Centralized all API export sizes and set them to 1 million
3386664 2025-06-08 Got export limits up to a million
749b350 2025-06-08 Rough implementation of new Link Graph Visualizer
287be62 2025-06-08 About to make the link graph workflow
dd30009 2025-06-08 Fixed a subtle issue that resulted in no spaces between functions and methods when using the workflow creation helper scripts
6dab6ee 2025-06-08 Changed the double download language to Copy to Downloads, hopefully providing some clarity
e6aea95 2025-06-08 Put hammer emoji back in and example URL click clarification
8a2b596 2025-06-08 Swapped in new Parameter Buster for old
a6ac645 2025-06-08 Switched new Parameter Buster to Not Compliant (fron Link Graph Edges)
4e4d7f8 2025-06-08 Parameter Buster is created with the new template
df1c334 2025-06-08 The updated Parameter Buster gets up to Step 7 which is the Instructions
fa7c7fd 2025-06-08 Inching towards reassembled Parameter Buster
28d5cc2 2025-06-08 The ajaxy stuff that changes when you click the preselects for parameter buster is working again
97e5be1 2025-06-08 Several redundant functions removed from the transplant
ae91575 2025-06-08 Preparing to do the final touches to update Parameter Buster
289abe4 2025-06-08 Big step towards updated Parameter Buster, most transplanting done, just massaging code
c951673 2025-06-08 Preparing to convert Parameter Buster to new base template
591c7ac 2025-06-08 Adding the notebook copying on install solution explanation into training until I find a better home for it
e96192d 2025-06-08 Rebranding that Notebook from Botifython Bootcamp (which it's not) to Botify API Bootcamp (which it is).
2fb888b 2025-06-08 Implemented the solution to allow a Jupyter Notebook from the repo (a copy of it) to be loaded into the JupyterLab tab on startup and edits be allowed to be made to it without interfering with subsequent git pulls to auto-update the install
fd579f5 2025-06-08 Preparing to resolve a git pull conflict situation that I make by loading a Jupyter Notebook from the git repo into a browser tab on nix develop startup
f06643a 2025-06-07 Fixed a hardwired download path issue in the Trifecta template
a5b3d78 2025-06-07 Unifying UI elements into the Pipulate class and added Pipulate helpers for standard route registration. Applied these unifications to Blank Placeholder, Hello World and Botify Trifecta
0116217 2025-06-07 Considering one more grinding and polishing of the abstraction focal lens per Gall's Law
068fb33 2025-06-07 Clean Dependency Injection: Fix UI constants access pattern - Add get_ui_constants() method to Pipulate class for consistent dependency injection - Remove direct server imports from templates in favor of pip.get_ui_constants() - Maintains clean separation of concerns and consistent methodology
bfb46ee 2025-06-07 Template Usage: Convert hardcoded UI elements to use centralized constants in Botify Trifecta - Replace hardcoded button labels and messages with self.ui references - Makes actual use of the imported PIPULATE_CONFIG UI constants - Ensures consistent UI patterns across all templates
dcc1545 2025-06-07 Template Ready: Add class attributes bundle markers and modern UI constants to Botify Trifecta - Makes 420_botify_trifecta.py fully compatible as template source for create_workflow.py - Preserves all existing functionality while enabling template-based workflow creation
e3943c7 2025-06-07 Conservative Format: Organize imports across 11 plugin files - Applied PEP8 import sorting while preserving all aesthetic line wrapping decisions
de73450 2025-06-07 Conservative Format: Clean trailing whitespace from 35 plugin files
e2807d7 2025-06-07 Conservative Format: Fix method spacing across 28 plugin files - Added proper blank lines between methods while preserving aesthetic line-wrapping
8fe928b 2025-06-07 Cleanup: Remove backup_landing files - git is our backup system
d2c7d63 2025-06-07 Phase 2 Complete: Automated Landing Page Standardization - 26/26 plugins standardized successfully with deterministic helper script, reducing 220+ lines of boilerplate to standardized 3-line calls
7c7272a 2025-06-07 Getting ready to standardize landing page method with helper script
fe20720 2025-06-07 Radical externalization and centralization of what I always would stay WET, the landing method
ec2785b 2025-06-07 feat: Phase 2 - standardize landing page generation for 910_blank_placeholder.py - Added LANDING_PAGE constants to PIPULATE_CONFIG with standardized placeholder text and messages. - Created create_standard_landing_page() helper method in Pipulate class to reduce boilerplate. - Updated 910_blank_placeholder.py to use centralized helper while maintaining WET explicitness. - Centralized init messages using templated constants for consistency. - Maintains WET workflow philosophy: explicit helper calls, no magic abstraction. Server tested and running.
72e772f 2025-06-07 feat: centralize UI constants in PIPULATE_CONFIG for 910_blank_placeholder.py - Phase 1 of workflow template cleanup. Added UI_CONSTANTS section with button labels, styles, emojis, and messages. Updated 910_blank_placeholder.py to use centralized constants instead of hardcoded values. Enables easier white-labeling and consistent UI. Server tested and running.
f85b432 2025-06-07 Preparing for a template cleanup
1280a27 2025-06-07 Better language for Botify Employee role
4caad50 2025-06-07 Better number of APPs wording arrangement
11049e8 2025-06-07 Renamed plugins to APPs under Roles homepage app
48cbe6b 2025-06-07 Language tweaks
a62034d 2025-06-07 The old look of the Roles plus the new Description just about achieved
b019e51 2025-06-07 Brought back the expandable accordian interface to the plugins on Roles, but a chunky regressed noisy implementation
fb236a2 2025-06-07 Lenses polished. Semantic CSS classes ready to replace scattered inline styles. entralized configuration that makes white-labeling trivial. Generic plugin architecture that reduces code duplication. Single source of truth for all role-based functionality. Clean separation of concerns between framework and instance config.
cd00f33 2025-06-07 Staging some lens polishing
2a3f1e8 2025-06-07 Some emoji work on Page 3 of the Introduction
36148cf 2025-06-07 Removed Manage Roles from the Poke flyout since Roles is now the homepage and doesn't need that extra link (noise) in the flyout anymore
fb98430 2025-06-07 Emoji work in Page 2 of the Introduction
b5f54c8 2025-06-07 Making the Roles app work with all Profiles, removing profile_id filtering, and changed schema of Roles to remove profile_id
00d9b70 2025-06-07 CRITICAL FIX: Remove profile_id filtering from roles - roles are global, not per-profile
bb862f3 2025-06-07 Add underline decoration to breadcrumb home link for better clickability indication
d243529 2025-06-07 Add emojis to dropdown menu summaries for visual consistency with Introduction plugin
7c22821 2025-06-07 Added some emoji's to the introduction
b7b4369 2025-06-07 Add balanced emoji distribution to Introduction pages - enhance visual communication
a5fbd77 2025-06-06 Remove intro prompt tracking and intro_page_num initialization - no longer needed
6788cfc 2025-06-06 Remove special intro handling - let normal plugin system handle introduction plugin
ff5e9de 2025-06-06 Remove get_intro_page_content function - logic moved to IntroductionPlugin
d6dad12 2025-06-06 Remove unused delayed_intro_prompt function - logic moved to IntroductionPlugin
30fdbbc 2025-06-06 Remove unused MAX_INTRO_PAGES constant - now managed by IntroductionPlugin
7bde44f 2025-06-06 Remove unused INTRO_LLM_PROMPT_DELAY constant - logic moved to IntroductionPlugin
f2cb216 2025-06-06 Preparing to decruft some dead code
53dc58f 2025-06-05 A much shorter page 5 to tell the user about the background training system
d7171fc 2025-06-05 A lot of improvments to the Introduction system to get the LLM training happening, the secret word system and a new step to let the user know about all that
a9e2684 2025-06-05 Turned Roles Home link to standard PicoCSS color
c3d06c9 2025-06-05 Got rid of distracting plugin available emoji
ab9d0d7 2025-06-02 Cleanest accordian on Roles
dac8163 2025-06-02 False sorting messaging dealt with
84dbd37 2025-06-02 Selected color matches role
4a79c6f 2025-06-02 Adjusted colors
11cc11c 2025-06-02 Color management of roles moved totally to Python, binds together parent and child colors of roles
c554b23 2025-06-02 Making plugins where ROLES is set to an empty list invisible
f2565a6 2025-06-02 Good skip button styling applied
91c777a 2025-06-02 Added rev 1 of skip buttons to Botify Trifecta for Web Logs and GSC
eca6f37 2025-06-02 Added a note to Trifecta about how the Web Logs and Search Console download steps can just be edited out or deleted and the chain reaction flow will still be uninterrupted
c89fd3f 2025-06-02 The aria-busy true attribute is set on all of the downlaod links of the Trifecta, particularly useful for the first one that calculates number of edges in link-graph mode
dc2493a 2025-06-02 Added PicoCSS aria-busy spinner on 1st of Trifecta buttons at moment of click when edges get calculated when it's link-graph mode
59088de 2025-06-02 Workflow Genesis creating a Botify Trifecta stub for slamming out complex workflows complete
cb3787f 2025-06-02 Fixing Workflow Genesis on Trifecta
c57c1ce 2025-06-02 Updating references to old filenames inside files
adabc75 2025-06-02 Added the plugin role membership analyzer helper script
30bfff9 2025-06-02 Renamed files for beautification
0876c5a 2025-06-02 Starting a pretty big renumbering job
fd82bea 2025-06-02 The LLM communication on the Intro app sent silently to conversation history
6523fc2 2025-06-02 Introduction navigation better, big buttons back
5b099d2 2025-06-02 Extracted Introduction wrapped in standard site visual framework
c743e27 2025-06-02 Externalizing introduction
d0474ec 2025-06-02 Test Botify API Docs update
05278b5 2025-06-02 Roles endpoint showing now too
6e5a751 2025-06-02 Endpoint messages working for Profiles and Tasks
1ce81bb 2025-06-02 Changed direction Roles hand points and telling user about drag-sorting of APP menu
60d7c4e 2025-06-02 GitHub Repo link added
d6ef430 2025-06-02 Added public docs to app
62c1e9e 2025-06-02 Just fixed drag sort on the menu
76d9973 2025-06-02 Returned app name for Roles to roles
c435fcf 2025-06-02 Gave Roles and Profiles emojis
df5c267 2025-06-02 Caught one more quiet parameter in roadmap
fa4099a 2025-06-02 Fixed an unremoved quiet parameter
3d56552 2025-06-02 Numbering the plugins in the roles app and sizing them accordingly
f31aa8d 2025-06-02 Numbering the plugins
bf51649 2025-06-02 Turned Roles into Home and rebranded Customize App List
277682f 2025-06-02 Within the Roles app, the DISPLAY_NAME is hyperlinked to its endpoint
5fee608 2025-06-02 The whole Li element in roles can now be used to expand/collaps its list of plugins
bec26cc 2025-06-02 Cleaned up Roles app a bit moving configuration like parameters to class attribute CONSTANTS
7260c2b 2025-06-02 Tighter vertical spacing
6af47e4 2025-06-02 Showing full display names in roles and changing them to stacked vertically
284d8af 2025-06-02 Adding some DISPLAY_NAME emoji's and a system for it in CRUD like tasks
21e11e7 2025-06-02 Dev Assistant Wayyyyy simpler, 2 steps removed
41c8751 2025-06-02 Dev Assistant colors much better worked out and centralized into class attributes
f26c1b8 2025-06-02 All data types being rendered out correctly
6a66afe 2025-06-02 Further cleaning of Dev Assistant
6aad5fa 2025-06-02 Making the Dev Assist report cleaner and less redundant
62a7814 2025-06-02 Got rid of false positive on missing finalize method in Dev Asssist
d07d572 2025-06-02 Expanding Dev Assistant to do a swap readiness analysis
87d9f73 2025-06-02 New role order
7c172e6 2025-06-01 Readme on main Documentation app page
c9e0532 2025-06-01 A very delicate balance of RegEx to show the README correctly, fixing a 1st-line ASCII art problem and and code backticks each getting their own line problem
ecf5f3b 2025-06-01 Making the README more visible in the documentation browser
2c30679 2025-06-01 Adding link to REAME into docs
de9f46e 2025-06-01 Documentation links look good. Local LLM trained on whatever documentation you view. Needs QA
9ce3a2a 2025-06-01 Getting the links right on the documenation intro page
bba93e9 2025-06-01 Sub-index pages being built on documentation
f08e5f2 2025-06-01 Turnded document statistics into links to sub-indexes but sub-indexes not sub-indexes yet
782eb11 2025-06-01 Server restart shows correct endpoint message on document app
4f3e6f0 2025-06-01 Showing the index of found documentation on the main docs app page
e3e05ff 2025-06-01 Local Ollama being successfully trained on whatever doucmentation you view
be13a33 2025-06-01 Making the system insert any documentation you view into the LLM conversation history
c58abf4 2025-06-01 Making the server restart messages go through the Pipulate message queue to avoid interleaving with each other
7f789e5 2025-06-01 Moved timing dealy for intro messages the CONSTANTS near the top to easily fine-tune
69d641e 2025-06-01 After every server restart the endpoint message is shown after the DEV/Prod mode message, and the training prompt is put in conversation history in case the user starts asking about the app they're on immediately after a restart
d7e7ef3 2025-06-01 Prompting the LLM to talk to the user in Intro mode
b4b2a7e 2025-06-01 Sending a message to tell whether it's in DEV or Prod mode on every server restart
a83ff37 2025-06-01 Tore out the separator that used to separate plugins on the APP dropdown, no longer necessary with color-coded Roles
f84fc58 2025-06-01 A very fine look indeed. Keyholes are black. Workflow widgets are chrome. And chat just sort of fades into the PicoCSS theme background
7935c4d 2025-06-01 First pass of excluding the Chat message box from the workflow dim grey chrome styling
10b1e49 2025-06-01 Separated CSS styling of workflow cgi-bin web form fields from the navigation dropdown menus
1e533de 2025-06-01 Adding notes to try to pin in place how the aria spinner appears to replace the radio button in the dropdown menu
ea1cec1 2025-06-01 Another helper that cleans up to clean up
9f904cf 2025-06-01 The spinner is being swapped in properly on DEV/Prod environment switching, but it could be prettier
4e1b29c 2025-06-01 Back to single lines from stacked lines. All that readability gone away, but will get it back later
1a6a407 2025-06-01 Extracted a couple of semantic classes into styles.css
1ea2c56 2025-06-01 Fully externalized the flyout styles, both visible and hidden
357cddf 2025-06-01 Externalized flyout style
de29d21 2025-06-01 Made a lot of excessively long lines more readable
cc1afd4 2025-06-01 Organized CSS
5af0570 2025-06-01 Adjusted the number of plugin per role count in Roles app to match the visuals of APP menu
2cf0b26 2025-06-01 Made the token input field in Connect With Botify black like any other keyhole
d396d81 2025-06-01 The Role colors are now very clear and editable in styles.css
6093767 2025-06-01 You can drag-copy Roles and order them in the APP menu as colored groups
c3f883b 2025-06-01 Implementing hierarchical sorting of color-grouped roles in APP menu
da0bc6e 2025-06-01 Role colors are being applied to the expanded details of each role in the role app
d003847 2025-06-01 Toned down the Core color
39110a9 2025-06-01 Making the role colors on the roles app too
605bd10 2025-06-01 Giving Roles colors in the APP dropdown menu
1e7199b 2025-06-01 Rule concerning race condition protection on automatic workflow generation
24d97be 2025-06-01 At long last we have the best of both worlds - deferred watchdog server rebooting during critical process and forced server reboot at comletion
0be8d29 2025-06-01 Had to replace the simple shared state which wasn't being abided by with a file-write equivalent that shows a critical operation is in progress and not to allow a restart
a6289ce 2025-06-01 A shared app state implemented for turning off watchdog restarts temporarily for workflow genesis
1ae3e31 2025-06-01 Logging what command gets executed from workflow genesis
9ea5f31 2025-06-01 Workflow Genesis is now actually executing the command to create the new workflow, warnings to the user that there will be a server reboot and all
373f626 2025-06-01 The stage is set to actually let the workflow itself execute the command to create the plugin from Workflow Genesis. This is a perfectly discrete meta moment.
730b7f5 2025-06-01 Workflow Genesis on the edge of actually being able to execute the script it creates
599eabe 2025-06-01 Rolled Genesis Step 3 into a Step 2 display_revert_widget leaving step 3 as a placholder for Python subprocess execution
e3ae4e4 2025-06-01 Added ‚ö° to Workflow Genesis and changed display name from Workflow Creation Assistant
d22306d 2025-06-01 Link graph visualization button restored
0692bd9 2025-06-01 An astounding step forward in Workflow Genesis in how it created a new workflow in 1-shot based on the Trifecta
f17ea7d 2025-06-01 Kung Fu Hello Workflow working
6cfeb6d 2025-06-01 Workflow Geneisis is passing endpoint message and training prompt correctly to the constructed command
b02b5f6 2025-06-01 Backslash format being used in both places
05f7e3f 2025-06-01 Backslash format being used for readability on combined command for workflow genesis
bb06cae 2025-06-01 Textareas returned for endpoint message and training prompt
79220c5 2025-06-01 First pass at Workflow Genesis update after simplifcation of underlying framework, but it replicates the blank commands across all menu choices
936db21 2025-06-01 Laid down a much cleaner new foundational framework for Workflow Genesis - the clean-up before the clean-up
ae75bec 2025-06-01 The Kung Fu Hello World workflow example is being shown no matter the selection in Workflow Genesis, and what's worse is that it shows an example of the old 4-step broken way and then follows up with the 5-step correct way creating a confusing user experinence
71171bb 2025-06-01 About to let Claude update the development helper area of readme given formidable context from recent discussion thread in Cursor
efc95bb 2025-06-01 Removing more hard-wired references to filenames from README in favor of the words you'll actually see in the menu
2d6f430 2025-06-01 Humorus attempt at explaining the 1+1=3 effect of the side-by-side JuptyerLab install sharing the same .env Python virtual environment, and giving up with a If you know you know
ddef912 2025-06-01 Spellings
5d96624 2025-06-01 Added explantation about how it's multi-platform and will also use your special hardware with CUDA for acceleration
62104b9 2025-06-01 A bold statement about your friendly localhost AI Chip O'Theseus also being an MCP client ‚Äî I had better scramble and go make that true
116362e 2025-06-01 Hitting home the significance of the MiniDataAPI Spec and the Python dict interface as the key to forever-forward super-simple database ORM-like operations and softwiring of database choices
0311831 2025-06-01 Spaces in lists look better
2c8d053 2025-06-01 Spelling
4eca9da 2025-06-01 Calling out HTMX explicitly as the source of your hamster wheel exit strategy
c321879 2025-06-01 While DRY is fly, unyielding proponents take note that the age of wapidly witten WET code is upon us because AI
fdd0c77 2025-06-01 A word on force multipying acceleration effect and future-proofing
2c5df54 2025-06-01 More snark, this time at Docker
88b1dd7 2025-06-01 Adding a bit of snarky jabs at Colab and IPyWidgets
e2c0c02 2025-06-01 What happens on localhost stays on localhost ‚Äî there, I'm really saying it
d0b17ed 2025-06-01 Putting a fine edge on the value proposition: train your local AI without training the world
06a632c 2025-06-01 Funny language added to readme about a genie in a hermitcrab shell
218f56c 2025-06-01 Adjusted headline to be consistent with GitHub repo description
3885ae1 2025-06-01 Taking out absolute file number/name references that are subject to changing
52b9d2b 2025-06-01 A line about data staying on your machine
600e47b 2025-06-01 Line in README about proprietary friendly
3b82bdc 2025-06-01 Really pusing run_all_cells in README
36f16b9 2025-06-01 Starting to trickle out the new clear run_all_cells mental model through Pipulate.com site and README
f8eac54 2025-06-01 Eradicated the concept of rebuild (search and replaced rebuild) and replaced with run_all_cells to make the parallel with what's going on with Jupyter Notebooks with the top-down chain reaction pervasively remminding the LLMs at every turn
466effa 2025-06-01 Updated rules to reflect learnings about run_all_cells and rebuild
3130a40 2025-06-01 Replace verbose placeholder patterns with rebuild() method calls - Replace manual Div creation in init() and handle_revert() methods with pip.rebuild(app_name, steps) - Affects 20+ plugin files including widget workflows and core workflows - Consolidates workflow initialization logic using the established rebuild() pattern
87e19cd 2025-06-01 Replace verbose placeholder code with rebuild() method calls - Replaces manual step placeholder creation with pip.rebuild() in 030_connect_with_botify.py and 530_botify_api_tutorial.py init() methods
3656dba 2025-06-01 Removed the concept of run_all_cells because it was used so infrequently
2998b87 2025-06-01 Making more readable
e87e491 2025-05-31 Added a secret word to Roles to prove training
047983b 2025-05-31 Added roles training
54d0949 2025-05-31 Added a description on the roles app
8b12a3f 2025-05-31 Roles is working very nicely showing just the plugins actually beloinging to each role
cf9c2a4 2025-05-31 The right presentation in roles but the numbers are all wrong
fc5fae3 2025-05-31 Adjusting roles app to show which plugins they will show
773fd2a 2025-05-31 The documentation system is now rendering tables correctly in the sample output of the paginated docs from the notebook converted to markdown
fc0df9d 2025-05-31 Tackled an even more weird subtle siren wrapping in docs
07bdfef 2025-05-31 Tackled a subtle stray number after python block in documenation rendered by prism problem
9995a82 2025-05-31 Handling --- as hr's now in the documentation markdown
a90572d 2025-05-31 Fixed some markdown rendering in documentation to make headline content process inline markdown
2701dd7 2025-05-31 Huge rule renaming and organization
df97434 2025-05-31 Some new rule work
d5f3995 2025-05-31 Renamed the JavaScript files to better reflect their function
3d3a4ce 2025-05-31 JS documentation
7f30bbf 2025-05-31 Removed get_button_style as unused function
10a6dc6 2025-05-31 Moved some Pipulate-specific step functions to inside Pipulate class
af10c43 2025-05-31 Grouped related functions tighther and removed single-use function
421d4c6 2025-05-31 Removed the quiet parameter from append_to_conversation
60c4198 2025-05-31 Lots more little readability touches particularly around append_to_conversation
eb41d27 2025-05-31 Made the Intro sutff much more readable (in the code) and implicit of structure
4efdaad 2025-05-31 More expanding things out to make them more readable in the strange Python HTMX signature way
8a9df91 2025-05-31 Making autoflake8 run-on lines more readable
57db8bd 2025-05-31 Gathering together more endpoints
7c4e84f 2025-05-31 Moving more endpoints together
e80bd5b 2025-05-31 Moved intro block higher in server.py
e26f535 2025-05-31 Adjusted the auto-key logic to use APP_NAME instead of DISPLAY_NAME for cute Hello Workflowüêáüï≥Ô∏è  display names
1d00ef0 2025-05-31 Hello World emoji tweaks like Next ‚ñ∏ button
52bc437 2025-05-31 Adjusting cgi-bin web form input field colors
cc03392 2025-05-31 Promiting Next-Level Creativity Away From the Algorithm
f1a3d4b 2025-05-31 Preparing to layer in directional notes for future Pipulate development
0b96557 2025-05-31 Dug further back for a FULLY working pipulate/plugins/535_botify_trifecta.py and found it
307badf 2025-05-31 pipulate/plugins/535_botify_trifecta.py working again, pulled forward from repo by Claude
dd57862 2025-05-31 Developer Assistant catching finalize method missing
a344d4f 2025-05-31 Further refining Developer Assistant
f103cbe 2025-05-31 Developer Assistant color coding LLM prompts with Prism correctly
74444eb 2025-05-31 Fine tuning Developer Assistant
5f98fdb 2025-05-31 Adjusting the Developer Assistant
a6a8e90 2025-05-30 More rule tweaks and banking learnings concerning workflow creation
edc3bc3 2025-05-30 More rule tweaks
44eaf7b 2025-05-30 Consolidated rules
b81d10d 2025-05-30 Working on Genesis
5542b1a 2025-05-30 Step 4 of Genesis does Prism
50d19bf 2025-05-30 Kung Fu Hello World working
aafd78b 2025-05-30 Cleaner blank placeholder
7d232c5 2025-05-30 Kung Fu Hello World workflow closer than it's ever been
d2c79f6 2025-05-30 Iterative refinements towards kung fu hello world
c4d5ecb 2025-05-30 Inching towards a Kung Fu Hello World (a Hello World workflow from scratch)
c3517e7 2025-05-30 Adding workflow step swapping
f897784 2025-05-30 Another learning experience removed
5bb78c9 2025-05-30 Rolling back come transplant rules in favor of building-up from a stub
a084fd1 2025-05-30 Removing transplant attempts
3cdb5e0 2025-05-30 Adjusting rules and approach. Less transplant. More building up from stub.
afcae94 2025-05-30 More transplant experiments
325826a 2025-05-30 Added a helper for adding missing local variables
fa8edbb 2025-05-30 Transplant got past step 2
6a6eca0 2025-05-30 Improvements to transpalnt engine
b856109 2025-05-30 The parameter buster transplant is going well
47ab771 2025-05-30 Atomic section transplant experimentation
7d99110 2025-05-30 First version of the atomic transplantation engine
e83ba61 2025-05-30 Continuing atomic section transplant documentation
5aecd09 2025-05-30 Adding atomic transplant markers and support tool
104fde4 2025-05-30 About to insert splice markers
d550b49 2025-05-29 All the buttons are there including download and link graph
0e070f3 2025-05-29 Cosmograph link working
cbb2ffe 2025-05-29 Added optional hardwired depth to trifecta
c9b93b0 2025-05-29 Defaulting Trifecta to Not Compliant for Jules test
c048d55 2025-05-28 Making markdown hyperlinks active in converted docs
6ec99d6 2025-05-28 Corrected some subtle line break problems
0a438f5 2025-05-28 Making the markdown exporter not include any code sell output (security)
00da2bd 2025-05-28 Updating Botify API Documentation and testing auto-doc system
7ab9713 2025-05-28 Seeing if I can make JupyterLab appear with the Botify API notebook loaded
ca5227f 2025-05-28 New key look
cb8a88c 2025-05-28 Style wrangling
f067df1 2025-05-28 Added Hello World as a template to Workflow Genesis
e79f060 2025-05-28 Hello Workflow Sanzzied Up With Emojis
8a9e52f 2025-05-27 fast_app call more readable and prev/next arrows in intro wider and nowrap
5b920af 2025-05-27 HTMX-powered download vs cached version button working
16bcc7b 2025-05-27 First version of HTMX aware download vs cache button
c8308c6 2025-05-27 MVP template stub achieved I think for workflows based on Trifecta
78d6c13 2025-05-27 The Download vs. Used Cached messaging in the buttons appears to be worked out
e802799 2025-05-27 Put üêç emoji in the api.log file for easier spotting of copy/paste-able Python
1d7a5c8 2025-05-27 Download buttons preemptively tell you whether it will used the cached version now debugging removed
72d9aba 2025-05-27 Download buttons preemptively tell you whether it will used the cached version now
01f2176 2025-05-27 The final emojoi in streaming added (I think)
b649b7d 2025-05-27 More emoijis in streaming
d1405f8 2025-05-27 Filling in more emojis on streaming messages
e08450a 2025-05-27 Double export prevention using cache now working when link-graph
2ed1a93 2025-05-27 Got rid of redundant emoji
0ce6d1f 2025-05-27 Better emojis in streaming during downloads
5975639 2025-05-27 Showing all the download buttons and better record keeping of successful downloads
36805db 2025-05-27 Analysis dropdown menu much more informative about what's been downloaded
4baba93 2025-05-27 Better comments in Python queries
c206692 2025-05-27 Download query is showing for link graph export
1b202ad 2025-05-27 I do believe the link graph export is working
0c040f7 2025-05-27 Making great progress with link graph export
cc60b13 2025-05-27 First implementation attempt under Trifecta system at link graph
68be326 2025-05-27 Preparing to do Link Graph implementation
f2563f9 2025-05-27 Got rid of XML header redundancy in prompt fu
c3187a5 2025-05-27 Refining prompt fu
d75026a 2025-05-27 Took out distracting details tag from README that interferes with prompt fu
69d06a6 2025-05-27 Preparing the prompt fu for link graph
ac84162 2025-05-26 Fewer external tabs targeted
494df17 2025-05-26 Previous/next arrows top and bottom of Botify API docs
b50175f 2025-05-26 Slicing documentation but have to keep cell Notebook cell output out of documentation
98e28ca 2025-05-26 Slicing documentation but have to keep cell Notebook cell output out of documentation
4d234a8 2025-05-26 Paginating Botify API examples
dbdd396 2025-05-26 Preparing to blend in Botify API documentation
80c7483 2025-05-26 Embedding the Botify API markdown maker
44c4f5f 2025-05-26 Added ipynbname to requirements.txt
ca3c9b9 2025-05-26 Beginning to refine/improve the Botify API Notebook
fb2fd43 2025-05-26 Removed extra requirements.txt
84da7d0 2025-05-26 Added Copy Markdown feature to the auto-documenation (very powerful for fast LLM training)
95110d9 2025-05-26 Made the documentation more dyanmically discovered and generated
2e91b97 2025-05-26 Enhanced documentation
ba67cd1 2025-05-26 Consolidated toggle endpoints
f65acf1 2025-05-26 Centralized constants
2725f9e 2025-05-26 Making the styles consistent
62298e0 2025-05-26 Showing the download buttons now too
e57a8f2 2025-05-26 The folder button is opening right down to the correct analysis folder
a93c4fb 2025-05-26 Showing the download folders in Trifecta
1540177 2025-05-26 Hide/Show Code buttons for Python always showing now even if download cached
70ac9fe 2025-05-26 More robust BQLv1-friendly Web Log download error message
21d1c44 2025-05-26 Reordering to show error debug code better
14c6b6d 2025-05-26 Fixed workflow genesis
fa99e90 2025-05-26 Controlling download locations
c47773f 2025-05-26 Trifecta workflow donloading into APP_NAME namespace in downloads folder now
0702600 2025-05-26 More rule adjustment for nix awareness
c68c93a 2025-05-26 nix develop quiet mode doesn't pip install now and is much faster for LLM tool-call use
0966aea 2025-05-26 Rule adjustments
f073fbe 2025-05-26 Rule cleanup
c8321d2 2025-05-26 Better documentation viewer
aaebcd8 2025-05-26 Documentation Markdown viewer plugin added
ec6b263 2025-05-26 The dev helper assistant plugin is fully working
fc4a46d 2025-05-26 All but step 1 display in developer assistant is working
5cf75cc 2025-05-26 Developer assistant widget nearly there
4f983a2 2025-05-26 Added ultimate guides in training folder and debugging dev assistant
850ddd7 2025-05-26 Dev Assistant added
5b66c7e 2025-05-26 Updated Cursor Rules and Readme per Claude 4's current Lightning in a Bottle context
996e6f6 2025-05-26 This is becomming stunningly usable and is on the verge of escape velocity
06a7a93 2025-05-26 Improving Workflow Genesis
7d2871d 2025-05-26 The Workflow Genesis script astoundingly adanced by Claude 4
ba65aeb 2025-05-26 Claude 4 Sonnet is very confident I'll see the blank placeholder at the top of a trifeta add
f320f9c 2025-05-26 The complex comma fix to splicing blank placeholders into trifecta may be working
1774fa5 2025-05-26 Making new branch to try to fix the splicing to trifecta challenge
fc8b5f7 2025-05-26 Making the create_workflow.py helper support different starter templates than the blank placeholder
d22f45c 2025-05-26 The Revert Step buttons now reflect the indices rather than the step.id
33246bd 2025-05-26 Template work to allow internal ids separate from user-exposed step names
af20a50 2025-05-26 Splicing blank placeholders in at the top now supported
8906409 2025-05-26 The splicing commands are broken out as separate copyable prism blocks
a5888bc 2025-05-26 Adjusting 510_workflow_genesis.py to provide new command options for splicing blank placeholders
218e547 2025-05-26 About to get insert-before capability with splicing blank placeholders
6bf377c 2025-05-26 Added path resilliency edits from splice_workflow_step to create_workflow
507d8d9 2025-05-26 Took the plugin path requirement out of 510_workflow_genesis.py
9c6ff17 2025-05-26 Making splice_workflow_step.py more robust
44d0dbd 2025-05-26 Organizing helpers
6f2b2a1 2025-05-25 The selected query tempates being shown in the workflow Web UI
86ad358 2025-05-25 Switched to more user friendly Template Names
ac7f98c 2025-05-25 Made the query template selections actually used
587a429 2025-05-25 Starting to use the query template system
e851812 2025-05-25 Added some documentation about template system
e67690b 2025-05-25 First version of query template system working
4f3a4b3 2025-05-25 Got rid of redundant note
1070e80 2025-05-25 Embedded painful learnings haha
27027ff 2025-05-25 The Python code is executable for all 3 tables of the trifecta
c874299 2025-05-25 Better headers in the api.log. They name their calling methods.
3b1c3fa 2025-05-25 Informative Python headers now in api.log as well
201f828 2025-05-25 Adding friendly headers
8095738 2025-05-25 The copy/paste-able Python code is now converted to the /query endpoint (instead of /jobs) and runs directly in a Notebook
8972879 2025-05-25 First attempt at using the conversion function
ad8cc04 2025-05-25 Endpoint conversion function added for going from jobs endpoint to query endpoint
9aa04c1 2025-05-25 Actually changed to be copy/paste-ready for Jupyter Notebook
0a6c80e 2025-05-25 Script changed to have the Jupyter Notebook bias over .py scripts
3e5793f 2025-05-25 PrismJS is syntax color-coding the Python correctly
fbe161c 2025-05-25 Turned text headers on Python snippets into comments for copy/paste friendliness
78f56e1 2025-05-25 The Python code for the Hide/Show Code is actually hiding and showing for all 3 tables of the trifecta weblogs, crawl and gsc
babf2e2 2025-05-25 Hide/Show code is actually showing the copy/paste-ready Python for 2 and 3. Steps 4 and refinement still needed.
972d95f 2025-05-25 Preparing to Hide/Show the actual Python code
740bc4d 2025-05-25 The Hide/Show Code toggle behavior is all exactly as it should be
f4f346d 2025-05-25 Nearly there. All hide/show code buttons appear first with hidden code and 1st click shows
60f9293 2025-05-25 The initial state of the hide/show code buttons is now hidden
8aef6b6 2025-05-25 Making hide/show code buttons start with code hidden
9cbb226 2025-05-25 All 3 hide/show code buttons working
ba994eb 2025-05-25 Hide/display code buttons mostly implemented
debb8b8 2025-05-25 Making the hide/show code work immediately after sumbmits
b50d09d 2025-05-25 Made the final _submit line of steps 2, 3 and 4 readable
e935b2f 2025-05-25 First version of the hide/show code buttons
6a696ef 2025-05-25 Showing a placeholder value for display_revert_widget for steps 2, 3 and 4
b3476b7 2025-05-24 The Python for constructing the Analysis menu now logged along with 1st page of results
c041817 2025-05-24 Paging through light Analysis results to get all analysis date slugs for dropdown
87ed99e 2025-05-24 Switched to light analysis endpoint for the analysis slug dropdown menu
9de79d2 2025-05-24 API log only shows detailed logging for the first attempt and the final successful response. The rest is quieter.
0057b5a 2025-05-24 Logging the Analysis menu
617d8c5 2025-05-24 Making the polling a bit quieter so you see each unique API call only once
b114f09 2025-05-24 The Python code in api.log can now be copy/pasted into a Notebook and run standalone (great success)
2a37483 2025-05-24 Getting the Python copy/paste-able
8a5679d 2025-05-24 Refining api.log to make Python blogs copy/paste-ready for Notebooks
6b056eb 2025-05-24 Removed the CURL examples in the api.log file output. It was too confusing
458a0ec 2025-05-24 Pretty printing of JSON payloads restored and truncation removed
187c785 2025-05-24 Removed the concept of BQL-only and unified on all external API call logging
af73732 2025-05-24 Got rid of truncation of the API JSON payloads. Moving towards full transparency and reproducibility
d00fd21 2025-05-24 Pretty printing JSON API payloads
beaace9 2025-05-24 Made the number of API logs to rotate an easy to set CONSTANT near top
cf7ac44 2025-05-24 Rotating the API logs so they're fresh every time and you don't lose a chance to see them from a server or watchdog restart
06ec358 2025-05-24 api.log now using CONSTANT for API Token
1d1e29a 2025-05-24 API log being written
48419d3 2025-05-24 Preparing to make a dedciated BQL logging file
e21c8e2 2025-05-24 1-liner prompt support
e9854d2 2025-05-24 Adjusting command-line API
6821c22 2025-05-24 Pedeantic pickle
1249666 2025-05-24 Raw list of files to include and their commentary now included in manifest
bc36767 2025-05-24 More comments in prompt foo
67e3858 2025-05-24 Supporing spaces before <-- style comments
d1fdaae 2025-05-24 Filtering out blank lines from Prompt Foo manifest
e4f32a1 2025-05-24 Prompt Foo adjustments for blank lines in FILES_TO_INCLUDE
51632ad 2025-05-23 Even more consistent view
3258671 2025-05-23 Buttons consistent across paths
250a2bc 2025-05-23 Making views consistent in download
6c7906f 2025-05-23 Constant global in file download
b5b8c80 2025-05-23 Folder opening and file downloading links consistently buttons
717453d 2025-05-23 File upload working
813e319 2025-05-23 CSV downloader endpoint added
b4220e9 2025-05-23 Getting ready to implement CSV downloading
afb1cdb 2025-05-23 Fixed parameter buster
3009bf1 2025-05-22 Tiny bit of key language
aac375d 2025-05-21 Added an LLM Intro page
d65c0af 2025-05-21 Intro tweaks
8948d6a 2025-05-21 Intro wording
e136891 2025-05-21 Enhanced logging
6950ed5 2025-05-21 Enahanced logging, potentially broken
8a2141b 2025-05-21 Preparing some prompt fu
af0292e 2025-05-21 Reset Entire Database working correctly on Roles
cde8dd5 2025-05-21 Sorting roles persistent
074bafb 2025-05-21 More renames and role tweaks
bfaaa8d 2025-05-21 Moved the Roles link under the Poke flyout
f97139c 2025-05-21 Renaming and sorting plugins
ad56c6a 2025-05-21 Updating roles, added Components role
759b1ce 2025-05-21 Rolling 530_botify_export.py back to pre-polling messaging
37b90b7 2025-05-21 Added extruct to requirements if only as a structured data reminder
d6ee416 2025-05-21 Layering in full transparency of BQL processes
2c01f72 2025-05-21 050_botify_csv_downloader.py is working, generic, has dead functions stripped and has a blank placeholder
3ec21d1 2025-05-21 Blank placeholder in for step 5
5137740 2025-05-21 Systematically removing steps
16a59bd 2025-05-21 About to make generic Botify CSV Downloader
c941bfa 2025-05-21 Step 4 revert being skipped on csv download
129f720 2025-05-21 Only the finalize on initial download is missing
a3c7fd7 2025-05-21 Extra button click eliminated in csv download
d703293 2025-05-21 Exponential backoff reported properly in message queue
c309049 2025-05-21 Exponential backoff implemented in csv download
aa4aa1b 2025-05-21 Telling user how many seconds
07d650c 2025-05-21 Showing polling message to user in CSV export
c48449c 2025-05-21 Rule added about keeping pluign downloads separate based on APP_NAME
f855641 2025-05-20 Downloads are being created in the right location and with the right directory structure
605efca 2025-05-20 Downloads app using good download file location
00139d6 2025-05-20 Consistant showing of Open Folder link in upload widget
0ef922f 2025-05-20 Added local filesystem folder link opening ability
a41d5f0 2025-05-20 Introduction messaging
972edc9 2025-05-20 Tips refinement
ffc5430 2025-05-20 h2 on intro headline
e563d65 2025-05-19 Documented PrismJS includes in README
03df35c 2025-05-19 Workflow Genesis working
8049aac 2025-05-19 Updated my prism js and css for bash and more
1e0cf86 2025-05-19 Switching to PrismJS for display
69f63b9 2025-05-19 First versio of Workflow Genesis working
42b0478 2025-05-19 Pre-populating Kung Fu Download inputs
640ef0c 2025-05-19 Workflow Genesis Take 2
5f9aab3 2025-05-19 Going to try Workflow Genesis
394fb0b 2025-05-19 Added jekyll metadata folder to skips
654b296 2025-05-19 Adding retcon to helpers
3a394b5 2025-05-19 Examples put into create_workflow and splice_workflow
7f8b883 2025-05-19 Better messaging
ea1517e 2025-05-19 The step splicer is working
08660ad 2025-05-19 Fixed create workflow
4598242 2025-05-19 H2 for Chatbot head
9cff46f 2025-05-19 Scroll To Top link implemented
29ca7c0 2025-05-19 Removed LIST_SUFFIX
bb1ea08 2025-05-19 Removed dead variable and function
ddfd98a 2025-05-19 Removed unsued render_profile
351b618 2025-05-19 Rearranged CONSTANTS
df4d7c4 2025-05-19 Removed another dead variable
265c8f8 2025-05-19 Externalizing menu CSS
ec2ecfc 2025-05-19 Got rid of some dead variables and did flake8 isort
a309512 2025-05-19 Less pink pink
2595c7b 2025-05-18 Bold profile and app menu names
ff5583d 2025-05-18 Tweak down all headlines a bit (for Mac)
5585991 2025-05-18 Got rid of nowrap on breadcrumb headline
2d7c6b3 2025-05-18 White text on revert buttons
8990a94 2025-05-18 Version rev
4568f16 2025-05-18 Scroller back on dropdown
cc1db8d 2025-05-18 This may be MVP
45d06bf 2025-05-18 Working on menus
a9ef9a0 2025-05-18 Better menus
09192f4 2025-05-18 APP menu stays on screen
046c673 2025-05-18 Spacing
8087ca6 2025-05-18 We've got 80/20-rule good spacing
b5aa3d1 2025-05-18 This is very close to it
bf946f0 2025-05-18 The new layout is working
83a2511 2025-05-18 This may be the winning layout
2ed6ca2 2025-05-18 Trying some radical layout changes
dad937e 2025-05-18 Chat interface has margin right
ced587e 2025-05-18 Wrangling the CSS
0eab58f 2025-05-18 Externalizing styles
ce0b07b 2025-05-18 Nav group color transparent
11a0665 2025-05-18 Externalizing main style
53eb8db 2025-05-18 Using the flex grid to control things
1b9d76e 2025-05-18 Adjusting positions
0fbe673 2025-05-18 Making nav-group sticky
3b7e6a8 2025-05-18 Gave the nav group an id nav-group
8eb5f83 2025-05-18 Cut out a lot of comments from Connect With Botify
922f5d0 2025-05-18 Formatted plugins again with flake8 and isort
74ff2c0 2025-05-18 Chain reverter correct look
3d10cab 2025-05-18 New semantics and nomenclature in rules
3dba880 2025-05-18 Updated rules
698d556 2025-05-18 Better semantics for displaying revert in chain reaction
db4131c 2025-05-18 Gonna do this for real
209f324 2025-05-18 Preparing to refactor workflow chain reaction method names
cb2e894 2025-05-18 Updating rules
46553aa 2025-05-18 More Hello Workflow documentation
4d66fb4 2025-05-18 Beefed out Hello Workflow with chain reaction info
4a19f37 2025-05-18 Plugins linted flake8 and isorted
ac334b8 2025-05-18 About to lint plugins
ef28d74 2025-05-18 Put my favorite linter comments back in (again)
e697753 2025-05-18 A bunch of semantic style renames
f62da63 2025-05-18 My first CSS renaming
81b00c5 2025-05-18 Put debug modes to false for anyone actually downloading this
ab1b5c2 2025-05-18 I put my favorite linting commands near top of file to prevent AI deletes
dd924bd 2025-05-18 Preserving Roles through reboots
129bc58 2025-05-18 Rules update
356d46f 2025-05-18 Passing request paramter to plugins consistently
92d4d22 2025-05-18 About to try to pass the request paramter to plugins consistently
1f539b3 2025-05-18 Adding rename css class helper function
abbced0 2025-05-18 Adding refactor inline style helper script
79c8d02 2025-05-18 Unfiying menu styles more
84a0a61 2025-05-18 Unifying menu styles
8a46387 2025-05-18 Preparing get_style cleanup
13cb534 2025-05-18 CSS cleanup
5460f3f 2025-05-18 New refactor script
de6ef01 2025-05-18 Getting ready to simplify styles
39fdfcc 2025-05-18 Added some styles
fbc499a 2025-05-18 Added analyze styles
beb4766 2025-05-18 About to revise context foo
d3f4e1d 2025-05-17 Best spacing yet
34413bb 2025-05-17 Whole UI lock on Dev/Prod mode switch
4ab8993 2025-05-17 HTMX menus back
dc7ddc7 2025-05-17 Preventing Default Profile from being deleted
371559a 2025-05-17 Just the right Prod/Dev switching look
e49af87 2025-05-17 Dev/Prod menu work
6b341ca 2025-05-17 Fighting syles
b99790d 2025-05-17 Reset Entire Database removed from Prod mode
10705cd 2025-05-17 Close to MVP
80fa554 2025-05-17 More contrast for Poke menu and less bullets
28536f7 2025-05-17 Better Roles order
ed4ca39 2025-05-17 Core can't be unselected
ac53d77 2025-05-17 Matching summary styles on menus
a776700 2025-05-17 Standard button widths
11006cb 2025-05-17 Getting there
73dddc2 2025-05-17 Even the htmx endpoint stuff is working for roles
761e4b3 2025-05-17 Role based APP menu almost there
7f9e660 2025-05-17 Attempting roles based menu
58f1a44 2025-05-17 About to control APP menu with ROLES
9c317db 2025-05-17 Profile width bigger
a0e0a4e 2025-05-17 Vulture silenced
e072a8c 2025-05-17 More vuluture stuff
89fb9ec 2025-05-17 noqa for vulture
b342cc9 2025-05-17 Sophisticated vulture
a9eccbb 2025-05-17 Vulture
458f7c7 2025-05-17 isort
5d4e794 2025-05-17 autopep8
fc11daf 2025-05-17 Lock and unlock toggle correctly from poke menu
87bf0ad 2025-05-17 Adding profile lock to the poke menu
8e3f34b 2025-05-17 Removed poke functions from app menu
acc70a1 2025-05-17 Poke link control
6e1051a 2025-05-17 Poke endpoint working
7bb675b 2025-05-17 Delete All Workflows to Delete Workflows
41f6afd 2025-05-17 The flyout is HTMX now
0eedd0d 2025-05-17 Poke button showing on all pages including homepage
3e2f055 2025-05-17 Poke button can be reached
fe4c72c 2025-05-17 Returning flyout
6686564 2025-05-17 Working on flyout
d946e32 2025-05-17 App menu wider
6bc19f2 2025-05-17 Highlighted app menu now readable
eea95de 2025-05-17 Fixing app menu
d1b8191 2025-05-17 Visual li bullets removed on profile
1ee58c5 2025-05-17 Fixed button width on add profiles
d99be7e 2025-05-17 Inserting profiles works
3380610 2025-05-17 Profile sorting fixed
1e7914c 2025-05-17 Brought back HTMX real-time menu updates from profile
8402da4 2025-05-17 Edited out extra render_profiles
5e93ef8 2025-05-17 Extracted Profiles and rules update
3a42133 2025-05-17 Profile app may be externalized
7be1fa2 2025-05-17 Another round
75bf750 2025-05-17 More profile exporting work
e77e2d0 2025-05-17 Continuing
eed0154 2025-05-17 Externalizing profiles adventure continues
97e5874 2025-05-17 Maybe progress
ccce906 2025-05-17 Iteratively moving towards profile extraction
389734b 2025-05-17 Iteratively moving towards profile extraction
51e7a8f 2025-05-17 Added the extracted profiles app
09d0a24 2025-05-17 Extracting 000_profiles.py
f406059 2025-05-17 Removed ability to Add roles
6bc5072 2025-05-17 Removed ability to update roles
60d3be6 2025-05-17 Removed delete from role plugin
42671c8 2025-05-17 Core and Botify Employee set to active Role on init and reset
f7074f1 2025-05-17 Roles are being synced
686922d 2025-05-17 Robust debugging of roles init
b22bee0 2025-05-17 Robust debugging of roles init
19d8dc5 2025-05-17 Roles table showing in rich table
075de05 2025-05-17 Implementing roles sync
d983843 2025-05-17 About to implement roles sync
1158eeb 2025-05-17 Robust debug output
e57651d 2025-05-17 Better debug logs
1569a9f 2025-05-17 Better debug logs
4228e93 2025-05-17 System is plugin aware
87e3628 2025-05-17 Added roles to each plugin
5425e33 2025-05-17 Preparing for roles
72b9d13 2025-05-16 Preparing to get Roles implementation plan
27cd9ba 2025-05-16 Removed in-process rules
0542f33 2025-05-16 Got rid of backslashes in rules
ed72aca 2025-05-16 Always apply meta routing rule
964b55c 2025-05-16 Meta routing rule to be always included added
98d2f28 2025-05-16 Moved new rules in place
0721d36 2025-05-16 Purged old rules
8e2f29c 2025-05-16 Getting ready to update rules
f50a672 2025-05-16 Preparing to consolidate rules
4c9a251 2025-05-16 Unified behavior of Profile and Todo app to have New at top
d624330 2025-05-16 Some more emojis
8daa1cf 2025-05-16 Trashcan icons
4e84665 2025-05-16 Changing precursors to helpers
40eb4b0 2025-05-16 Adding splicing helper script
77e9c67 2025-05-15 Hello World language cleanup
a5586a7 2025-05-15 Showing messages when switching plugins shown
4dde8b7 2025-05-15 Better poke button order
28b9c10 2025-05-15 Simple individual workflow record delete capability supported
822f9d8 2025-05-15 Cleaner logging
72670ab 2025-05-15 Setting initial key values better
078e0ab 2025-05-15 Deleting individual workflows supported
71b759b 2025-05-15 Lock/Unlock Profile now also on Poke menu (avoid having to show profiles to lock them)
5a3d74e 2025-05-15 More effciently keeping the LLM in the Information loop
e226e98 2025-05-15 Refining Intro messaging
b5caeec 2025-05-15 Keeping LLM in the loop on Introduction page
9065e75 2025-05-15 Actally fixed Kung Fu
0acce25 2025-05-15 Fixed Kung Fu
8073cd2 2025-05-15 Trimming some cruft
86db9e4 2025-05-15 Profoundly good state
daa3da9 2025-05-15 Less prev/next arrow popping
6a2f799 2025-05-15 Card appearance for Intro
fc93bf5 2025-05-15 Fixing everything else that broke
19fd518 2025-05-15 Prev/next arrows almost there
ac0ee89 2025-05-15 Styling the arrows
b7cf7d4 2025-05-15 Intro page sequence
78ac3c9 2025-05-14 Updated homepage
b047e37 2025-05-14 Lock profile is in the profile menu
aaaa760 2025-05-14 The lock switch also removes the Edit Profiles link
4bc62a0 2025-05-14 The switch filters PROFILE menu now
714b604 2025-05-14 The PicoCSS switch toggle in nav is persistent
0e581a1 2025-05-14 CSS switch next to PROFILE in prep for lock
6241545 2025-05-14 The concept of Home swappable with Introduction
790de9b 2025-05-14 Rearranged plugins and refined menu
ea01e5e 2025-05-14 Separator line between core plugins and rest
8088a31 2025-05-14 Warnings about missing training docs better
bd196e0 2025-05-14 Silencing unnecessary warnings
6fa238d 2025-05-14 Uvicorn log format matching loguru
625c58d 2025-05-14 Extremely clean log output
9c29298 2025-05-14 More log file format cleanup
ea785e2 2025-05-14 Better logging of SSE
c1d1c89 2025-05-14 Better logging
b3479c3 2025-05-14 Got rid of a duplicate logging line
b90a616 2025-05-14 Showing whitelabel branding on reboot in server console
f10bc51 2025-05-14 Not showing router table on server restart anymore
04ede6b 2025-05-14 Got rid of key not found errors on server restart
a90817a 2025-05-14 Turned poke area into flyout
832e920 2025-05-14 Able to control plugin number level at which considered developer plugin
d1faefc 2025-05-14 Separator line working again
bb0148a 2025-05-14 First working version of showing and hiding dev plugins
9fed70a 2025-05-14 First attempt at menu modes
2cdb070 2025-05-14 Removed super-prompt from repo
f53352e 2025-05-14 Ugraded to Cursor 0.50.4
56f90f0 2025-05-14 Changed update_step_state( to set_step_data(
546d672 2025-05-14 Filtering kungfu_workflow.py
923447c 2025-05-14 Added a helper program to create new workflows
0250f31 2025-05-14 Added Selenium standalone workflow
0859e97 2025-05-14 Added standalone webbrowser URL opener widget workflow
01ab697 2025-05-14 Added standalone file upload widget
b331afe 2025-05-14 Standalone executable JavaScript widget workflow added
00d9be9 2025-05-14 Matplotlib standalone widget workflow added
c6e679c 2025-05-14 A bunch of new widget rules
d4656b7 2025-05-14 Fixed the line number code alignment with styles
0bf471d 2025-05-14 Color syntax highlighting in PrismJS standalone widget working
03fefe1 2025-05-14 Working on the PrismJS code higlighter
751a1b3 2025-05-14 Rich table standalone widget extraction done
2cf562d 2025-05-14 Pandas data table standalone widget working
8b9ab2d 2025-05-14 Pandas data table standalone widget working
e193598 2025-05-14 Standalone mermaid diagram added
540aeaa 2025-05-14 Markdown standalone widget added
550652b 2025-05-14 Preparing to attempt widget extraction again
8319ee5 2025-05-13 Switches done and semantically correct
3c19b8b 2025-05-13 Getting the switches semantically correct
b05e91d 2025-05-13 Making an attempt at more generic switches
af7596f 2025-05-13 Switch widget complete enough
7203277 2025-05-13 Radio button good enough
3f9bc21 2025-05-13 Adding a switch widget
63e4609 2025-05-13 Range selector widget done
b3575e4 2025-05-13 Allowing number to be typed in on slider
427c399 2025-05-13 Implementing a range slider
a6e3a52 2025-05-13 Adding range selector widget
7eb3e11 2025-05-13 Radio button widget implemented
af8fcf3 2025-05-13 Adding radio button widget
b1eca2e 2025-05-13 Checkboxes are implemented
80f1369 2025-05-13 widget designer to widget shim
15ac276 2025-05-13 widget designer to widget shim
abdbfc4 2025-05-13 A few readme fixes
fa8d77d 2025-05-13 Widget Designer to Widget Shim
2d4a9fa 2025-05-13 Rule redundancy removed
970a358 2025-05-13 Lots of rule updates
ba1383b 2025-05-13 Tore out the whole notion of jump_to_step
4bb5e20 2025-05-13 Attempting to change prompt to indicate nix or not
490f344 2025-05-13 isnix and version displaying on nix develop
6f5ec27 2025-05-13 Added isnix
ba3270c 2025-05-13 Added a lot of elif's, watch for breakage
0db9108 2025-05-13 About to propegate an elif condition
72ff834 2025-05-13 Checkbox placeholder added
db41520 2025-05-13 Moved roadmap
be64d3c 2025-05-13 Separator line position in APP menu controlable
e429e07 2025-05-13 Adding a separator plugin for lines
b64351a 2025-05-13 chore: remove rename script after use
21c8b66 2025-05-13 refactor: standardize rule file naming convention (use underscores, remove redundant prefixes)
5237e47 2025-05-13 More rule organization
0abe64d 2025-05-13 Blending rule wayfaring system into new standalone widget templates
18eef20 2025-05-13 Organizing rules
10bbbdc 2025-05-13 Rule consolidation
5eefd3d 2025-05-13 Fighting rule sprawl
6200d22 2025-05-13 Standalone dropdown menu widget done
45990ac 2025-05-13 Dropdown menu underway
7477fc3 2025-05-13 Preparing to make a dropdown menu standalone widget
15d82d9 2025-05-13 Text area widget solid
0f3023e 2025-05-13 Adding pre tags for submitted textarea data display
0cd9068 2025-05-13 Adding standalone textarea widget
f37dd38 2025-05-13 Beginning to consolidate rules
9c34981 2025-05-13 Text Input Field widget singleton working
006c9bd 2025-05-13 About to make a text field widget
162acb2 2025-05-13 New blank placeholder
be4ddea 2025-05-13 Getting ready to add widget simpletons
e2c39ba 2025-05-12 A rule rename for convention
4855233 2025-05-12 File Update Widget working in Widget Examples and Selenium automation fixed too
fcea52b 2025-05-12 Brought back reopen URL for Selenium but inital open still broken
2799255 2025-05-12 File upload in widget examples but Selenium automation broke
174b15a 2025-05-12 Prep work for transposing file upload widget into widget examples
85fca52 2025-05-12 Added a Step 11 placeholder to widget examples
3a5cc98 2025-05-12 New rules
dcb7c9e 2025-05-12 New rules
ac91c38 2025-05-12 Adjusted prompt and another back from the fubar abyss defense
306bb18 2025-05-12 Multi-select file requestor working
a7abfa4 2025-05-12 Adjusted prompt and new revert checkpoint if going fubar
dd140f6 2025-05-12 Checkpoint before creating file upload widget
b91083f 2025-05-12 Cleanup
255b026 2025-05-12 Prompting
f26e7ec 2025-05-12 Adding trailing slash automatically on domains with no path
894974e 2025-05-11 Persistence across workflow instances
0f57516 2025-05-11 Locking in on single user profile for reuse
df8c794 2025-05-11 Ephemeral vs. Persistent Login test branding
8787a50 2025-05-11 True persistence
39dc1b8 2025-05-11 Another placeholder
b0759dc 2025-05-11 More automation rules
bc3ff31 2025-05-11 Perfect
e1186a9 2025-05-11 Timing improved
ad69ccc 2025-05-11 Nailed the behavior
c16c07e 2025-05-11 Nearly correct behavior
6770305 2025-05-11 Step 4 inserted on browser automation
1c1f3aa 2025-05-11 Switched to widget_container
263fd8c 2025-05-11 Added descriptions
a7e74da 2025-05-11 Corrected automation pattern
e1b749b 2025-05-11 Adding a rule
fc6ab59 2025-05-11 Great success
cbb07c1 2025-05-11 Correcting step 2 display
abf455f 2025-05-11 Workflow flows correctly
0471a1e 2025-05-11 More struggling with finalize/unfinalize
4ca11ed 2025-05-11 Again, very close
30dda0b 2025-05-11 Revert button is there
96c8fce 2025-05-11 Very close
71e700f 2025-05-11 Closest yet
199def2 2025-05-11 Exploratory progress
81c3077 2025-05-11 Superprompt help
082feef 2025-05-11 Workflow progression correct
9698a1d 2025-05-11 Very good state
34d4aa7 2025-05-11 First attempt at implementation, Google balks at login
e067ca9 2025-05-11 Preparing for automation persistence
9399bf4 2025-05-11 Consolidating worklfow implementation guide
7cfd4f4 2025-05-11 A very clarifying pass
19700ca 2025-05-11 Expanding workflow implementation guide
f28aef0 2025-05-11 Making a master workflow implementaiton guide
4405ac9 2025-05-10 Headers are now saved correctly
a7d7682 2025-05-10 File saving now working but headers empty
7f44570 2025-05-10 Still broken but making reset points
17e2e76 2025-05-10 Broken but important step
676aa53 2025-05-10 Language of the crawl and save worked out
9b4015f 2025-05-10 Removed the Open URL Again buttons
a65b181 2025-05-10 Step 2 is an identical copy of Step 1
e9d0a2f 2025-05-10 Blank placeholder and Finalize step visually separated
77874f7 2025-05-10 Adding blank placeholder in browser automation
1a686fc 2025-05-10 Added blinker==1.7.0 to requirements
920e89b 2025-05-10 Getting ready for selenium-wire implementation
7ef7b89 2025-05-09 Now we have a browser automation workflow
e52bda7 2025-05-09 Selenium automation is in the Widget examples
182821b 2025-05-09 Blank Placeholder added to Widget Example workflow
6cc48b2 2025-05-09 Selenium automation is now in the URL Opener workflow
6f5b0f2 2025-05-09 Blank placeholder in URL Opener
491de18 2025-05-09 Workflow automation of browsers using Selenium working
b553f21 2025-05-09 All the Open URL Again buttons using Selenium
6a3ca4f 2025-05-09 Selenium integration success
3e59f63 2025-05-09 Initial Selenium integration: Add dependencies and test script
c7d7803 2025-05-09 About to do browser automation
adab4d7 2025-05-09 Added missing training prompts
08eb12b 2025-05-08 [‚ùå ERROR] Database operation __getitem__ failed | KeyError: 'show_all_plugins' fixed
9763e18 2025-05-08 Better delay for Pipulate start
3ec639b 2025-05-08 Final git pull issues resolved
c785550 2025-05-08 Cleaner lower-right links
74d508d 2025-05-08 Better gantt diagaram
b07ce1d 2025-05-08 Fixed roadmap
3454270 2025-05-08 Scroll to top link
c01b995 2025-05-08 Okay, I have the LLM context aware enough in Parameter Buster
33de732 2025-05-08 Finalized message inserted
399b5a0 2025-05-08 Added a bit of paramter buster local LLM context awareness
7dc7e14 2025-05-08 About to put this context stuff to the test
1d6923d 2025-05-08 Carrying out LLM context elsewhere
431de70 2025-05-08 The local LLM knows what each widget displayed
3a35ca2 2025-05-08 Improving context
ed7de2d 2025-05-08 Giving the LLM more context in workflows
8c06acd 2025-05-08 Updating LLM context rules
8326438 2025-05-08 Made adding to conversation history a Pipulate helper function
115600c 2025-05-08 LLM context rule
bf6bc20 2025-05-08 Future
cd8abf0 2025-05-08 Trimming rules that came back
20e4187 2025-05-08 Rule cleaning
e80acaa 2025-05-08 I do believe parameter buster chain reactions are fixed
0574393 2025-05-08 Adding key rules
565c734 2025-05-08 Trimming rule cruft
052e845 2025-05-08 Rounded off download polling numbers
6a85b34 2025-05-08 Better highlighting on show all
d78436a 2025-05-08 Put in horizontal line below core plugins
05150c3 2025-05-07 Rules updates
8f59749 2025-05-07 Persona rules
751c2e3 2025-05-07 Getting dropdown menu under control
3e6b5f0 2025-05-07 Got rid of error
e9b4011 2025-05-07 Better messaging
5b12102 2025-05-07 High visibility of job polling
e5d1c10 2025-05-07 Showing polling
048eed1 2025-05-07 Really good messaging inserted
86aad0c 2025-05-07 All the message queue errors cleared
2ccc2f9 2025-05-07 Already cached messages showing for downloads
a2ad7cd 2025-05-07 Better headline on documentation
2f58ee1 2025-05-07 Zero parameter case removed
7d7726f 2025-05-07 Messaging
dcea02b 2025-05-07 Good messaging inserted
ad3b086 2025-05-07 Upped the number of parameters that can be displayed to 250
0e8d232 2025-05-07 Really good language control
e1c429d 2025-05-07 Better color consistency
34a0a9f 2025-05-07 Note about number of parameters
7892954 2025-05-07 Got rid of tilde
b980425 2025-05-07 Better breakpoints, includes top offender
df0ce20 2025-05-07 Wet workflow update
3dc8b61 2025-05-07 Brought back the column colors
abf6da4 2025-05-07 Making parameter buster rich table consistent with global one
fa7a56e 2025-05-07 Rich table worked into widget examples
e121879 2025-05-07 About to make the rich table global
5a8cc42 2025-05-07 A rich table look I can live with
5586c60 2025-05-07 Rich table look almost right
4fd723c 2025-05-07 Closing in on correct rich table look
9ebdada 2025-05-07 First version of Rich template
314f514 2025-05-07 About to extract a new widget
c53b29e 2025-05-07 Inserted step 9 blank placeholder in widget examples
f2a6952 2025-05-07 Organized recipes
1eb0e9f 2025-05-07 More recipes
1b33ffa 2025-05-07 Rules
8122999 2025-05-07 Open URL examples done
1c1732a 2025-05-07 Pre-filling in example on URL Opener
cdb9b3f 2025-05-07 Atopic Open URL step
ad9d7c5 2025-05-07 Added Open URL to widget examples
e806712 2025-05-07 Added new rules
1303c3b 2025-05-07 New Rules and URL opening
73ba113 2025-05-07 URL Opener work-in-progress plugin added
af7d24b 2025-05-07 New rule for plugin identities
d3af4c2 2025-05-07 New blog rule
e596e9d 2025-05-07 Renamed rules
509403a 2025-05-07 Rules, rules and more rules
87257d7 2025-05-07 Cursor rules about widgets
e7f02e6 2025-05-06 A bunch of cursor rules added
9b462ed 2025-05-06 Magic cookie system documented
d0ac205 2025-05-06 And the git pulls are added
81006fb 2025-05-06 Magic cookie system implemented
1340e39 2025-05-06 Commented nix flake
ff1ea1c 2025-05-05 Clear buttons worked out
3e57e39 2025-05-05 Better post Clear DB message
77723cc 2025-05-05 Renamed dev-tools to clear-db
735dca0 2025-05-05 clear-db changed to clear-pipeline
6de7630 2025-05-05 Clear DB really clears DB
de83e48 2025-05-05 Added Clear DB function in Dev mode
7ed1d68 2025-05-05 Added Clear DB link
0bea8a5 2025-05-05 Optional visibility of pipeline and cookie states
2165522 2025-05-05 Warning icon added
4e4279f 2025-05-05 Removed web log rotation
a228291 2025-05-05 Made switching menu narrower
660a228 2025-05-05 Made Dev/Prod the last menu
bfcdfea 2025-05-05 Development and Production environment switcher has spinner
5be39c9 2025-05-05 Developer and Production modes working
d9a1d3d 2025-05-05 Server restart when switching environments
5ab24e2 2025-05-05 Added Development/Production dropdown menu
87a93d7 2025-05-05 Made segments of the headline breadcrumb non-breaking
a188b44 2025-05-05 Made the dropdowns non-breaking
f5b06c8 2025-05-05 Tiny wording change and good goback state
a09918a 2025-05-05 Tiny touches on Hello World
92a3f75 2025-05-05 Better display of steps
55feeef 2025-05-05 Tiny bit of reordering
f391090 2025-05-05 CSV download arrows done
d3c8640 2025-05-05 Button logic for Widget Example done
8eefd5e 2025-05-05 Arrow refinements on Parameter Buster
4da5bec 2025-05-05 Catching web log download error
db17742 2025-05-05 Arrow rules
b3e7d5a 2025-05-05 Changed Finalize symbol to lock
43d2c3a 2025-05-05 Putting in Jupyter-like Run symbol
35843f4 2025-05-05 Made home link more obvious
18fbb67 2025-05-05 Moved Headline breadcrumb and dropdowns inline
3adc37f 2025-05-05 Stopped link code from getting into title tag
733fbc8 2025-05-04 Using Pipulate favicon
5f64381 2025-05-04 macOS fix
2c217d2 2025-05-04 macOS fix
b6846e6 2025-05-04 Rules
313dcba 2025-05-04 Removed .cursorrules
ff61d09 2025-05-04 Updated Cursor Rules
2a14b54 2025-05-04 Fixed symlink to cursor rules
b665e82 2025-05-04 Add Cursor AI rules under version control
0274316 2025-05-04 Better messaging
f10c41d 2025-05-04 I do believe this is 80/20-rule complete
3d07eee 2025-05-04 Parameter Buster in stunning state
fd60aeb 2025-05-04 Removed some notes
bf7db7e 2025-05-04 Details collapsing working in Markdown
3e154ef 2025-05-04 Verbose markdown
4f3cfd1 2025-05-04 Including parameters in markdown
afee5a6 2025-05-04 Only robots.txt remains
ed032f0 2025-05-04 Got the Finalize button back
dcbbbaa 2025-05-04 Diagnosing
5fa50c2 2025-05-04 Catching a condition
dbd5996 2025-05-04 Looking for Finalize button
75e4e10 2025-05-04 Handling edge case for parameter buster numbers
163fa4e 2025-05-04 Easy populating of sample Botify Project URL
ab0d68a 2025-05-04 Made the upper-left APP_NAME a home link
c0d5b60 2025-05-04 Making pipulate fmt use title_case function
4098e85 2025-05-04 Fixed title_case function
f4c4ae6 2025-05-04 White labeling change made
dae7dfc 2025-05-04 Fixed README
823af0a 2025-05-04 README FastHTML vs. FastAPI updates
42571d9 2025-05-04 Updated README.md
4712a18 2025-05-04 Removed foo.txt (again)
cb41349 2025-05-04 Removed foo.txt from repo
b8a3ef0 2025-05-04 Updating .cursorrules
fcb6f61 2025-05-04 Improved the markdown training with csv export
b09b770 2025-05-04 Beefed up documentation in CSV download workflow
f63a710 2025-05-04 Refined language in Connect with Botify
15433c0 2025-05-04 Spliced in a Step 7
924a172 2025-05-04 Refined slider for param count
1f8ae14 2025-05-04 Unbolded button label
6320de5 2025-05-03 Parameter Buster V1 done
2428f68 2025-05-03 Got rid of extra JS line
10c539c 2025-05-03 Just about there
95ad984 2025-05-03 Final JS showing more
b59a4b6 2025-05-03 Removed configuration
8545e13 2025-05-03 Final output almost there
5c1af68 2025-05-03 Breakpoints are linked and updating preview
773425d 2025-05-03 Links on breakpoints
5e21c4b 2025-05-03 Tweaking notes
12742a8 2025-05-03 Parameter selection solid
2aebf38 2025-05-03 Showing breakpoints
f9c1909 2025-05-03 Param preview shows right away
696782c 2025-05-03 Moved the notes
8619ca8 2025-05-03 Letting them know about the 5K limit
14091fe 2025-05-03 Showing up to 5000
269a06b 2025-05-03 Real time parameter preview
a2254e8 2025-05-03 Sliders stateful
9428523 2025-05-03 Slider step-by validation removed
5bfd724 2025-05-03 First JavaScript on sliders
7853a5a 2025-05-03 Getting ready to make sliders active
999760c 2025-05-03 Inserting sliders
528284e 2025-05-03 Showing text fields on step 5
72bd41c 2025-05-03 Excellent look
3e5fc60 2025-05-03 Spines not displayed
d2a2597 2025-05-03 Spacing so much better
8332b34 2025-05-03 Yellow Score
2fef351 2025-05-03 Height control
3069f0a 2025-05-03 Revert to step 5 preserves choice
92ec07e 2025-05-03 Stylizing
21c367e 2025-05-03 Showing input field for number of parameters to show
e77006e 2025-05-03 Controlling from constant
ac4cda0 2025-05-03 Colors matching
75cdc29 2025-05-03 Rich table pretty good
b58d04a 2025-05-03 Working on Rich borders
4f54108 2025-05-03 Just about have a good Rich table look
4ad09a3 2025-05-03 Rich output incorporated
54c7879 2025-05-03 Colors matching bars
227ffac 2025-05-03 Getting histogram appearance better
5c558bd 2025-05-03 Scaling the horizontal bars for visibility
7abb132 2025-05-03 Matplotlib against dark theme
834105a 2025-05-03 Matplotlib doing histogram of all 3 csvs
c418a8d 2025-05-03 Very close
e56fa60 2025-05-03 Histogram on all 3 csv's at once
9d1a886 2025-05-03 Switched it to matplotlib in param buster
a695da5 2025-05-03 The first histogram in param buster
4106ec7 2025-05-03 Parameter Visualization Placeholder showing for param histogram counter location
74db11a 2025-05-03 matplotlib histogram now in widgets example
8010391 2025-05-03 Making parameter analysis unfiltered
6f2a09b 2025-05-03 ASCII art back in
31114d0 2025-05-03 Widget Recipe warnings
8db1db2 2025-05-03 Workflow Implementation Guide work
651ea16 2025-05-03 Updating rules
38190eb 2025-05-03 Making download CSV example consistent
ac7c25c 2025-05-03 Same consistency in Hello World
4bfa132 2025-05-03 Putting Step word first
b65b847 2025-05-03 Making styling consistent
ac0359c 2025-05-03 Similar locked/unlocked length consistency fixes
81e5297 2025-05-03 Making more consistent spacing when toggling locked and unlocked
e8ef077 2025-05-03 Fixing documentation
8067dd4 2025-05-03 Improving documentation
350c3c0 2025-05-03 Preparing to make chain reaction better
f5ea75a 2025-05-02 Made Pipulate auto self-updating each time nix develop is run
12f9080 2025-05-02 Simplfied prompt argument and tested
2bdb979 2025-05-02 I'm happy with the context foo cleanup
fb045e4 2025-05-02 Cleaned up context foo
dab39c8 2025-05-02 Got rid of extra manifest nesting
2b5bc7d 2025-05-02 Got rid of extra manifest nesting
cc781a4 2025-05-02 Got rid of context foo chunking
8090609 2025-05-02 Fixing context foo
01c6454 2025-05-01 JavaScript widget inserted
3758a08 2025-05-01 Parameter analysis occurring
bdaef60 2025-05-01 Counter function added
7261a31 2025-05-01 get_deterministic_filepath now supports directories
12d42b8 2025-05-01 Very important state, step 6 spliced in and finalize toggle working
f07008d 2025-05-01 New Step 6 is spliced in
264dcc0 2025-05-01 Tiny touches
ab8f86c 2025-05-01 All CSVs have Full URL column
afb2f7a 2025-05-01 Chopping of sep=, in gsc csv
cc6a761 2025-05-01 Got rid of extra imports
edc22ae 2025-05-01 Unzipping the first csv
1d7e2a0 2025-05-01 Renamed to build_exports
211ef87 2025-05-01 Added the pkills for server.py
29447ea 2025-05-01 Showing what's already downloaded
2e3a8ac 2025-05-01 All 3 CSVs are downloading
b58e9bb 2025-05-01 Progress bar on Analysis step
f706931 2025-05-01 Sped up polling
0e9eef4 2025-05-01 Not Compliant reason columns added
2970c8c 2025-05-01 Not Is Compliant filter working
7d4902c 2025-05-01 Successful downloading crawl data
6dade25 2025-05-01 We have our first SiteCrawler download
0e9f09a 2025-05-01 GSC download working and UX blocking correct
a6a643c 2025-05-01 Search Console query working
23a3c34 2025-05-01 Search Console download function added
39defb0 2025-04-30 Very cool state
4572109 2025-04-30 Messaging while we wait
4dc8771 2025-04-30 Indeterminate progress bar working
2918b2c 2025-04-30 Adding coverage for download
3f41f41 2025-04-30 Step 2 revert button fixed
afbd911 2025-04-30 All steps renamed
0aafad9 2025-04-30 Step renaming almost done
f7ce51e 2025-04-30 Changing step numbers
c2ed860 2025-04-30 Deleted extra Analysis step
4d82936 2025-04-30 Analysis step moved near top
7a46626 2025-04-30 Inserted placeholder
1a42edb 2025-04-30 Naming adjustments of last step
973f6aa 2025-04-30 Brought back the Analysis dropdown menu
1855616 2025-04-30 Checking for dropdown menu
853d712 2025-04-30 Inserted placeholder for search_console
a1ec44e 2025-04-30 Updated some rules
ba9871f 2025-04-30 Changed identity of new workflow to parameter buster
6e6cfc4 2025-04-30 Checking for last analysis
c638b59 2025-04-30 Checking if has log files
8bb364a 2025-04-30 Fixed Botify URL recipe
00ab195 2025-04-30 Trailing slash
1c6ddab 2025-04-30 Fixed ordering on APP menu to be numeric
351567c 2025-04-30 Getting rid of concept of Group for URL
4096de8 2025-04-30 Matches PicoCSS colors more
16a167d 2025-04-30 Getting Botify URL in new workflow
1f3362e 2025-04-30 Added one more CSV placeholder
fd5be4e 2025-04-30 Mult-step workflow added
16bff5b 2025-04-30 Added a bunch of widget recipes
51d17b0 2025-04-30 Added a practice workflow
f7ae2e0 2025-04-30 Added Widget Implementation Guide
0caa288 2025-04-30 Added Widget Implementation Guide
c4c8e24 2025-04-30 Added blank workflow
db5cfee 2025-04-30 Step 7 turned into placeholder
83676e2 2025-04-30 Copied plain text widget in widget examples
b1dd6e8 2025-04-30 Making context foo stop if files not found
d1e07f0 2025-04-29 I'd be happy to help with that, but I need more information from you. Could you please provide me with some details about the changes you'd like me to generate a git commit message for? Specifically: * What is the project or task that these changes are related to? * Are there any specific features or functionality being added or modified? * Is there any context or description of the changes that I should include in the commit message? Once I have this information, I'll do my best to create a detailed and accurate git commit message for you.
1e429dc 2025-04-29 Updated README
b3e4415 2025-04-29 Updated README
cccc4d6 2025-04-29 Timing adjustment
8a77c59 2025-04-29 Adjusting tab timing
f140ea0 2025-04-29 Removed distracting download link from messages
98eb257 2025-04-29 H4's to H3's
d5edc9a 2025-04-29 The 2 tabs are now opened correctly on nix develop command
694ce95 2025-04-29 Making nix develop do it all
4cbe9fa 2025-04-29 Made some H4's into H3's
bb0e192 2025-04-28 Added widget training markdown doc
e726a2b 2025-04-27 Documenting default Prism choices
bb4bae3 2025-04-27 Removed redundant Copy Code button now that Prism button is working
7f6fd4f 2025-04-27 Switching to bundled prism files
c93fd4c 2025-04-27 Language tweaks
dc11c8c 2025-04-27 Rearranged widgets
d11d2a2 2025-04-27 Auto scrolling to the bottom
39380d4 2025-04-27 Markdown example pre-populated
62db4eb 2025-04-27 Markdown example now exists
07ebbc3 2025-04-27 Workflow Widget Polish Achieved
0e38546 2025-04-27 Purple buttons for things not workflow progression related
e7514d2 2025-04-27 Mermaid diagrams are in dark mode
4edf1f5 2025-04-27 The locked JavaScript widget is still interactive
31fc8d2 2025-04-27 JavaScript step 3 example much improved
b1fb7aa 2025-04-27 Step 1 is now showing submitted text as widget
2d4d737 2025-04-27 Preparing final widget polish
35db036 2025-04-27 Rich table replaced by Pandas to_html
0b735ee 2025-04-27 The Copy Button on JavaScript code-showing widget working
3e61ebe 2025-04-27 JavaScript syntax highlighting in widgets is working
c1c8e9d 2025-04-27 Updated static includes and widget js
5c9d6f6 2025-04-27 Added prism files
16faf23 2025-04-27 Added static library installer and the markedjs library
54be1ec 2025-04-27 Fixed Readme
9b6a736 2025-04-27 Fixed Readme
484052e 2025-04-26 All the widgets basically working correctly
6213e40 2025-04-26 Rich text table rendering right
8185f13 2025-04-26 First step of supporting mermaid diagrams in widgets
54850a4 2025-04-26 Context foo changes
3cf8d82 2025-04-26 Adding Widget Examples
71b4d11 2025-04-25 Getting ready to make Widget Workflow
612bb7f 2025-04-22 Edge case in workflow backstepping resolved
41cf0a0 2025-04-21 Fixed tree color
fe0f0b3 2025-04-21 Really excellent widget spacing
7e77e97 2025-04-21 Comment removed
04aab04 2025-04-21 Removed AI training prompts
6b5b727 2025-04-21 Lots of backtick fencing control
3bb95d2 2025-04-21 Removed link in bash command
2bad76f 2025-04-21 Fixed link
ca317e2 2025-04-21 README tweaks
be17dd5 2025-04-21 Testing new README.md
009ae2a 2025-04-21 Hello World template improved
353f8e3 2025-04-21 Replaced main version with organized version
cd7248c 2025-04-21 Got organized version working
0fddc22 2025-04-21 Organized version ready to test
d2f033c 2025-04-21 About to test organized version
1a42f7b 2025-04-21 Added Botify CSV training
eeb7b41 2025-04-21 A good stopping point for the night
9d65d3f 2025-04-21 Using rebuild
0e97137 2025-04-20 Showing which are already downloaded on menu
4db971b 2025-04-20 Widgets in Workflows
52a5bc7 2025-04-20 Moving widget styling into server.py core
73caa1f 2025-04-20 Put todo item in right place
7be4710 2025-04-20 Added todo items regarding formatting plans
489206d 2025-04-20 It is in a good state spacing and aesthetics wise
09a6188 2025-04-20 A lot of spacing nuance worked out
938a2c2 2025-04-20 Subtle spacing
a34801e 2025-04-20 Very subtle spacing fixes
d84ba17 2025-04-20 Tree looks like it belongs to its card
b4f4367 2025-04-20 Toggling doesn't revert step 4
0e4c353 2025-04-20 Finalized and unfinalized can be cleanly toggled
2647f37 2025-04-20 First attempt at removing chain reaction ambiguity
b8ec746 2025-04-20 Adding tree view in last location
c63bc51 2025-04-20 Proper tree view when locked
cf7f110 2025-04-20 New key on Enter blank rolled into Hello World template
6dfbd4b 2025-04-20 New key issued on attempt to sumbit blank pkey
28349d7 2025-04-20 Fixed token counts in content foo
b6c8d73 2025-04-20 The file tree is very nice
ec24c48 2025-04-20 Better tree but not quite there yet
a140ef7 2025-04-20 File tree added to show where things downloaded
aef340f 2025-04-20 Overflow to auto for first child of article so long filenames wrap
7a18c89 2025-04-20 I think I just nailed the whole spinner gauge download polling thing
614cb56 2025-04-20 Another attempt to prevent chain reaction over polling button
ccd0fd2 2025-04-20 Last of the Check Status buttons purged, but chain reaction covers polling
2c822a1 2025-04-20 Another potential step towards gauges and spinners
ab458aa 2025-04-20 Maybe closer on the spinner and progress indicator, maybe another dead end
71dfdf1 2025-04-20 Goback state
9c62796 2025-04-20 Totaling up the tokens
3a9f2a5 2025-04-20 Better formatting of token ouput
06658b2 2025-04-20 Big fixes to context foo
7985c25 2025-04-20 Removed manifest from content foo console output
adc75c3 2025-04-20 About to do some context foo
c8f6cac 2025-04-19 Potentially over-engineered registry solution
1e5e840 2025-04-19 The download is working
27ba1e6 2025-04-19 Step 4 of csv download
e2fb45c 2025-04-19 Much of the download app is implemented
615ec55 2025-04-19 Fixed type
a25ad07 2025-04-19 Documentation
5da14b1 2025-04-19 Rearranged steps
b8d2cfa 2025-04-19 More informative about click depth
3f924d0 2025-04-19 Maximum click-depth is now being calculated
2534e7f 2025-04-19 Expansion of Botify API examples
6c0102f 2025-04-19 It's clearing forward
92d9f65 2025-04-19 Step 2 is a dropdown menu
704d458 2025-04-19 CSV export currently fetching the most recent analysis
3256bd8 2025-04-19 Canonical URL being set
934a66a 2025-04-19 Adding CSV export
f4c6d1b 2025-04-19 Context foo prompt adjusted to make the article a prompt
488bb85 2025-04-18 Moved file list back to top
459bef5 2025-04-18 Context foo in good XML shape for defaults, I believe
08c5313 2025-04-18 Conext Foo using XML wrappers
84db8c0 2025-04-16 Better homepage text
10e6713 2025-04-14 I think gsc top movers is solid
8987827 2025-04-14 Separators removed
136d780 2025-04-14 Everything perfect except separators
e721c90 2025-04-14 Getting column label widths right
43a07b7 2025-04-14 Making tables markdown tables
91deb45 2025-04-13 Making sure itterate_ai uses full article
a384198 2025-04-13 Prompt adjusted to take losers into account in analysis
cdedcb8 2025-04-13 Also showing biggest losers
264e8dd 2025-04-13 Addjusted top mover prompt to get table
f306b1f 2025-04-13 Adjusted query column width
f545ad3 2025-04-12 Memory for optimized parameter combo
dcc842b 2025-04-12 First version of generate categories script
d2e0bdb 2025-04-12 The levels have indexing now
b0c91b6 2025-04-12 Parameter combination testing implemented
6a69c5b 2025-04-12 Moving all parameters to the top
b3e7773 2025-04-12 Formatting rules locked in
c90c5ce 2025-04-12 All terminations proper
5438c28 2025-04-12 Complete tree
1bef1c0 2025-04-12 Whole tree showing
fbc58a9 2025-04-12 Penultimate terminator rule enforced
36cd3c9 2025-04-12 Expanding uncategorized
d050d45 2025-04-12 Perfect tree
88b9f9e 2025-04-12 Just the last few tree trims
ce5940f 2025-04-12 Closing tree gaps
3b9740f 2025-04-12 The tree is drawing correctly
9239ada 2025-04-12 Tree view coming together
86a466d 2025-04-12 Adding category analysis
1d74180 2025-04-11 Parameterized Top N
ce2ab6d 2025-04-11 Keyworder added
6614a96 2025-04-10 Final version of gsc top movers
265b702 2025-04-10 Really nice top mover output
c7604bf 2025-04-10 Better putput
97447ed 2025-04-10 Got rid of table wraps
ff13697 2025-04-10 Linear regression slopes being calculated
343fad5 2025-04-10 Now downloads 4 days of data
94a32d5 2025-04-10 GSC Top Movers now pulling a dataframe
7f67530 2025-04-10 Top Movers GSC script added
2fd6c85 2025-04-10 Removed flake.lock from repo
7f57845 2025-04-09 Warnings addressed
2db33da 2025-04-09 Getting rid of always printing training
915f645 2025-04-09 Alice on server restart
94e0947 2025-04-09 Changed error message to warning
2fec263 2025-04-09 Standardized on landing for plugin discovery
7e7bb06 2025-04-09 Made landing not required for non-workflow plugins
1a9cb9f 2025-04-09 Gantt chart looking good
ce024a6 2025-04-09 Mermaid added locally
2f51405 2025-04-09 Task input field remains active
c94927c 2025-04-09 Changed filename references in file
a3023a5 2025-04-09 Iterate ollama to iterate_ai.py
b0a529d 2025-04-08 Roadmap updates
472ce80 2025-04-08 Docs
0c43ec9 2025-04-08 Tiny tweak
07e972d 2025-04-08 Various README updates
e0ec814 2025-04-08 Added iterate_ollama.py and the concept of pipulate precursors
08d6322 2025-04-08 Standardized menus
aac501d 2025-04-08 Spacing adjustment
e5752c3 2025-04-08 The look of profile links matches task links
568e481 2025-04-08 Context is everything
68f23dd 2025-04-08 Stream simulator uses message queue
efd9e06 2025-04-08 Showing usernames correctly
06a9c2c 2025-04-08 Message queue used in Connect with Botify
902543a 2025-04-08 Message queue externalized into Pipulate
0e49ff1 2025-04-08 Unblocking message queue
739457a 2025-04-08 Brought back correct streaming
40654be 2025-04-08 H3 to H4 on steps
83f92db 2025-04-07 Stream simulator default spacing
7bd6154 2025-04-07 Spacing tweaks on streamer
390facb 2025-04-07 Higher dropdown menu contrast
5e5496b 2025-04-07 Better spaces on streaming simulator messages
a425a62 2025-04-07 Stream simulator working
4d294b0 2025-04-07 Reordering menu
038f9e8 2025-04-07 Global Unlocked text/emoji
7c1f402 2025-04-07 Messaging tweak
c9ee699 2025-04-07 Bad tokens rejected gracefully
1042a41 2025-04-07 Always clears forward when new API key is given, always lands on Finalize
2a00928 2025-04-07 Connect with Botify gracefully fails if LLM not there
fe10f5e 2025-04-07 Carried over fast key entry to connect with botify
83764b0 2025-04-07 The stuck feeling on the key gone
a126121 2025-04-07 More docstrings
d8a28ed 2025-04-07 Docstrings added
46e77c0 2025-04-07 Connect With Botify Beautified
01d60ff 2025-04-07 A good look
d5ddb24 2025-04-07 More externalization
cec2b83 2025-04-07 Externalized run_all_cells
a25cc89 2025-04-07 Pipeline clearing very clean
a0989ce 2025-04-07 Simplified
d1b43d1 2025-04-07 The displaylist logic moved to Pipulate
27275b4 2025-04-07 Displaylist dyamically adjusting
6a1eb8f 2025-04-07 Adding pid to display list immediately
ff768e1 2025-04-07 Clearing pipeline resets id field immediately
f8378ea 2025-04-07 Clear message shows which pipeline was cleared
2b6e564 2025-04-07 Clear button shows pipeline
c878c96 2025-04-07 Keys are worked out
850ac6b 2025-04-07 Changed number in key to XX format
352106b 2025-04-07 Adjusting key language
2a15984 2025-04-07 DISPLAY_NAME being used in auto keys
fbf99a1 2025-04-07 Simplifying Hello World
9b484a1 2025-04-07 Controlling app menu order with filenames
9a98e47 2025-04-07 make_singular function
f0baa65 2025-04-07 Doesn't make new table copy/pasted tasks.py
0587501 2025-04-07 About to prevent temporary tables from getting into sqlite
f9261c7 2025-04-07 Text tweak
a9d7c9e 2025-04-07 Text tweak
3f71b1c 2025-04-07 Text tweak
93d9e9d 2025-04-07 Text tweak
7fca53e 2025-04-07 Note in context foo
f2d7071 2025-04-07 Now includes URLs in cat foo files
804f606 2025-04-07 More command line arguments for output control
2b17cf1 2025-04-07 Gzip added
049c526 2025-04-07 Both files output
f0adb1b 2025-04-07 First file nearly empty on cat foo
3f3b2c2 2025-04-07 On the path to chunking the whole blog
35ab81f 2025-04-07 First step towards massive token window chunking
2e88027 2025-04-07 Information added about files processed
e92671e 2025-04-07 --cat arg on context foo
2fbb098 2025-04-07 Context foo has cat foo capabilities
255c07c 2025-04-07 Fixed redundancy in context_foo file list
05c1081 2025-04-07 About to make big change to context_foo to make it cat_foo too
9d3b401 2025-04-06 Todo prompt in Context Foo
d92a8da 2025-04-06 Removed sizeit as context_foo took over
525ebc9 2025-04-05 Taking long context-establishing lines out of server.py now that context_foo.py exists
5934576 2025-04-05 Context Foo added
a8f77c6 2025-04-05 Subtle key language
52c3fcd 2025-04-05 Profile menu staying in sync with profile app
d709b32 2025-04-05 Better to_xml wrapping understanding by code assistant
5effbd6 2025-04-05 Tiny language tweak about keys and returning to workflow later
6fc9d3c 2025-04-04 Cursor moved to end of key field
47b2b6a 2025-04-04 Switched pkey field to search type for the little x clear widget
cac3818 2025-04-04 Auto incrementing pseudo composite primary keys
779daf6 2025-04-04 About to go for incrementing part of pseudo composite key
564ca5d 2025-04-04 Very close
61a62b5 2025-04-04 Carrying plugin and profile name into workflow in prep for pseudo compound primary key
0ce0e92 2025-04-04 Corrected Existing or new language
8d55971 2025-04-04 Added comment to that effect
d43cc21 2025-04-04 Got the pretty revert buttons back
1187168 2025-04-04 Mobile stripped out
8a8da3c 2025-04-04 Stripping out the mobile chat feature
282e701 2025-04-04 Small consistency touches
5cc6f26 2025-04-04 fmt used on field names in update
283d2e1 2025-04-04 More tiny normalization
e166a57 2025-04-04 Normalized paths
39eb1d6 2025-04-04 Home highlighted correctly
f2517a6 2025-04-04 Menu more consistent
2541b83 2025-04-04 Profile filtered from menu
2020759 2025-04-04 Made profiles plural in profile-picker menu
e4a5635 2025-04-04 Even after my first agentic success, I'm still deleting the externalized Introduction plugin
5f277cc 2025-04-04 Adding introduction plugin
e75abd8 2025-04-04 OMG, my first fully agentic edit. Externalized Introduction
3ef33ce 2025-04-04 Pipeline ID to Workflow ID
b1bb7ff 2025-04-04 Added training tasks markdown and a secret word system to confirm prompt injection training
a441d4b 2025-04-04 Changing pipulate logo to 50% grey
44aca92 2025-04-02 One more LLM message after token save
8813794 2025-04-02 Subtle spacing worked out
cb3f53e 2025-04-02 The LLM greets them right away upon validation
6f70ab1 2025-04-02 Pipulate fmt replacing periods with spaces
f2c1b4b 2025-04-02 Hyperlinked account link shown in workflow and message area
503afc0 2025-04-02 About to link workflow url
b7cf19c 2025-04-02 Token field turned into password field
e9ae7dd 2025-04-02 SEMRush file not necessary at beginning of striking distance analysis
6c6620e 2025-04-01 80/20-rule good enough validation
3ae18bd 2025-04-01 Getting username on workflow
81a421a 2025-04-01 Added .gz to .gitignore
5c8b574 2025-04-01 Runs top to bottom
0f84e42 2025-04-01 Fairly good state with Botify examples
b32b5e1 2025-04-01 Timing issues and documentation
7faf8d7 2025-04-01 More documentation
dcbde0b 2025-04-01 Much better instructions
f4e9d82 2025-04-01 Information about paths and better setting of API file
b8572f1 2025-04-01 Adding a lot of documentation
d3a0210 2025-04-01 Adding the big Botify API tutorial notebook
484af9e 2025-04-01 Stripping out Notebook data
af1f175 2025-04-01 Added .gitattributes
6a56202 2025-04-01 Notebook checking for files
6e13c33 2025-04-01 Perfect Connect With Botify Workflow
1a47cf4 2025-04-01 Consistent messaging
c9ef526 2025-04-01 Adjusting messaging
45f552f 2025-04-01 Undid unnecessary loguru import
5559d89 2025-04-01 Links in the text stream
1692f77 2025-04-01 Trying to get hyperlink in stream
05e5333 2025-04-01 Simplest plugin possible, no steps
7cc3ed7 2025-04-01 About to strip down connect with botify workflow
cec82e2 2025-04-01 Renamed pipeline url field to pkey and placeholders to cells
3d49352 2025-04-01 Added id_conflict_style to Pipulate
d7423f4 2025-03-31 Better tagline
7db4c5b 2025-03-31 Put logo back
6dde2c3 2025-03-31 Every time
3adde81 2025-03-31 With and for italics
0729601 2025-03-31 Tiniest tweaks
f6488b5 2025-03-31 Tweak opening paragraph of readme
7c8c118 2025-03-31 Poem tweak
089617d 2025-03-31 Poem tweak
0f1ba1e 2025-03-31 Greatly enhanced readme
0b6bb63 2025-03-30 Spacing nuances worked out, I think
eb26012 2025-03-30 Got spaces in streaming mostly worked out
edb7473 2025-03-30 Space after endpoint messages added
9e42242 2025-03-30 Eliminated extram temp_message parameter
08e1615 2025-03-30 Spaces before and after messages in crud actions
c46d573 2025-03-30 Removed chatq
563a354 2025-03-30 Streaming is working in plugins
ca2fbce 2025-03-30 The stream function in Pipulate works
b0e7b46 2025-03-30 All CRUD messages in ProfileApp work. BaseCrud chatq now self.send_message
a856f01 2025-03-30 Stream fixed in ProfileApp and endpoint messages
5337031 2025-03-30 Dependency injecting big rearrangement
7f3ca00 2025-03-30 Cleaning up dependency injection
3a770e9 2025-03-30 Renamed hello_world.py to hello_workflow.py
a88142c 2025-03-30 .gitignore add wip folder and .csv
0205c20 2025-03-29 Starting to run everything through pipulate
5727396 2025-03-29 Considerable object renaming in CRUD plugin
2d27ec5 2025-03-29 Paramterized striking distance threshold
8a71621 2025-03-28 Added striking distance notebook
812d5c5 2025-03-27 Added minimum plugin
651436c 2025-03-27 I've externalized the stream simulator but without the LLM text showing
0f89af4 2025-03-27 Stream simulator externalized but double currently
42e3336 2025-03-26 Profile menu message tweak
b953f6c 2025-03-26 Checkboxes not unchecking in Profiles anymore on edit
7d2facd 2025-03-26 Sorted out sorting
406e5f6 2025-03-26 About to try to fix profile sorting
8385ca6 2025-03-26 Tasks is now a generic list plugin only requiring a file rename
8a36fa5 2025-03-26 Got rid of concept of singular vs plural tablenames
da24970 2025-03-26 Fixed sorting
cb752c8 2025-03-26 Changed _sort to /sort in BaseApp (broke Profile sort)
e205e4b 2025-03-26 Tasks update and checkbox working but sorting broke
6b238fe 2025-03-26 Did the rename but wasn't softwired
61744d3 2025-03-26 Renaming todo.py to tasks.py to test resiliency
112c8e6 2025-03-26 Todo sorting working again
199165e 2025-03-26 More renaming of workflow to plugin objects
6b7e157 2025-03-26 Clearing Todo field after Add
2007e18 2025-03-26 Adding externalized todo
b7dff01 2025-03-26 workflow_classes to plugin_classes
4ed5a02 2025-03-26 find_workflow_classes to find_plugin_classes
ed4bd9a 2025-03-26 discover_workflow_files discover_plugin_files
d7708b3 2025-03-26 workflow_modules to plugin_modules
0862fad 2025-03-26 workflow_instances to plugin_instances
005032f 2025-03-26 Brought chat back
1e6843e 2025-03-26 Fubar
29930b8 2025-03-26 About to tear out integrated todo
c713e8a 2025-03-26 Subtle centring issue on li edits
087016e 2025-03-26 Got rid of trashcan hyperlink
96b0346 2025-03-26 Clearing Add field in Competitors
8699c58 2025-03-26 Softwired database name, made it match app name
34c7d4a 2025-03-26 Connecting database name to app name
54e28d4 2025-03-26 Completely externalized competitor list (sorting works)
fa8a845 2025-03-26 Almost there. Sort isn't committing
db8301d 2025-03-26 Explicit dataclass definition eliminated in competitor plugin
42e71c8 2025-03-26 Externalized CRUD app almost working
b3c4af1 2025-03-25 Hello Plugin
a800eb6 2025-03-25 Plugin stuff torn out
abb9368 2025-03-25 Changed workflows folder to plugins folder
dddcc79 2025-03-25 Edited out ToDo
cc29b4e 2025-03-25 Maybe not use these plugin attempts
44d8fe8 2025-03-25 RENDER DEBUG to DEBUG
0c7ab1e 2025-03-25 Added chat interface js
c3c48c2 2025-03-25 Externalized the chat interface JavaScript
8aa5daf 2025-03-25 Externalized some chat scripts
f7b95aa 2025-03-25 Externalized todo training
fa331cc 2025-03-25 Function renaming and trimming
70d8cb9 2025-03-25 name function to title_name
df01d17 2025-03-25 Removed dead JavaScript code
e28b951 2025-03-25 Took out Figlet and Easter Egg
6bc098d 2025-03-25 Got rid of DOWNLOAD_DIR
e7aceb4 2025-03-25 Got rid of display_conversation_statistics
87d0e93 2025-03-25 Got rid of PERMITTED_LLM_ACTIONS
584a109 2025-03-25 Got rid of CRUD_PROMPT_PREFIXES
78b76e0 2025-03-25 More attribute stacking
87f9890 2025-03-25 Stacked attributes
623093a 2025-03-25 CRUD is DRY and Workflows are WET
552ecf3 2025-03-24 Fixed endpoint message
94bca71 2025-03-24 About to eliminate APP_NAME
fb77ca0 2025-03-24 Moved things around
9f1f771 2025-03-24 Moved finalize append and step indices to later
e0763dd 2025-03-24 CHANGE THIS messages added
8ae22fb 2025-03-24 Close to final first state
627163f 2025-03-24 Stacked parameters
e2d3d1c 2025-03-24 Removed the hello webpage example
56d9070 2025-03-24 Comment left about colliding ID warning
ace6bb4 2025-03-24 Adding hello webpage
83b0eff 2025-03-24 About to try resolving an ID collision issue
70ccd42 2025-03-23 autopep8 and isort workflow template
c4d7aa4 2025-03-23 Stacked some attributes for shorter line
009cdd3 2025-03-23 Got rid of get_training_text function reference
dcb6346 2025-03-23 Changed simulated_stream to just stream
c3340b4 2025-03-23 Preparing to automate step endpoint creation
f44ad8d 2025-03-23 Rearranged methods
282d4b5 2025-03-23 Externalized all styles
039d7cb 2025-03-23 Decentralized validation and processing
a1a8b60 2025-03-23 Slight simplification removing extra functions from workflow
0e77df4 2025-03-22 Finalize was WET. Extra router removed
2cc2957 2025-03-22 Remved 4 dead return lines. Finalize not yet WET
4f6f8c3 2025-03-22 The code is WET but generic handlers still in
a95c6cb 2025-03-22 Last DRY step
919ba70 2025-03-22 Shortened self.app_name
e6a8f86 2025-03-22 Shortened workflow_steps to just steps
e011567 2025-03-22 Lower-cased step_messages variable
a49d4ce 2025-03-22 Shortened workflow_steps
7b97df3 2025-03-22 Changed self.STEPS to self.workflow_steps
b3f31e6 2025-03-22 Renamed self.steps to self.steps_indices
03a081fe 2025-03-22 One shortening of pipeline
6378ef9 2025-03-22 Shortened db path
93b944f 2025-03-22 Shortened self.pipulate to just pip
2ea6103 2025-03-22 Removed extra endpoint and delayed greeting
95c3cc1 2025-03-22 Re-routing through shims, but too wet
f88aa7b 2025-03-22 Unconnected function wrappers added
a90cf9d 2025-03-22 Step 1 of untemplating
96ea5e1 2025-03-22 Workflow backup added
d5e8959 2025-03-19 Readme tweak
d76a079 2025-03-19 Hello World working
df205e2 2025-03-19 Got Hello World, but lost unfinalize
bf84c26 2025-03-19 Took star out after client
a63274c 2025-03-19 Minimal Hello World
8e6853d 2025-03-19 Changing starter template to hello world
ef9733a 2025-03-18 Renamed svg
6c46abd 2025-03-18 Didn't need wip folder anymore
4d6ed94 2025-03-18 Article link
bf7b11e 2025-03-18 Headline tweak
c66505d 2025-03-18 Headline tweak
9ec01da 2025-03-18 Headline tweak
4360c3b 2025-03-18 Removed flake8 file
63b001b 2025-03-18 Link to me
ff4ca35 2025-03-18 Added license
b1dd067 2025-03-18 Tuple unpacking explanation
8a7a19e 2025-03-18 Tiny tweak
32acac0 2025-03-18 Tiny tweak
54714ce 2025-03-18 More tweaks in the AI training
3c4639b 2025-03-18 More tweaks in the AI training
e83bbfc 2025-03-18 Separators
304d473 2025-03-18 Tiny tweak
0da9ffe 2025-03-18 Tiny tweak
7905b46 2025-03-18 Tiny tweak
5b274c9 2025-03-18 More readme tweaks
eee237f 2025-03-18 More tweaks
3a7f871 2025-03-18 More readme
d267590 2025-03-18 Readme tweaks
953ffed 2025-03-18 Tweaks to get ASCII art correct
5f3f754 2025-03-18 Last logo tweak, I think
9841910 2025-03-18 Further logo tweaks
0b30b25 2025-03-18 Tweaking logo link
aeafa5f 2025-03-18 Adding SVG logo
67020b8 2025-03-18 Welcome back, Pipulate
b87693a 2025-03-08 Rolling back
542efd7 2024-10-11 Very good shape, tests included
9d0b58e 2024-10-10 Main Template
5b9e12b 2024-10-09 Sorted menu
92062c3 2024-10-09 Another perfect version. Don't add s
504b9bd 2024-10-09 Now with fewer watchfile restarts
df598b4 2024-10-09 Really good state
cb981cd 2024-10-09 A 2-pixel tweak
d35e83e 2024-10-09 Sorting now with comments
93241df 2024-10-09 Proper highlighting
662485f 2024-10-09 Placeholders for apps
ef3c687 2024-10-09 Cleaner
664b1fd 2024-10-09 Menus won't wrap
e5f529e 2024-10-09 Checkboxes controlling appearing profiles on menu
9e18272 2024-10-09 Passing search param correctly
517d702 2024-10-09 Search form wired back up
09d8ad3 2024-10-09 All the latest
5dc6f23 2024-10-08 All endpoints present
61b99c5 2024-10-08 Latest
2ea798d 2024-10-08 A priority hook in todo for later sorting feature
dcc62a1 2024-10-07 Most reliable update state
dc346d0 2024-10-07 Here's update
96c2e9f 2024-10-07 Good enough to stop at
bc22c44 2024-10-07 Update button not necessary
e9c1e46 2024-10-07 Anchor text link removed
58cd0da 2024-10-07 Basically there
06c8afe 2024-10-07 Nearly there with the updates button
a811e12 2024-10-07 Hiding Update buttons with css
210f13f 2024-10-07 Update occuring correctly
102f285 2024-10-07 New approach all updates at once
28f13f1 2024-10-07 Funky buttons
a307af7 2024-10-07 Good form
9bc3e60 2024-10-07 Looking like a good update button
eafc6f7 2024-10-07 It contains the correct text when edit todo
61b8715 2024-10-07 Clicking link brings up input field
4d5484a 2024-10-07 The todo link wired to delete
8e8468b 2024-10-07 Now with links on todos and smiley emoji
9828769 2024-10-07 Todo now with a profile filter
c95736b 2024-10-07 Using the .xtra feature of MiniDataAPI
bf22dc0 2024-10-07 Even better, Pipulate Chatbot
d6a0bce 2024-10-07 Chatiner Face
1d604be 2024-10-07 Instructions on plugging in new stuff returned
b339c88 2024-10-07 A lot of comments added
3a5d665 2024-10-07 Better errors when no ollama
8be4031 2024-10-07 Eliminated function name conflict
847a793 2024-10-07 About to use .xtra filter for Profile separated todo lists
f0a98c5 2024-10-07 Some app integration notes (may be the starting template)
2d1dcfe 2024-10-07 Stripped down to bare minimum
1789b4a 2024-10-07 Menu activation toggles
cdd8538 2024-10-07 Now without a redundant headline
94d311d 2024-10-07 Proper section message on explore change
a41b7fb 2024-10-07 Menu pageload events now with streaming chat messages
c751976 2024-10-07 Pageloads now with chat messages
8142272 2024-10-07 Hacked a solution, polish from here
26befd3 2024-10-07 Profoundly promising
0e29372 2024-10-07 Removal of app working
ce873a5 2024-10-07 Very promising. Store restored
ab46a78 2024-10-07 Promising move forward
1cf2bb3 2024-10-07 The full page load solution
e254fea 2024-10-07 Indicator added
f578bfd 2024-10-07 Last point I'm comfortable with
298f337 2024-10-06 The menus are now dynamic and record the last selected item
0939cd7 2024-10-06 Debug off and grid as 70% 30% constant
ed290d3 2024-10-06 Single tenant profile menu
f736048 2024-10-06 Simplifying persistence layer
8e92a5f 2024-10-06 Better name for db persistence layer
56dd3d6 2024-10-06 Better primary key for store
b6c9335 2024-10-06 The basis for a key/value store persistence layer
d17f740 2024-10-06 Foundation of generic key/value store persistence layer
c5c8fc9 2024-10-06 A few more items on the explore menu
5e2f7a9 2024-10-06 About to do some radical tests
c40a7e4 2024-10-06 Supporting multiple tables
7ad0d93 2024-10-06 Experimenting
b10a8c1 2024-10-06 Removing unnecesary arguments
4dc52cd 2024-10-06 justify-content: flex-end
b6b7e87 2024-10-06 Third menu item working
b091494 2024-10-06 Added Explore Menu
30af8ce 2024-10-06 Instructions built in for adding new menus
d5bd614 2024-10-06 Removed USER_STYLE
1bf6c31 2024-10-06 Probably as far as cleaning and UI improvements go
bd5869f 2024-10-06 Simplified menu making logic
c828877 2024-10-06 Combined menu making logic
4c60a48 2024-10-06 More careful cleaning
2a9429d 2024-10-06 pep8 restyling of reordering
058231e 2024-10-06 A major re-ordering for clarity
806fe25 2024-10-06 As good as it gets
d7e5fd5 2024-10-06 Labeling sections
911c33e 2024-10-06 Another safety commit for goback reasons
48404493 2024-10-06 Formatting prompts for easier reading
77cdf45 2024-10-06 Safety commit for goback reasons
f29120e 2024-10-06 One style per line
bfaf0ab 2024-10-06 A major cleaning
d675e8e 2024-10-06 action_summary_id -> action_id
08f9590 2024-10-06 More css cleanup
f459436 2024-10-06 CSS cleanup
b5dcc5c 2024-10-06 Llama function consolidations.
68c369f 2024-10-06 Center menu items
15fa2d4 2024-10-06 Aligning text-align: center in menus
9e488b4 2024-10-06 Added a lot of type annotations
8e7bc98 2024-10-06 Much snappier and non-blocking chat
f7e19bd 2024-10-06 Chat Menu totally converted to Profile Menu
124b08f 2024-10-05 Elimination of SimpleChatter
c03bcf8 2024-10-05 flake8 and isorted
79a4a92 2024-10-05 More cleaning and documenting
b365274 2024-10-05 Cleaning and documenting code
1e0dd56 2024-10-05 Cleaning
bb94ed3 2024-10-05 A lot of chatq refactor
59ddf8f 2024-10-05 Got rid of extra typing delay
79d6f1b 2024-10-05 Broke out typing delay into constant
1007cc6 2024-10-05 generate_and_stream_ai_response to stream_chat
f752f68 2024-10-05 Installing to Pipulating
c0af207 2024-10-05 Chat to profile menu
730eab7 2024-10-05 CHAT_INTERFACE_WIDTH to PROFILE_MENU_WIDTH
be41196 2024-10-05 Menu language to profiles and actions.
be7a897 2024-10-05 Nailed the ACTION_MENU_WIDTH width.
2c88d17 2024-10-05 Controlling widths
328def8 2024-10-05 Trashcan emoji
ba8af8a 2024-10-05 First Cursor AI commit
b968c25 2024-10-05 Adjusting widths
52a5174 2024-10-05 Forced
a7e3f4b 2024-10-05 Rolled back double quote stuff
0604b68 2024-10-05 Stopping inserts of empties
debbcf2 2024-10-05 Word limit properly LLM-fed
eab5f67 2024-10-05 Supporting no name
b326ce3 2024-10-05 Standalone, todo_app not needed
0c98f92 2024-10-05 The Send button locks and unlocks correctly
deaf4bc 2024-10-05 You: message removed, good state
45e104d 2024-10-05 Nailed the nav spacing
3db29ec 2024-10-05 The greatest of all goback states
8f8c640 2024-10-05 Self contained
d1a74cb 2024-10-05 Organized
738264b 2024-10-05 Menus changing
3e6a847 2024-10-05 Menus working but other things broke
23de45a 2024-10-05 The closest to ideal yet, but menus not sticky
6cc6c25 2024-10-05 Centralizing variables
470bfb2 2024-10-05 This is the look
1a27406 2024-10-05 Wee bit closer
0e3e077 2024-10-05 More visual control
26119ab 2024-10-05 Maybe better
ba8b3e2 2024-10-05 More even
30766d4 2024-10-05 Matching field styles
f9d1029 2024-10-05 Worth staying up all night for
e4a83c5 2024-10-05 A good look
4fcefd2 2024-10-05 Subdued x
be51b5b 2024-10-05 x on search bar
1ce3761 2024-10-05 Search typing
f51bf21 2024-10-05 Very good search only needs type effect
375a117 2024-10-05 Search almost wired
be81db8 2024-10-05 Toggle removed
b9bd996 2024-10-05 Closer on light mode toggle
a40e2c0 2024-10-05 Menus are typing effect
b81ec49 2024-10-05 Closer on the color mode
4f99b9a 2024-10-05 Getting close with color toggle
383a699 2024-10-05 Menus behaving, disappearing on click
21c171a 2024-10-05 Yellow user color
8630952 2024-10-05 Menus wired to AI
b9d2457 2024-10-05 Some nav layered in
ebdb5d8 2024-10-05 Using selects as nav
3e8b586 2024-10-05 Fewer words
7ac566a 2024-10-05 Best state yet
714b3d8 2024-10-05 Incredibly good state
0aba6a8 2024-10-05 Send button working again
db680ca 2024-10-05 Fixed link in lower right
c319ba8 2024-10-05 Poking implemented
26bdf89 2024-10-05 Poking the Todo List almost there
9a2c735 2024-10-05 Another interesting state
02f2056 2024-10-05 Interesting state
4f8141d 2024-10-04 Deleted server.py
cc84a7d 2024-10-04 Checkboxes and working delete
5968ee3 2024-10-04 Checkboxes being used but delete link gone
d2a8bab 2024-10-04 Better sizes
0acf75d 2024-10-04 Narrower chat column
c15d4f8 2024-10-04 Tiny bit more consolidation
3939d03 2024-10-04 It comments on toggling too now
bc66532 2024-10-04 It can comment on deletes now
62872db 2024-10-04 Extremely responsive
5671213 2024-10-04 Communication every time a todo is submit
634a66c 2024-10-04 Two independent apps on one page, delete now working
ce768b3 2024-10-04 Chat and todo co-existign but for delete
9d15c3a 2024-10-04 Now with 2 columns
c02f696 2024-10-04 And now in matrix green
067369a 2024-10-04 And now with some style
a4eb51b 2024-10-04 Externalized ollama check
52d6848 2024-10-04 And now it checks for the right llama version
50b101a 2024-10-04 And now with the cursor left active
6eef0d5 2024-10-04 And now with the typing effect
6ec4598 2024-10-04 pipulate.py is reborn
42df0a9 2024-10-04 Todo app complete
391afc2 2024-10-04 Todo app in-progress added
86a7b8b 2024-10-03 Redundant div removed
81ba824 2024-10-03 Now with titled
b0d5234 2024-10-03 Now with Pico CSS
4ab2efc 2024-10-03 Long-running task simulated in more straight forward way
e67adad 2024-10-03 Simulating long-running background task with fasthtml
c47e454 2024-10-03 FastHTML WebSocket Hello World
a86ed8c 2024-10-03 WebSockets Hello World
2d32e80 2024-10-03 Wiping the repo, essentially. Preparing for Darwinix base.
d71d058 2024-09-28 New flake innovations
c0fee41 2024-09-28 nb-clean run
039b75f 2024-09-28 nb-clean to requirements.txt
2215551 2024-09-27 Updated Ollama check for 3.2
64226fc 2024-09-25 Starting and stopping servers with single word commands
d093af7 2024-09-25 Tweak messaging
0e4e1bb 2024-09-25 Highly functional state
d6902bb 2024-09-25 start and stop work
a14ebe9 2024-09-25 Improved ollama check
4bbf39c 2024-09-25 Checking for Ollama on nix develop
c9b9295 2024-09-25 Added Ollama chat example
ee35387 2024-09-25 Comments
0cc5619 2024-09-25 Good launch messaging
d1e864a 2024-09-25 pip count
c6aaf2f 2024-09-25 pip check done
205e8bb 2024-09-25 Added figlet and check for numpy
a22444e 2024-09-25 Prompts working on Linux
0530783 2024-09-25 Pandas import working on Linux
7f86c09 2024-09-25 Conventional venv displayed in prompt
8a799c5 2024-09-25 Attempting to fix prompt
297e7ea 2024-09-24 Added dotenv fasthtml server
8fa0583 2024-09-24 Quieting pip
38dbd52 2024-09-24 Made to work on mac
5673089 2024-09-23 Much better approach to venv in nix
b12899f 2024-09-21 Experimenting with a language server
7f2ffd6 2024-09-18 Got rid of nbdev redundancy
3fdc4d4 2024-09-18 Better check for pre-installed packages
e1adc49 2024-09-18 Added commenting
1285f8a 2024-09-16 Took out unused software
55f013a 2024-09-16 Adding nbdev
92a94b5 2024-09-16 Fixed missing python- before fasthtml
06cff4a 2024-09-16 Added Jupyter AI with a better check
677790d 2024-09-16 Adding Jupyter AI
d239ada 2024-09-16 Latest
cb7c2cc 2024-09-16 More stable on Linux
d75aae6 2024-09-16 Testing on Mac
f12c2e6 2024-09-16 Trying to work out dependencies
b96118e 2024-09-15 Starting both servers on nix develop
75ed729 2024-09-15 Silencing the output
622f711 2024-09-15 Allowing non-free
366a945 2024-09-15 FastHTML hello world
2bc45fd 2024-09-15 Easy working goback state
588ec58 2024-09-14 Switched to nvim
57fc0fc 2024-09-14 Working
8cdac12 2024-09-14 Latest edits
61d7cf1 2024-09-14 Latest updte
b5ee1da 2024-09-14 Testing new flake
1adbeb6 2024-09-12 Updated readme
c662e2d 2024-09-12 Readme update
09eb07e 2024-09-12 Added flakes