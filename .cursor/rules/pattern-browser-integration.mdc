---
description: 
globs: 
alwaysApply: false
---
# Browser Integration Pattern

## Overview
This guide covers best practices for integrating with web browsers in Pipulate workflows, as demonstrated in [035_url_opener.py](mdc:pipulate/plugins/035_url_opener.py).

## Browser Integration

### Using webbrowser Module
```python
import webbrowser
webbrowser.open(url)  # Opens URL in default browser
```

### Profile Awareness
- Uses system's default browser
- Respects user's active browser profile
- Maintains access to saved passwords and logins
- No direct access to browser data

### URL Construction
1. Direct URLs
   ```python
   url = "https://example.com"
   webbrowser.open(url)
   ```

2. Search URLs
   ```python
   query = "search term"
   search_url = f"https://www.google.com/search?q={query}"
   webbrowser.open(search_url)
   ```

## Security Considerations

### Profile Handling
- Be aware of active browser profile
- Document profile dependencies
- Warn users about profile-specific features

### URL Safety
- Validate URLs before opening
- Use HTTPS by default
- Handle query parameter encoding

## Implementation Pattern

### URL Opening Widget
```python
# Store URL in state
await pip.update_step_state(pipeline_id, step_id, url, steps)

# Open URL
import webbrowser
webbrowser.open(url)

# Provide feedback
await self.message_queue.add(pip, f"Opening URL: {url}", verbatim=True)
```

### "Again" Button Implementation
```python
Button(
    "Open Again â–¸",
    type="button",
    _onclick=f"window.open('{url}', '_blank')",
    cls="secondary"
)
```

## Cross-Platform Support
- Works on Linux subsystem (WSL)
- Compatible with macOS
- Functions on native Windows
- Handles system-specific browser configurations

## Best Practices

### URL Handling
- Add HTTPS if protocol missing
- Validate URL format
- Preserve query parameters

### User Feedback
- Show clear success messages
- Indicate when browser opens
- Provide "Again" button for retry

### Profile Management
- Document profile requirements
- Consider profile-specific workflows
- Handle profile-based authentication
