---
description: 
globs: 
alwaysApply: false
---
# Widget UI Rendering

## FastHTML Components
Common patterns for widget rendering using FastHTML:

### Basic Widget Container
```python
def create_widget_container(self, content, widget_id):
    return Div(
        Card(
            H3("Widget Title"),
            content,
            style="margin: 1rem 0;"
        ),
        id=widget_id
    )
```

### Interactive Elements
```python
def create_interactive_widget(self, data, widget_id):
    return Div(
        Form(
            Input(
                value=data,
                name="widget_data",
                type="text"
            ),
            Button("Update", type="submit"),
            hx_post=f"/update/{widget_id}",
            hx_target=f"#{widget_id}"
        ),
        id=widget_id
    )
```

## Styling Patterns

### Consistent Theming
```python
WIDGET_STYLES = {
    "container": "margin: 1rem 0; padding: 1rem;",
    "header": "font-size: 1.2rem; margin-bottom: 0.5rem;",
    "content": "background: var(--pico-card-background-color);"
}
```

### Responsive Design
```python
def create_responsive_widget(self, content):
    return Div(
        content,
        style="width: 100%; max-width: 100%; overflow-x: auto;"
    )
```

## Best Practices
1. Use consistent component hierarchy
2. Implement responsive layouts
3. Follow FastHTML patterns
4. Handle loading states
5. Provide error feedback

## Common Patterns
1. Card-based layouts
2. Form-based interactions
3. Dynamic content updates
4. Loading indicators
5. Error states

## Performance Considerations
1. Lazy loading of heavy components
2. Efficient DOM updates
3. Proper event handling
4. Resource cleanup
5. Caching strategies
