---
description: 
globs: 
alwaysApply: false
---
# PrismJS Widget Implementation

## Core Implementation
```python
def create_prism_widget(self, code, widget_id, language='javascript'):
    """Create a Prism.js syntax highlighting widget with copy functionality."""
    textarea_id = f"{widget_id}_raw_code"
    container = Div(
        Div(
            H5("Syntax Highlighted Code:"),
            Textarea(
                code,
                id=textarea_id,
                style="display: none;"
            ),
            Pre(
                Code(
                    code,
                    cls=f"language-{language}",
                    style="position: relative; white-space: inherit; padding: 0 0 0 0;"
                ),
                cls="line-numbers"
            ),
            style="margin-top: 1rem;"
        ),
        id=widget_id
    )
    init_script = Script(
        f"""
        (function() {{
            if (typeof Prism !== 'undefined') {{
                Prism.highlightAllUnder(document.getElementById('{widget_id}'));
            }}
            
            document.body.addEventListener('initializePrism', function(event) {{
                if (event.detail.targetId === '{widget_id}') {{
                    if (typeof Prism !== 'undefined') {{
                        Prism.highlightAllUnder(document.getElementById('{widget_id}'));
                    }}
                }}
            }});
        }})();
        """,
        type="text/javascript"
    )
    return Div(container, init_script)
```

## Component Structure
- `Pre` with `cls="line-numbers"` for line number support
- `Code` with `cls="language-{language}"` for syntax highlighting
- Hidden `Textarea` for raw code storage

## Initialization
- Initialize Prism immediately when script loads
- Listen for `initializePrism` event as backup
- Use `Prism.highlightAllUnder()` for highlighting

## Example Usage
See [850_prism.py](mdc:pipulate/plugins/850_prism.py) for complete implementation.
