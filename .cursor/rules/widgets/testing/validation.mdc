---
description: 
globs: 
alwaysApply: false
---
# Widget Testing and Validation

## Input Validation

### Data Format Validation
```python
def validate_widget_input(self, data, expected_format):
    """Validate widget input data format."""
    try:
        if expected_format == "json":
            json.loads(data)
        elif expected_format == "table":
            pd.DataFrame(data)
        return True, None
    except Exception as e:
        return False, str(e)
```

### Schema Validation
```python
def validate_widget_schema(self, data, schema):
    """Validate widget data against schema."""
    try:
        jsonschema.validate(data, schema)
        return True, None
    except jsonschema.exceptions.ValidationError as e:
        return False, str(e)
```

## Testing Patterns

### Unit Tests
```python
async def test_widget_creation(self):
    """Test widget creation with valid data."""
    widget = await self.create_widget(test_data)
    assert widget is not None
    assert "widget_id" in widget.attrs
```

### Integration Tests
```python
async def test_widget_workflow(self):
    """Test widget in workflow context."""
    result = await self.process_workflow(test_data)
    assert result.status_code == 200
    assert "widget_content" in result.text
```

## Error Handling

### Validation Errors
```python
def handle_validation_error(self, error):
    """Handle widget validation errors."""
    return Div(
        P(f"Validation Error: {error}", style="color: red;"),
        Button("Try Again", onclick="history.back()")
    )
```

### Runtime Errors
```python
def handle_runtime_error(self, error):
    """Handle widget runtime errors."""
    logger.error(f"Widget Error: {error}")
    return Div(
        P("An error occurred. Please try again.", style="color: red;"),
        Button("Retry", onclick="location.reload()")
    )
```

## Best Practices
1. Implement comprehensive input validation
2. Test edge cases and error conditions
3. Log validation and runtime errors
4. Provide clear error messages
5. Handle errors gracefully

## Common Test Cases
1. Valid data processing
2. Invalid data handling
3. Edge case handling
4. Performance testing
5. Integration testing
