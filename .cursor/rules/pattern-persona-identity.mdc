---
description: 
globs: 
alwaysApply: false
---
# Plugin Persona Identity Pattern

This pattern extends [pattern-plugin-identity.mdc](mdc:pattern-plugin-identity.mdc) to support UI filtering based on user personas, maintaining Pipulate's philosophy of explicit, server-side control.

## Core Pattern

Plugins declare their target audience through the `PERSONA_TAGS` class attribute:

```python
class SomePlugin:
    APP_NAME = "internal_name"      # For data association
    DISPLAY_NAME = "User Name"      # For menu display
    PERSONA_TAGS = ["SEO", "DEV"]   # For UI filtering
```

## Implementation Rules

1. **Persona Tag Format**
   - Use uppercase for consistency: `["SEO", "DEV"]`
   - Must match values in `PERSONAS` constant in [server.py](mdc:server.py)
   - Multiple tags allowed for cross-persona tools

2. **Default Behavior**
   - Untagged plugins show only in ALL view
   - Empty tag list treated same as untagged
   - No inheritance of tags (each plugin must declare explicitly)

3. **Validation**
   - Invalid tags are ignored (graceful degradation)
   - Unknown tags default to ALL view
   - Case-insensitive matching for robustness

## Usage Example

```python
# SEO-specific tool
class KeywordAnalyzer:
    APP_NAME = "keyword_analyzer"
    DISPLAY_NAME = "Keyword Analysis"
    PERSONA_TAGS = ["SEO"]

# Developer-focused tool
class LogAnalyzer:
    APP_NAME = "log_analyzer"
    DISPLAY_NAME = "Log Analysis"
    PERSONA_TAGS = ["DEV"]

# Cross-persona tool
class SiteAuditor:
    APP_NAME = "site_auditor"
    DISPLAY_NAME = "Site Audit"
    PERSONA_TAGS = ["SEO", "DEV"]
```

## Integration Points

- Menu filtering in [server.py](mdc:server.py) `create_app_menu()`
- Persona state in DictLikeDB (`db['ui_persona']`)
- Plugin discovery in `discover_plugin_files()`

## Philosophy Alignment

This pattern maintains Pipulate's core principles:
1. Server-side control (no client-side filtering)
2. Explicit declarations (no magic/inference)
3. Simple state management (single db key)
4. Observable behavior (clear menu filtering)
